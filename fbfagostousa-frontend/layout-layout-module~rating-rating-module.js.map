{"version":3,"sources":["webpack:///./node_modules/@angular/cdk/esm5/a11y.es5.js","webpack:///./node_modules/@angular/cdk/esm5/bidi.es5.js","webpack:///./node_modules/@angular/cdk/esm5/coercion.es5.js","webpack:///./node_modules/@angular/cdk/esm5/keycodes.es5.js","webpack:///./node_modules/@angular/cdk/esm5/observers.es5.js","webpack:///./node_modules/@angular/cdk/esm5/overlay.es5.js","webpack:///./node_modules/@angular/cdk/esm5/platform.es5.js","webpack:///./node_modules/@angular/cdk/esm5/portal.es5.js","webpack:///./node_modules/@angular/cdk/esm5/scrolling.es5.js","webpack:///./node_modules/@angular/flex-layout/esm5/core.es5.js","webpack:///./node_modules/@angular/flex-layout/esm5/extended.es5.js","webpack:///./node_modules/@angular/flex-layout/esm5/flex-layout.es5.js","webpack:///./node_modules/@angular/flex-layout/esm5/flex.es5.js","webpack:///./node_modules/@angular/flex-layout/esm5/grid.es5.js","webpack:///./node_modules/@angular/material/esm5/core.es5.js","webpack:///./node_modules/@angular/material/esm5/menu.es5.js","webpack:///./node_modules/@angular/material/esm5/toolbar.es5.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACiC;AAC2I;AACxI;AAC2C;AAChC;AAC3B;AAC8C;AAClC;AACW;;AAE3C;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,mBAAmB,EAAE;AACrB,wCAAwC,uCAAuC,EAAE;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE,6CAA6C,yBAAyB,EAAE;AAC7F;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB,4BAA4B,EAAE,UAAU,8BAA8B;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,8CAA8C,EAAE;AAChD,wCAAwC,YAAY,EAAE;AACtD;AACA,sCAAsC,oDAAoD;AAC1F;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,mCAAmC,mDAAmD,EAAE;AACxF;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE,mCAAmC,EAAE;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE,mCAAmC,EAAE;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,yEAA2B,qBAAqB,IAAI;AAC7D;AACA;AACA,gDAAgD;AAChD,SAAS,gCAAgC,gIAAkC,IAAI;AAC/E,MAAM;AACN,+HAAyE,4CAA4C,kJAA4C,EAAE,4CAA4C;AAC/M;AACA,CAAC;AACD;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,sBAAsB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,oCAAoC,mBAAmB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,iCAAiC,gBAAgB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,0CAA0C,wBAAwB;AAClE,oEAAoE,4CAA4C,EAAE;AAClH;AACA;AACA;AACA;AACA;AACA;AACA,gJAAyF,4CAA4C,EAAE,qKAAuD,yCAAyC,EAAE,2EAAoB,uCAAuC,EAAE;AACtS,2BAA2B,EAAE;AAC7B;AACA;AACA,gCAAgC,EAAE,UAAU,sBAAsB;AAClE,+BAA+B,EAAE;AACjC,+BAA+B,EAAE;AACjC,gEAAgE,EAAE;AAClE;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB,4BAA4B,EAAE,UAAU,mBAAmB;AAC3D,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,yEAA2B,qBAAqB,IAAI;AAC7D;AACA;AACA,uDAAuD;AACvD,SAAS,wEAAkB;AAC3B,MAAM;AACN,sIAAgF,mDAAmD,+JAAmD,EAAE,mDAAmD;AAC3O;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,0BAA0B,EAAE;AAC5B;AACA,sBAAsB,EAAE;AACxB;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE,oDAAoD,EAAE;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,sBAAsB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,sBAAsB,EAAE;AAC7C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,YAAY,EAAE;AACzE,8EAA8E,yCAAyC,EAAE;AACzH;AACA;AACA,yDAAyD,YAAY,EAAE;AACvE,4EAA4E,0CAA0C,EAAE;AACxH;AACA,SAAS;AACT;AACA,6DAA6D,EAAE;AAC/D,6DAA6D,EAAE;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,gDAAgD,6CAA6C,EAAE;AAC/F,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,gDAAgD,mDAAmD,EAAE;AACrG,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,gDAAgD,kDAAkD,EAAE;AACpG,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,uBAAuB,EAAE,yBAAyB,EAAE;AACpD;AACA;AACA,4BAA4B,EAAE,UAAU,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,uBAAuB,EAAE,mCAAmC,EAAE;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,4BAA4B,EAAE,UAAU,qBAAqB;AAC7D,2BAA2B,EAAE;AAC7B,yDAAyD,EAAE;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,4BAA4B,EAAE,4BAA4B,QAAQ;AAClE,2BAA2B,EAAE;AAC7B,wDAAwD,EAAE;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,8CAA8C,8BAA8B;AAC5E;AACA;AACA;AACA,SAAS,yEAA2B,qBAAqB,IAAI;AAC7D;AACA;AACA,mDAAmD;AACnD,SAAS,8BAA8B;AACvC,SAAS,8DAAgB;AACzB,SAAS,gCAAgC,gIAAkC,IAAI;AAC/E,MAAM;AACN,kIAA4E,+CAA+C,6VAA6F,EAAE,+CAA+C;AACzQ;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,+BAA+B,EAAE;AACtD;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,0BAA0B,qHAAuD,EAAE;AACnF;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,0BAA0B,EAAE;AACjD;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,0BAA0B,gHAAkD,EAAE;AAC9E;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,wDAAwD,EAAE;AAC1D;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,+CAA+C;AAC/C,SAAS,kEAAoB;AAC7B,SAAS,0BAA0B;AACnC,SAAS,gCAAgC,gIAAkC,IAAI;AAC/E,MAAM;AACN;AACA,qBAAqB,qFAAuC;AAC5D,yBAAyB,gGAAkD;AAC3E;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,CAAC;AACD;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,oCAAoC,uBAAuB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,yEAA2B,qBAAqB,IAAI;AAC7D;AACA;AACA,gDAAgD;AAChD,SAAS,gCAAgC,+DAAiB,GAAG,oGAAsD,IAAI;AACvH,SAAS,gCAAgC,gIAAkC,IAAI;AAC/E,MAAM;AACN,+HAAyE,4CAA4C,iPAAqF,EAAE,4CAA4C;AACxP;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,yBAAyB,EAAE;AAChD;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,8CAA8C;AAC9C,SAAS,kEAAoB;AAC7B,SAAS,uBAAuB;AAChC,SAAS,gFAAyB;AAClC,SAAS,8DAAgB;AACzB,MAAM;AACN;AACA,wBAAwB,oFAAsC;AAC9D;AACA;AACA,CAAC;AACD;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,uCAAuC,uBAAuB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE,gDAAgD,YAAY,EAAE;AAC3F;AACA,8BAA8B,EAAE;AAChC;AACA;AACA,uBAAuB,EAAE;AACzB,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE,sCAAsC,uCAAuC;AACtG,uBAAuB,EAAE,qCAAqC,sCAAsC;AACpG;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,EAAE;AAC1B;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,6DAA6D,sCAAsC,EAAE;AACrG;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,4DAA4D,sCAAsC,EAAE;AACpG;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,kEAAkE,qCAAqC,EAAE;AACzG;AACA;AACA;AACA;AACA;AACA;AACA,4LAA8H,EAAE,MAAM,+BAA+B;AACrK;AACA,SAAS;AACT;AACA;AACA;AACA,+LAAiI,EAAE,MAAM,+BAA+B;AACxK;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,6DAA6D,6BAA6B,EAAE;AAC5F,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,sCAAsC,6BAA6B,EAAE;AACrE;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA;AACA,SAAS,yEAA2B,qBAAqB,IAAI;AAC7D;AACA;AACA,+CAA+C;AAC/C,SAAS,8DAAgB;AACzB,SAAS,wEAAkB;AAC3B,MAAM;AACN,8HAAwE,2CAA2C,2QAA2D,EAAE,2CAA2C;AAC3N;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,0CAA0C,EAAE;AACtF;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,kDAAkD;AAClD,SAAS,kEAAoB;AAC7B,SAAS,sBAAsB;AAC/B,MAAM;AACN;AACA,4BAA4B,6DAAe;AAC3C;AACA;AACA,CAAC;AACD;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEQ;AACR;;;;;;;;;;;;;;;;;;;;AC1+EA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACmB;AACgH;;AAEnI;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,CAAC;AACD;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,oCAAoC,EAAE;AACtC;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,yEAA2B,qBAAqB,IAAI;AAC7D;AACA;AACA,iDAAiD;AACjD,SAAS,gCAAgC,+DAAiB,GAAG,oFAAsC,IAAI;AACvG,MAAM;AACN,gIAA0E,6CAA6C,0GAAoD,EAAE,6CAA6C;AAC1N;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,kBAAkB,EAAE;AACzC;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,iBAAiB,EAAE;AACxC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,iCAAiC,4CAA4C;AAC7E,2BAA2B,iBAAiB;AAC5C;AACA,iBAAiB,IAAI;AACrB;AACA;AACA;AACA,oBAAoB,mFAAqC;AACzD,iBAAiB,4DAAc;AAC/B;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEQ;AACR;;;;;;;;;;;;;;;;;;AC7MA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA,WAAW,EAAE;AACb,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,mCAAmC,mBAAmB;AACtD;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,wCAAwC,EAAE;AAC1C;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEQ;AACR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3FA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,WAAW;AACzB;;AAEA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE,sBAAsB;AACvC,eAAe,EAAE,mBAAmB;AACpC,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE,cAAc;AAC/B,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE,eAAe;AAChC,eAAe,EAAE,sBAAsB;AACvC,eAAe,EAAE,oBAAoB;AACrC,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE,oBAAoB;AACrC,eAAe,EAAE,iBAAiB;AAClC,eAAe,EAAE;AACjB,eAAe,EAAE,eAAe;AAChC,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;;AAEjB;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEQ;AACR;;;;;;;;;;;;;;;;;;;;;AC9IA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACsD;AAC+D;AACvF;AACP;;AAEvB;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,yEAA2B,qBAAqB,IAAI;AAC7D;AACA,yIAAmF,sDAAsD,sCAAsC,EAAE,sDAAsD;AACvO;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,8DAA8D,wCAAwC,EAAE;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE,0EAA0E,iCAAiC,EAAE;AAC1I;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iDAAiD,iDAAiD;AAClG;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,0BAA0B,EAAE;AAC5B;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,4BAA4B,EAAE;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,gCAAgC,EAAE;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,yEAA2B,qBAAqB,IAAI;AAC7D;AACA;AACA,kDAAkD;AAClD,SAAS,iCAAiC;AAC1C,MAAM;AACN,iIAA2E,8CAA8C,mHAA6D,EAAE,8CAA8C;AACtO;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,uBAAuB,EAAE;AAC9C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,uBAAuB,EAAE;AAC9C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,oDAAoD;AACpD,SAAS,yBAAyB;AAClC,SAAS,kEAAoB;AAC7B,SAAS,8DAAgB;AACzB,MAAM;AACN;AACA,mBAAmB,2FAA6C;AAChE,sBAAsB,kGAAoD;AAC1E,sBAAsB,4DAAc;AACpC;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEQ;AACR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3TA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACoP;AAClL;AACuB;AACP;AAC/D;AACW;AACc;AAC7B;AACI;AACkB;AACmB;AACvC;;AAEjB;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB;AACjB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB;AACjB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB;AACjB;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,2CAA2C,EAAE;AACrF,yCAAyC,iCAAiC,EAAE;AAC5E;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE;AACjE,SAAS,gCAAgC;AACzC,SAAS,0CAA0C,+DAAiB,IAAI;AACxE,MAAM;AACN;AACA,CAAC;AACD;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB;AACjB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,mCAAmC,EAAE;AACpF;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,yFAAyF,EAAE,iBAAiB,EAAE;AAC9G;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY,EAAE;AACd;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY,EAAE;AACd;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA,KAAK;AACL;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA,mCAAmC,EAAE,oBAAoB,8EAA8E;AACvI;AACA;AACA,uDAAuD,mCAAmC,EAAE;AAC5F;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,iCAAiC;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,uEAAuE;AACzG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,yEAA2B,qBAAqB,IAAI;AAC7D;AACA;AACA,wDAAwD;AACxD,SAAS,iFAA0B;AACnC,SAAS,8EAAuB;AAChC,SAAS,8DAAgB;AACzB,SAAS,gCAAgC,gIAAkC,IAAI;AAC/E,MAAM;AACN,uIAAiF,oDAAoD,yhBAAqH,EAAE,oDAAoD;AAChT;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,gCAAgC,EAAE,4BAA4B,QAAQ;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,yEAA2B,qBAAqB,IAAI;AAC7D;AACA;AACA,4DAA4D;AAC5D,SAAS,gCAAgC,gIAAkC,IAAI;AAC/E,MAAM;AACN,2IAAqF,wDAAwD,8JAAwD,EAAE,wDAAwD;AAC/P;AACA,CAAC;AACD;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,SAAS,yEAA2B,qBAAqB,IAAI;AAC7D;AACA;AACA,mDAAmD;AACnD,SAAS,gCAAgC,gIAAkC,IAAI;AAC/E,MAAM;AACN,kIAA4E,+CAA+C,qJAA+C,EAAE,+CAA+C;AAC3N;AACA,CAAC;AACD;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,EAAE;AACtC;AACA,gCAAgC,EAAE;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gFAAkC;AAClC;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gFAAkC,iBAAiB,iBAAiB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,SAAS,YAAY,EAAE;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,yCAAyC,EAAE;AACrH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,wCAAwC,EAAE;AAChH;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uFAAuF,sBAAsB,EAAE;AAC/G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uDAAuD,gBAAgB;AACvE;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,2DAA2D,4BAA4B;AACvF;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,EAAE,qCAAqC,EAAE;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,EAAE,sCAAsC,EAAE;AACrF;AACA;AACA;AACA;AACA,uCAAuC,EAAE,sCAAsC,EAAE;AACjF;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,yCAAyC,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,4CAA4C,2BAA2B;AACvE;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,uCAAuC,sBAAsB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,iCAAiC,gBAAgB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,kCAAkC,iBAAiB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE,sBAAsB,EAAE;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE,0BAA0B,EAAE;AACrD,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,EAAE,UAAU,qBAAqB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE,uBAAuB,EAAE,oBAAoB,EAAE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE,sBAAsB,EAAE,qBAAqB,EAAE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE,wBAAwB,EAAE,OAAO;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,EAAE;AAClC;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gCAAgC,EAAE,4CAA4C,EAAE;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,kDAAkD,EAAE;AACpD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE,wBAAwB,EAAE,OAAO;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE,wBAAwB,EAAE,MAAM,0BAA0B;AACnF,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE,wBAAwB,EAAE,MAAM,0BAA0B;AACnF,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,wBAAwB,EAAE;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,mCAAmC,qBAAqB;AACxD;AACA;AACA,mCAAmC,uBAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,+BAA+B,YAAY;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,+BAA+B,YAAY;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,+BAA+B,YAAY;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,+BAA+B,YAAY;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,+BAA+B,YAAY;AAC3C;AACA,yCAAyC,eAAe;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,+BAA+B,YAAY;AAC3C;AACA,yCAAyC,gBAAgB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,gCAAgC,aAAa;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,gCAAgC,aAAa;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB;AACjB;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,yEAA2B,qBAAqB,IAAI;AAC7D;AACA;AACA,yDAAyD;AACzD,SAAS,8EAAuB;AAChC,SAAS,gCAAgC,gIAAkC,IAAI;AAC/E,SAAS,qFAA+B,+DAAiB,IAAI;AAC7D,MAAM;AACN,wIAAkF,qDAAqD,gaAAiG,EAAE,qDAAqD;AAC/R;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iEAAmB;AAC5B;AACA;AACA,0CAA0C;AAC1C,SAAS,+BAA+B;AACxC,SAAS,0BAA0B;AACnC,SAAS,gFAAkC;AAC3C,SAAS,gCAAgC;AACzC,SAAS,mCAAmC;AAC5C,SAAS,gEAAkB;AAC3B,SAAS,8DAAgB;AACzB,SAAS,gCAAgC,gIAAkC,IAAI;AAC/E,SAAS,0EAAwB;AACjC,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,mDAAmD;AACnD,SAAS,kEAAoB;AAC7B,MAAM;AACN;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,sBAAsB,EAAE;AAC7C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,sBAAsB,EAAE;AAC7C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,0BAA0B,EAAE;AACjD;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,0BAA0B,gHAAkD,EAAE;AAC9E;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,2BAA2B,EAAE;AAClD;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,0BAA0B,iHAAmD,EAAE;AAC/E;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,iCAAiC,EAAE;AACxD;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,0BAA0B,uHAAyD,EAAE;AACrF;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,4BAA4B,EAAE;AACnD;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,0BAA0B,kHAAoD,EAAE;AAChF;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,mBAAmB,EAAE;AAC1C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,0BAA0B,yGAA2C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,qCAAqC,EAAE;AAChG;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,kCAAkC,YAAY,EAAE;AAChD;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,sDAAsD;AACtD,SAAS,iBAAiB;AAC1B,SAAS,mEAAqB;AAC9B,SAAS,wEAA0B;AACnC,SAAS,gCAAgC,6GAA+D,IAAI;AAC5G,SAAS,uFAAqC,+DAAiB,IAAI;AACnE,MAAM;AACN;AACA,oBAAoB,kGAAoD;AACxE,uBAAuB,qGAAuD;AAC9E,qBAAqB,mGAAqD;AAC1E,qBAAqB,mGAAqD;AAC1E,mBAAmB,iGAAmD;AACtE,oBAAoB,kGAAoD;AACxE,sBAAsB,oGAAsD;AAC5E,uBAAuB,qGAAuD;AAC9E,2BAA2B,yGAA2D;AACtF,4BAA4B,0GAA4D;AACxF,4BAA4B,0GAA4D;AACxF,kBAAkB,gGAAkD;AACpE,yBAAyB,uGAAyD;AAClF,0BAA0B,wGAA0D;AACpF,+BAA+B,8GAAgE;AAC/F,2BAA2B,yGAA2D;AACtF,kBAAkB,gGAAkD;AACpE,2BAA2B,6DAAe;AAC1C,4BAA4B,6DAAe;AAC3C,oBAAoB,6DAAe;AACnC,oBAAoB,6DAAe;AACnC;AACA;AACA,CAAC;AACD;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,wBAAwB,8CAA8C;AACtE;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,uDAAuD,iDAAiD,EAAE;AAC1G;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,EAAE;AACnC;AACA;AACA,iCAAiC,EAAE;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,wBAAwB,EAAE;AAC1B,wBAAwB,EAAE;AAC1B;AACA;AACA;AACA,SAAS,iEAAmB;AAC5B;AACA;AACA,6DAA6D;AAC7D,SAAS,gCAAgC,gIAAkC,IAAI;AAC/E,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEQ;AACR;;;;;;;;;;;;;;;;;;;AC9iIA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACwF;AAC5D;;AAE5B;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA,eAAe,EAAE,qEAAqE,EAAE;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,EAAE;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,EAAE;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,yEAA2B,qBAAqB,IAAI;AAC7D;AACA;AACA,2CAA2C;AAC3C,SAAS,6BAA6B,+DAAiB,GAAG,iIAAqC,IAAI;AACnG,MAAM;AACN,0HAAoE,uCAAuC,iJAA6C,EAAE,uCAAuC;AACjM;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,uDAAuD,EAAE,sCAAsC;AAC/F,kCAAkC,qCAAqC;AACvE,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,EAAE;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA,SAAS,+DAAiB;AAC1B;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEQ;AACR;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3LA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACoB;AACyF;;AAE7G;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,EAAE;AAC5B;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,iCAAiC,wBAAwB;AACzD;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,+BAA+B,EAAE;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,uDAAuD,kDAAkD,EAAE;AAC3G;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,0BAA0B,EAAE,iBAAiB,EAAE;AAC/C;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,4CAA4C;AAC5C,SAAS,mEAAqB;AAC9B,SAAS,wEAA0B;AACnC,MAAM;AACN;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,8DAA8D,sBAAsB,EAAE;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,8DAA8D,wCAAwC,EAAE;AACxG;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,kDAAkD;AAClD,SAAS,gFAAkC;AAC3C,SAAS,wEAA0B;AACnC,MAAM;AACN;AACA,sBAAsB,6DAAe;AACrC;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEQ;AACR;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3uBA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACmC;AACyE;AACxD;AACxB;;AAE5B;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,oCAAoC,yCAAyC,EAAE;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,uCAAuC,qCAAqC;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,+DAA+D,oCAAoC,EAAE;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,4HAA+E,+BAA+B,EAAE;AAChH,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,yEAA2B,qBAAqB,IAAI;AAC7D;AACA;AACA,mDAAmD;AACnD,SAAS,8DAAgB;AACzB,SAAS,wEAAkB;AAC3B,MAAM;AACN,kIAA4E,+CAA+C,+QAA+D,EAAE,+CAA+C;AAC3O;AACA,CAAC;AACD;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,2CAA2C;AAC5F;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,gDAAgD;AAChD,SAAS,kEAAoB;AAC7B,SAAS,0BAA0B;AACnC,SAAS,8DAAgB;AACzB,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,qEAAqE,oCAAoC,EAAE;AAC3G;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE,cAAc;AACvC;AACA;AACA,4CAA4C,EAAE;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,sCAAsC,oCAAoC;AAC1E;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,aAAa,uDAAuD;AACpE,aAAa;AACb;AACA;AACA,SAAS,yEAA2B,qBAAqB,IAAI;AAC7D;AACA;AACA,gDAAgD;AAChD,SAAS,wEAAkB;AAC3B,SAAS,8DAAgB;AACzB,MAAM;AACN,+HAAyE,4CAA4C,4QAA4D,EAAE,4CAA4C;AAC/N;AACA,CAAC;AACD;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEQ;AACR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvjBA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACgK;AACxG;AAC9B;AACJ;AACF;;AAEpB;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,wBAAwB,EAAE;AAC1B;AACA;AACA;AACA;AACA,eAAe,EAAE;;AAEjB;AACA;AACA,cAAc,WAAW;AACzB;AACA,eAAe,EAAE;AACjB;AACA,0BAA0B,aAAa;AACvC,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA,eAAe,EAAE;AACjB;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,KAAK,wDAAwD;AAC7D,KAAK,4EAA4E;AACjF,KAAK,0EAA0E;AAC/E,KAAK,sDAAsD;AAC3D,KAAK,gEAAgE;AACrE,KAAK,wEAAwE;AAC7E,KAAK,mEAAmE;AACxE,KAAK,uFAAuF;AAC5F,KAAK;AACL;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,KAAK;AAChB,YAAY;AACZ;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA,yCAAyC,uBAAuB;AAChE;AACA;AACA,gCAAgC,EAAE;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA,eAAe,EAAE;AACjB;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA,4CAA4C;AAC5C,8CAA8C;AAC9C;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,4BAA4B,aAAa;AACzC,mBAAmB,EAAE;AACrB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,gEAAgE,gBAAgB,EAAE;AAClF;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,0BAA0B,uBAAuB;AACjD,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,+BAA+B,mCAAmC,EAAE;AACpE,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,2BAA2B,EAAE,oDAAoD,gCAAgC,EAAE;AACnH,2BAA2B,EAAE,uDAAuD,gCAAgC,EAAE;AACtH;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,kDAAkD,0BAA0B,EAAE;AAC9E;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,kDAAkD,+BAA+B,EAAE;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,wDAAwD,+BAA+B,EAAE;AACzF,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,qDAAqD,iBAAiB,EAAE;AACxE,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,qDAAqD,qCAAqC,EAAE;AAC5F,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,SAAS,yEAA2B,qBAAqB,IAAI;AAC7D;AACA;AACA,qDAAqD;AACrD,SAAS,4BAA4B,mFAAqC,IAAI;AAC9E,MAAM;AACN,oIAA8E,iDAAiD,0GAAoD,EAAE,iDAAiD;AACtO;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,iBAAiB;AAClD,oCAAoC,oBAAoB;AACxD,iCAAiC,cAAc;AAC/C,gCAAgC,aAAa;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,+BAA+B,EAAE;AACjC;AACA,uCAAuC,EAAE;AACzC;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA,aAAa;AACb;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA;AACA,0DAA0D;AAC1D;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,0DAA0D;AAC1D;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB,0BAA0B,EAAE;AAC5B,uCAAuC,EAAE,6CAA6C,EAAE;AACxF;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE,8CAA8C,wBAAwB,EAAE;AACjG;AACA,2BAA2B,EAAE;AAC7B;AACA,+BAA+B,EAAE;AACjC;AACA;AACA,mCAAmC,EAAE,sKAAsK,eAAe,GAAG;AAC7N;AACA;AACA;AACA;AACA,4CAA4C,mCAAmC,EAAE;AACjF;AACA,8BAA8B,EAAE;AAChC;AACA;AACA;AACA;AACA;AACA,SAAS,yEAA2B,qBAAqB,IAAI;AAC7D;AACA;AACA,6CAA6C;AAC7C,SAAS,8DAAgB;AACzB,SAAS,6BAA6B,iIAAqC,IAAI;AAC/E,SAAS,gCAAgC,gIAAkC,IAAI;AAC/E,MAAM;AACN,4HAAsE,yCAAyC,4XAA8E,EAAE,yCAAyC;AACxO;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,4CAA4C;AAC5C,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,4EAA4E,EAAE;AAC9E;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,KAAK,KAAK;AACV;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,kBAAkB;AAC9B;AACA,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA,qCAAqC,eAAe,OAAO,kBAAkB;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE,8DAA8D,sBAAsB,EAAE;AAC/G;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,SAAS,yEAA2B,qBAAqB,IAAI;AAC7D;AACA;AACA,+CAA+C;AAC/C,SAAS,4BAA4B;AACrC,SAAS,oBAAoB;AAC7B,MAAM;AACN,8HAAwE,2CAA2C,qLAAyE,EAAE,2CAA2C;AACzO;AACA,CAAC;AACD,eAAe,EAAE;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,6CAA6C,WAAW;AACxD;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,yEAA2B,qBAAqB,IAAI;AAC7D;AACA;AACA,gDAAgD,WAAW;AAC3D,+HAAyE,4CAA4C,4BAA4B,EAAE,4CAA4C;AAC/L;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,0BAA0B,cAAc;AACxC,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,0CAA0C,wBAAwB,EAAE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,GAAG;AACd,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,0BAA0B,aAAa;AACvC,4BAA4B,gBAAgB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA,oCAAoC;AACpC;AACA,gBAAgB;AAChB;AACA;AACA,oCAAoC;AACpC;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,8BAA8B,EAAE,oBAAoB;AACpD;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,mCAAmC,gCAAgC,EAAE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE,wDAAwD;AACjF,uBAAuB,EAAE,qCAAqC;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE,mCAAmC,8BAA8B;AAC1F;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA,gCAAgC;AAChC;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,2BAA2B,EAAE,gCAAgC,EAAE;AAC/D;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,wCAAwC,EAAE,YAAY;AACtD;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,gCAAgC,6BAA6B;AAC7D,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,gCAAgC,6BAA6B;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,sCAAsC,sBAAsB;AAC5D,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,iCAAiC,8BAA8B;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA,gCAAgC;AAChC;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,gCAAgC;AAChC;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,gCAAgC,EAAE;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,6GAA6G,mCAAmC,EAAE;AAClJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B;AACA,gCAAgC,EAAE,mBAAmB,KAAK;AAC1D;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,kCAAkC,kBAAkB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,6BAA6B,UAAU;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,6BAA6B,UAAU;AACvC,uBAAuB,EAAE;AACzB;AACA,gCAAgC,EAAE;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,6BAA6B,UAAU;AACvC;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,2BAA2B,EAAE,gCAAgC,EAAE;AAC/D;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,wCAAwC,EAAE,YAAY;AACtD;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,gCAAgC,6BAA6B;AAC7D,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,gCAAgC,6BAA6B;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,sCAAsC,sBAAsB;AAC5D,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,iCAAiC,8BAA8B;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA,gCAAgC;AAChC;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,gCAAgC;AAChC;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,gCAAgC,EAAE;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,6GAA6G,mCAAmC,EAAE;AAClJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B;AACA,gCAAgC,EAAE,mBAAmB,KAAK;AAC1D;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,qCAAqC,qBAAqB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,2BAA2B,EAAE;AAC7B;AACA;AACA,qDAAqD,+BAA+B,EAAE;AACtF;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE,qBAAqB,EAAE;AAChD,uBAAuB,EAAE;AACzB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gDAAgD,gBAAgB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA;AACA,0DAA0D;AAC1D;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,0DAA0D;AAC1D;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,SAAS,iEAAmB;AAC5B;AACA;AACA,iDAAiD;AACjD,SAAS,8DAAgB;AACzB,SAAS,6BAA6B,iIAAqC,IAAI;AAC/E,SAAS,gCAAgC,gIAAkC,IAAI;AAC/E,SAAS,4BAA4B;AACrC,MAAM;AACN;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA;AACA,0DAA0D;AAC1D;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,0DAA0D;AAC1D;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,iEAAmB;AAC5B;AACA;AACA,mDAAmD;AACnD,SAAS,8DAAgB;AACzB,SAAS,6BAA6B,iIAAqC,IAAI;AAC/E,SAAS,gCAAgC,gIAAkC,IAAI;AAC/E,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,2BAA2B,EAAE,6BAA6B,EAAE;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,2BAA2B,EAAE;AAC7B;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE,kCAAkC,4CAA4C;AACvG;AACA,uBAAuB,EAAE;AACzB,yGAAkD,+BAA+B,EAAE;AACnF;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE,+DAA+D,sBAAsB,EAAE;AAChH;AACA;AACA;AACA,SAAS,yEAA2B,qBAAqB,IAAI;AAC7D;AACA;AACA,+CAA+C;AAC/C,SAAS,4BAA4B;AACrC,SAAS,oBAAoB;AAC7B,MAAM;AACN,8HAAwE,2CAA2C,qLAAyE,EAAE,2CAA2C;AACzO;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,sBAAsB;AACtB,gCAAgC;AAChC,gCAAgC;AAChC,iCAAiC;AACjC;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,wBAAwB,EAAE;AAC1B,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,kCAAkC,eAAe;AACjD,uBAAuB,EAAE;AACzB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,oCAAoC,oBAAoB;AACxD,uBAAuB,EAAE;AACzB;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,+CAA+C,sBAAsB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA,2BAA2B,EAAE,uCAAuC;AACpE,gCAAgC,EAAE,UAAU,sBAAsB;AAClE,+BAA+B,EAAE;AACjC;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB,4BAA4B,EAAE;AAC9B,2BAA2B,EAAE;AAC7B;AACA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA,SAAS,yEAA2B,qBAAqB,IAAI;AAC7D;AACA;AACA,6CAA6C;AAC7C,SAAS,oCAAoC,+DAAiB,IAAI;AAClE,SAAS,gCAAgC,+DAAiB,GAAG,oFAAsC,IAAI;AACvG,SAAS,gCAAgC,iIAAqC,IAAI;AAClF,SAAS,gCAAgC,qFAAuC,IAAI;AACpF,MAAM;AACN,4HAAsE,yCAAyC,4XAAsH,EAAE,yCAAyC;AAChR;AACA,CAAC;AACD,eAAe,EAAE;;AAEjB;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,GAAG;AACd,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,0BAA0B,YAAY;AACtC,4BAA4B,cAAc;AAC1C,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEQ;AACR;;;;;;;;;;;;;;;;;;;;;;;;;AC91HA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACoB;AACgI;AACvG;AACqD;AACxE;AACH;;AAEvB;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,2BAA2B,EAAE;AACrD;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,gCAAgC,EAAE;AAC1D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,gCAAgC,EAAE;AAC1D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,gCAAgC,EAAE;AAC1D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,gCAAgC,EAAE;AAC1D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,gCAAgC,EAAE;AAC1D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,kCAAkC,EAAE;AAC5D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,kCAAkC,EAAE;AAC5D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,kCAAkC,EAAE;AAC5D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,kCAAkC,EAAE;AAC5D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,kCAAkC,EAAE;AAC5D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,kCAAkC,EAAE;AAC5D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,kCAAkC,EAAE;AAC5D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,kCAAkC,EAAE;AAC5D;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,sEAAsE,2CAA2C;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,SAAS;AACT;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,kDAAkD;AAClD,SAAS,kEAAoB;AAC7B,SAAS,gFAAsB;AAC/B,SAAS,8EAAoB;AAC7B,SAAS,6BAA6B,iIAAqC,IAAI;AAC/E,SAAS,gCAAgC,+DAAiB,GAAG,8IAAsC,IAAI;AACvG,MAAM;AACN;AACA,qBAAqB,4EAA8B;AACnD,mBAAmB,+EAAiC;AACpD,mBAAmB,+EAAiC;AACpD,mBAAmB,+EAAiC;AACpD,mBAAmB,+EAAiC;AACpD,mBAAmB,+EAAiC;AACpD,qBAAqB,kFAAoC;AACzD,qBAAqB,kFAAoC;AACzD,qBAAqB,kFAAoC;AACzD,qBAAqB,kFAAoC;AACzD,qBAAqB,kFAAoC;AACzD,qBAAqB,kFAAoC;AACzD,qBAAqB,kFAAoC;AACzD,qBAAqB,kFAAoC;AACzD;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,+CAA+C,EAAE;AACzE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,+CAA+C,EAAE;AACzE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,+CAA+C,EAAE;AACzE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,+CAA+C,EAAE;AACzE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,+CAA+C,EAAE;AACzE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,iDAAiD,EAAE;AAC3E;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,iDAAiD,EAAE;AAC3E;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,iDAAiD,EAAE;AAC3E;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,iDAAiD,EAAE;AAC3E;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,iDAAiD,EAAE;AAC3E;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,iDAAiD,EAAE;AAC3E;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,iDAAiD,EAAE;AAC3E;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,iDAAiD,EAAE;AAC3E;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,iCAAiC,qBAAqB;AACtD,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,iDAAiD;AACjD,SAAS,gFAAsB;AAC/B,SAAS,uEAAyB;AAClC,SAAS,uEAAyB;AAClC,SAAS,kEAAoB;AAC7B,SAAS,iEAAmB;AAC5B,SAAS,8EAA8B,+DAAiB,GAAG,2DAAa,IAAI;AAC5E,SAAS,8EAAoB;AAC7B,MAAM;AACN;AACA,yBAAyB,gFAAkC;AAC3D,mBAAmB,8EAAgC;AACnD,uBAAuB,mFAAqC;AAC5D,uBAAuB,mFAAqC;AAC5D,uBAAuB,mFAAqC;AAC5D,uBAAuB,mFAAqC;AAC5D,uBAAuB,mFAAqC;AAC5D,yBAAyB,sFAAwC;AACjE,yBAAyB,sFAAwC;AACjE,yBAAyB,sFAAwC;AACjE,yBAAyB,sFAAwC;AACjE,yBAAyB,sFAAwC;AACjE,yBAAyB,sFAAwC;AACjE,yBAAyB,sFAAwC;AACjE,yBAAyB,sFAAwC;AACjE;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE,iCAAiC,EAAE;AAC5G;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,+BAA+B,EAAE;AACzD;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,iCAAiC,EAAE;AAC3D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,iCAAiC,EAAE;AAC3D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,iCAAiC,EAAE;AAC3D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,iCAAiC,EAAE;AAC3D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,iCAAiC,EAAE;AAC3D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,mCAAmC,EAAE;AAC7D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,mCAAmC,EAAE;AAC7D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,mCAAmC,EAAE;AAC7D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,mCAAmC,EAAE;AAC7D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,mCAAmC,EAAE;AAC7D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,mCAAmC,EAAE;AAC7D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,mCAAmC,EAAE;AAC7D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,mCAAmC,EAAE;AAC7D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,2CAA2C,EAAE;AACrE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,+CAA+C,EAAE;AACzE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,+CAA+C,EAAE;AACzE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,+CAA+C,EAAE;AACzE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,+CAA+C,EAAE;AACzE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,+CAA+C,EAAE;AACzE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,+CAA+C,EAAE;AACzE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,+CAA+C,EAAE;AACzE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,+CAA+C,EAAE;AACzE;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,oDAAoD;AACpD,SAAS,gFAAsB;AAC/B,SAAS,gGAAsC,+DAAiB,GAAG,2DAAa,IAAI;AACpF,SAAS,kEAAoB;AAC7B,SAAS,8EAAoB;AAC7B,SAAS,6BAA6B,iIAAqC,IAAI;AAC/E,SAAS,gCAAgC,+DAAiB,GAAG,8IAAsC,IAAI;AACvG,MAAM;AACN;AACA,kBAAkB,+EAAiC;AACnD,oBAAoB,kFAAoC;AACxD,oBAAoB,kFAAoC;AACxD,oBAAoB,kFAAoC;AACxD,oBAAoB,kFAAoC;AACxD,oBAAoB,kFAAoC;AACxD,sBAAsB,qFAAuC;AAC7D,sBAAsB,qFAAuC;AAC7D,sBAAsB,qFAAuC;AAC7D,sBAAsB,qFAAuC;AAC7D,sBAAsB,qFAAuC;AAC7D,sBAAsB,qFAAuC;AAC7D,sBAAsB,qFAAuC;AAC7D,sBAAsB,qFAAuC;AAC7D,kBAAkB,+EAAiC;AACnD,oBAAoB,kFAAoC;AACxD,oBAAoB,kFAAoC;AACxD,oBAAoB,kFAAoC;AACxD,oBAAoB,kFAAoC;AACxD,oBAAoB,kFAAoC;AACxD,sBAAsB,qFAAuC;AAC7D,sBAAsB,qFAAuC;AAC7D,sBAAsB,qFAAuC;AAC7D,sBAAsB,qFAAuC;AAC7D,sBAAsB,qFAAuC;AAC7D,sBAAsB,qFAAuC;AAC7D,sBAAsB,qFAAuC;AAC7D,sBAAsB,qFAAuC;AAC7D;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,KAAK;AAChB,YAAY;AACZ;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA,yCAAyC,uBAAuB;AAChE;AACA;AACA,gCAAgC,EAAE;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,iBAAiB;AACnD;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,WAAW,WAAW;AAC1C,WAAW,EAAE;AACb,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,+BAA+B,eAAe,EAAE;AAChD;AACA;AACA;AACA,6BAA6B,mBAAmB,EAAE;AAClD,gCAAgC,mBAAmB,EAAE;AACrD;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,gBAAgB,EAAE;AACpD;AACA,kCAAkC;AAClC;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,yCAAyC,yBAAyB,EAAE;AACpE;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,2BAA2B,EAAE;AAC7B,kDAAkD;AAClD;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,+CAA+C,EAAE;AACzE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,+CAA+C,EAAE;AACzE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,+CAA+C,EAAE;AACzE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,+CAA+C,EAAE;AACzE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,+CAA+C,EAAE;AACzE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,iDAAiD,EAAE;AAC3E;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,iDAAiD,EAAE;AAC3E;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,iDAAiD,EAAE;AAC3E;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,iDAAiD,EAAE;AAC3E;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,iDAAiD,EAAE;AAC3E;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,iDAAiD,EAAE;AAC3E;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,iDAAiD,EAAE;AAC3E;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,iDAAiD,EAAE;AAC3E;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,iCAAiC,qBAAqB;AACtD,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,sCAAsC,kBAAkB;AACxD,mCAAmC,cAAc;AACjD,2BAA2B,EAAE;AAC7B;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC,+DAA+D;AAC/D;AACA;AACA;AACA;AACA,yCAAyC;AACzC,+DAA+D;AAC/D;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yCAAyC;AACzC,+DAA+D;AAC/D;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E,EAAE;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,iDAAiD;AACjD,SAAS,gFAAsB;AAC/B,SAAS,gFAAsB;AAC/B,SAAS,kEAAoB;AAC7B,SAAS,iEAAmB;AAC5B,SAAS,uEAAyB;AAClC,SAAS,8EAA8B,+DAAiB,GAAG,2DAAa,IAAI;AAC5E,SAAS,8EAAoB;AAC7B,MAAM;AACN;AACA,yBAAyB,gFAAkC;AAC3D,uBAAuB,mFAAqC;AAC5D,uBAAuB,mFAAqC;AAC5D,uBAAuB,mFAAqC;AAC5D,uBAAuB,mFAAqC;AAC5D,uBAAuB,mFAAqC;AAC5D,yBAAyB,sFAAwC;AACjE,yBAAyB,sFAAwC;AACjE,yBAAyB,sFAAwC;AACjE,yBAAyB,sFAAwC;AACjE,yBAAyB,sFAAwC;AACjE,yBAAyB,sFAAwC;AACjE,yBAAyB,sFAAwC;AACjE,yBAAyB,sFAAwC;AACjE;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,iDAAiD,WAAW;AAC5D;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEQ;AACR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtqDA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAC2D;AAChC;AACuC;AAC6pB;AACtsB;AACgF;AACpF;AAC0J;AAC1J;AAC4C;;AAEjE;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA,eAAe,EAAE;;AAEjB;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE,6BAA6B;AACtD,uBAAuB,EAAE;AACzB,4BAA4B,EAAE;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,kGAAwC;AAC1E;AACA;AACA,kCAAkC,oHAA0D;AAC5F;AACA,8BAA8B,qGAA2C;AACzE;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,mDAAmD;AACnD,SAAS,gCAAgC,+DAAiB,GAAG,8IAAsC,IAAI;AACvG,SAAS,6BAA6B,iIAAqC,IAAI;AAC/E,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEQ;AACR;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzGA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACoB;AACuE;AACC;AACpE;AACa;;AAErC;AACA;AACA,cAAc,WAAW;AACzB;;AAEA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,0CAA0C,wBAAwB,EAAE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,GAAG;AACd,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,0BAA0B,aAAa;AACvC,4BAA4B,gBAAgB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,iCAAiC,EAAE;AAC3D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,mCAAmC,EAAE;AAC7D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,mCAAmC,EAAE;AAC7D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,mCAAmC,EAAE;AAC7D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,mCAAmC,EAAE;AAC7D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,mCAAmC,EAAE;AAC7D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,qCAAqC,EAAE;AAC/D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,qCAAqC,EAAE;AAC/D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,qCAAqC,EAAE;AAC/D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,qCAAqC,EAAE;AAC/D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,qCAAqC,EAAE;AAC/D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,qCAAqC,EAAE;AAC/D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,qCAAqC,EAAE;AAC/D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,qCAAqC,EAAE;AAC/D;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS,wEAA0B,mQAAmQ,IAAI;AAC1S;AACA;AACA,kDAAkD;AAClD,SAAS,gFAAsB;AAC/B,SAAS,kEAAoB;AAC7B,SAAS,8EAAoB;AAC7B,MAAM;AACN;AACA,oBAAoB,iFAAmC;AACvD,sBAAsB,oFAAsC;AAC5D,sBAAsB,oFAAsC;AAC5D,sBAAsB,oFAAsC;AAC5D,sBAAsB,oFAAsC;AAC5D,sBAAsB,oFAAsC;AAC5D,wBAAwB,uFAAyC;AACjE,wBAAwB,uFAAyC;AACjE,wBAAwB,uFAAyC;AACjE,wBAAwB,uFAAyC;AACjE,wBAAwB,uFAAyC;AACjE,wBAAwB,uFAAyC;AACjE,wBAAwB,uFAAyC;AACjE,wBAAwB,uFAAyC;AACjE;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,8BAA8B,EAAE;AACxD;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,gCAAgC,EAAE;AAC1D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,gCAAgC,EAAE;AAC1D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,gCAAgC,EAAE;AAC1D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,gCAAgC,EAAE;AAC1D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,gCAAgC,EAAE;AAC1D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,kCAAkC,EAAE;AAC5D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,kCAAkC,EAAE;AAC5D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,kCAAkC,EAAE;AAC5D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,kCAAkC,EAAE;AAC5D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,kCAAkC,EAAE;AAC5D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,kCAAkC,EAAE;AAC5D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,kCAAkC,EAAE;AAC5D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,kCAAkC,EAAE;AAC5D;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,8DAA8D,kBAAkB;AAChF;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,8CAA8C,4BAA4B,EAAE;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,mCAAmC,kEAAkE,EAAE;AACvG;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE,mCAAmC,EAAE,qCAAqC,EAAE,sCAAsC,EAAE;AAC7I;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE,kCAAkC,EAAE,oCAAoC,EAAE,2CAA2C,EAAE;AAChJ;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,+BAA+B,cAAc;AAC7C,uBAAuB,EAAE,oBAAoB,EAAE;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,qDAAqD;AACrD,SAAS,gFAAsB;AAC/B,SAAS,kEAAoB;AAC7B,SAAS,sCAAsC,+DAAiB,GAAG,2DAAa,IAAI;AACpF,SAAS,8DAAgB;AACzB,SAAS,0EAAwB;AACjC,SAAS,8EAAoB;AAC7B,MAAM;AACN;AACA,iBAAiB,oFAAsC;AACvD,mBAAmB,uFAAyC;AAC5D,mBAAmB,uFAAyC;AAC5D,mBAAmB,uFAAyC;AAC5D,mBAAmB,uFAAyC;AAC5D,mBAAmB,uFAAyC;AAC5D,qBAAqB,0FAA4C;AACjE,qBAAqB,0FAA4C;AACjE,qBAAqB,0FAA4C;AACjE,qBAAqB,0FAA4C;AACjE,qBAAqB,0FAA4C;AACjE,qBAAqB,0FAA4C;AACjE,qBAAqB,0FAA4C;AACjE,qBAAqB,0FAA4C;AACjE;AACA;AACA,CAAC;AACD,eAAe,EAAE;;AAEjB;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,KAAK;AAChB,YAAY;AACZ;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA,yCAAyC,uBAAuB;AAChE;AACA;AACA,gCAAgC,EAAE;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,iCAAiC,EAAE;AAC3D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,+BAA+B,EAAE;AACzD;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,+BAA+B,EAAE;AACzD;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,iCAAiC,EAAE;AAC3D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,iCAAiC,EAAE;AAC3D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,iCAAiC,EAAE;AAC3D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,iCAAiC,EAAE;AAC3D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,iCAAiC,EAAE;AAC3D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,mCAAmC,EAAE;AAC7D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,mCAAmC,EAAE;AAC7D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,mCAAmC,EAAE;AAC7D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,mCAAmC,EAAE;AAC7D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,mCAAmC,EAAE;AAC7D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,mCAAmC,EAAE;AAC7D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,mCAAmC,EAAE;AAC7D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,mCAAmC,EAAE;AAC7D;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,uBAAuB,EAAE,wCAAwC;AACjE,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,EAAE;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,6BAA6B;AAC/D;AACA;AACA,SAAS,wEAA0B;AACnC,iBAAiB,IAAI;AACrB;AACA;AACA,gDAAgD;AAChD,SAAS,gFAAsB;AAC/B,SAAS,kEAAoB;AAC7B,SAAS,sCAAsC,+DAAiB,GAAG,+DAAiB,IAAI;AACxF,SAAS,8EAAoB;AAC7B,SAAS,gCAAgC,+IAAuC,IAAI;AACpF,MAAM;AACN;AACA,oBAAoB,iFAAmC;AACvD,kBAAkB,+EAAiC;AACnD,kBAAkB,+EAAiC;AACnD,oBAAoB,kFAAoC;AACxD,oBAAoB,kFAAoC;AACxD,oBAAoB,kFAAoC;AACxD,oBAAoB,kFAAoC;AACxD,oBAAoB,kFAAoC;AACxD,sBAAsB,qFAAuC;AAC7D,sBAAsB,qFAAuC;AAC7D,sBAAsB,qFAAuC;AAC7D,sBAAsB,qFAAuC;AAC7D,sBAAsB,qFAAuC;AAC7D,sBAAsB,qFAAuC;AAC7D,sBAAsB,qFAAuC;AAC7D,sBAAsB,qFAAuC;AAC7D;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,gCAAgC,EAAE;AAC1D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,kCAAkC,EAAE;AAC5D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,kCAAkC,EAAE;AAC5D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,kCAAkC,EAAE;AAC5D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,kCAAkC,EAAE;AAC5D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,kCAAkC,EAAE;AAC5D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,oCAAoC,EAAE;AAC9D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,oCAAoC,EAAE;AAC9D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,oCAAoC,EAAE;AAC9D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,oCAAoC,EAAE;AAC9D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,oCAAoC,EAAE;AAC9D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,oCAAoC,EAAE;AAC9D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,oCAAoC,EAAE;AAC9D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,oCAAoC,EAAE;AAC9D;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,SAAS,wEAA0B,6SAA6S,IAAI;AACpV;AACA;AACA,qDAAqD;AACrD,SAAS,gFAAsB;AAC/B,SAAS,kEAAoB;AAC7B,SAAS,8EAAoB;AAC7B,MAAM;AACN;AACA,mBAAmB,oFAAsC;AACzD,qBAAqB,uFAAyC;AAC9D,qBAAqB,uFAAyC;AAC9D,qBAAqB,uFAAyC;AAC9D,qBAAqB,uFAAyC;AAC9D,qBAAqB,uFAAyC;AAC9D,uBAAuB,0FAA4C;AACnE,uBAAuB,0FAA4C;AACnE,uBAAuB,0FAA4C;AACnE,uBAAuB,0FAA4C;AACnE,uBAAuB,0FAA4C;AACnE,uBAAuB,0FAA4C;AACnE,uBAAuB,0FAA4C;AACnE,uBAAuB,0FAA4C;AACnE;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,iCAAiC,EAAE;AAC3D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,mCAAmC,EAAE;AAC7D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,mCAAmC,EAAE;AAC7D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,mCAAmC,EAAE;AAC7D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,mCAAmC,EAAE;AAC7D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,mCAAmC,EAAE;AAC7D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,qCAAqC,EAAE;AAC/D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,qCAAqC,EAAE;AAC/D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,qCAAqC,EAAE;AAC/D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,qCAAqC,EAAE;AAC/D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,qCAAqC,EAAE;AAC/D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,qCAAqC,EAAE;AAC/D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,qCAAqC,EAAE;AAC/D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,qCAAqC,EAAE;AAC/D;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,kDAAkD;AAClD,aAAa;AACb;AACA;AACA;AACA,SAAS,wEAA0B,2TAA2T,IAAI;AAClW;AACA;AACA,sDAAsD;AACtD,SAAS,gFAAsB;AAC/B,SAAS,kEAAoB;AAC7B,SAAS,sCAAsC,+DAAiB,GAAG,+DAAiB,IAAI;AACxF,SAAS,0EAAwB;AACjC,SAAS,8EAAoB;AAC7B,MAAM;AACN;AACA,oBAAoB,qFAAuC;AAC3D,sBAAsB,wFAA0C;AAChE,sBAAsB,wFAA0C;AAChE,sBAAsB,wFAA0C;AAChE,sBAAsB,wFAA0C;AAChE,sBAAsB,wFAA0C;AAChE,wBAAwB,2FAA6C;AACrE,wBAAwB,2FAA6C;AACrE,wBAAwB,2FAA6C;AACrE,wBAAwB,2FAA6C;AACrE,wBAAwB,2FAA6C;AACrE,wBAAwB,2FAA6C;AACrE,wBAAwB,2FAA6C;AACrE,wBAAwB,2FAA6C;AACrE;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,gCAAgC,EAAE;AAC1D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,kCAAkC,EAAE;AAC5D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,kCAAkC,EAAE;AAC5D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,kCAAkC,EAAE;AAC5D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,kCAAkC,EAAE;AAC5D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,kCAAkC,EAAE;AAC5D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,oCAAoC,EAAE;AAC9D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,oCAAoC,EAAE;AAC9D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,oCAAoC,EAAE;AAC9D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,oCAAoC,EAAE;AAC9D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,oCAAoC,EAAE;AAC9D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,oCAAoC,EAAE;AAC9D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,oCAAoC,EAAE;AAC9D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,oCAAoC,EAAE;AAC9D;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,qDAAqD;AACrD,SAAS,gFAAsB;AAC/B,SAAS,kEAAoB;AAC7B,SAAS,8EAAoB;AAC7B,MAAM;AACN;AACA,mBAAmB,oFAAsC;AACzD,qBAAqB,uFAAyC;AAC9D,qBAAqB,uFAAyC;AAC9D,qBAAqB,uFAAyC;AAC9D,qBAAqB,uFAAyC;AAC9D,qBAAqB,uFAAyC;AAC9D,uBAAuB,0FAA4C;AACnE,uBAAuB,0FAA4C;AACnE,uBAAuB,0FAA4C;AACnE,uBAAuB,0FAA4C;AACnE,uBAAuB,0FAA4C;AACnE,uBAAuB,0FAA4C;AACnE,uBAAuB,0FAA4C;AACnE,uBAAuB,0FAA4C;AACnE;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,wEAA0B,8CAA8C,IAAI;AACrF;AACA;AACA,oDAAoD;AACpD,SAAS,gFAAsB;AAC/B,SAAS,kEAAoB;AAC7B,SAAS,8EAAoB;AAC7B,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA,sBAAsB,UAAU,YAAY,qBAAqB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,gCAAgC,EAAE;AAC1D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,kCAAkC,EAAE;AAC5D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,kCAAkC,EAAE;AAC5D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,kCAAkC,EAAE;AAC5D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,kCAAkC,EAAE;AAC5D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,kCAAkC,EAAE;AAC5D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,oCAAoC,EAAE;AAC9D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,oCAAoC,EAAE;AAC9D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,oCAAoC,EAAE;AAC9D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,oCAAoC,EAAE;AAC9D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,oCAAoC,EAAE;AAC9D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,oCAAoC,EAAE;AAC9D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,oCAAoC,EAAE;AAC9D;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,oCAAoC,EAAE;AAC9D;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,8CAA8C,4BAA4B,EAAE;AAC5E;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE,YAAY,+DAA+D;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS,wEAA0B,wUAAwU,IAAI;AAC/W;AACA;AACA,uDAAuD;AACvD,SAAS,gFAAsB;AAC/B,SAAS,kEAAoB;AAC7B,SAAS,sCAAsC,+DAAiB,GAAG,2DAAa,IAAI;AACpF,SAAS,8EAAoB;AAC7B,MAAM;AACN;AACA,mBAAmB,sFAAwC;AAC3D,qBAAqB,yFAA2C;AAChE,qBAAqB,yFAA2C;AAChE,qBAAqB,yFAA2C;AAChE,qBAAqB,yFAA2C;AAChE,qBAAqB,yFAA2C;AAChE,uBAAuB,4FAA8C;AACrE,uBAAuB,4FAA8C;AACrE,uBAAuB,4FAA8C;AACrE,uBAAuB,4FAA8C;AACrE,uBAAuB,4FAA8C;AACrE,uBAAuB,4FAA8C;AACrE,uBAAuB,4FAA8C;AACrE,uBAAuB,4FAA8C;AACrE;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,6CAA6C,WAAW;AACxD;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEQ;AACR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrgFA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACoB;AAC6B;AACa;AAC9B;;AAEhC;AACA;AACA,cAAc,WAAW;AACzB;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA,sBAAsB,SAAS,YAAY,qBAAqB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,uCAAuC,EAAE;AACjE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,yCAAyC,EAAE;AACnE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,yCAAyC,EAAE;AACnE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,yCAAyC,EAAE;AACnE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,yCAAyC,EAAE;AACnE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,yCAAyC,EAAE;AACnE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,2CAA2C,EAAE;AACrE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,2CAA2C,EAAE;AACrE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,2CAA2C,EAAE;AACrE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,2CAA2C,EAAE;AACrE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,2CAA2C,EAAE;AACrE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,2CAA2C,EAAE;AACrE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,2CAA2C,EAAE;AACrE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,2CAA2C,EAAE;AACrE;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE,YAAY;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA,SAAS,wEAA0B,4SAA4S,IAAI;AACnV;AACA;AACA,qDAAqD;AACrD,SAAS,gFAAsB;AAC/B,SAAS,kEAAoB;AAC7B,SAAS,8EAAoB;AAC7B,MAAM;AACN;AACA,mBAAmB,oFAAsC;AACzD,qBAAqB,uFAAyC;AAC9D,qBAAqB,uFAAyC;AAC9D,qBAAqB,uFAAyC;AAC9D,qBAAqB,uFAAyC;AAC9D,qBAAqB,uFAAyC;AAC9D,uBAAuB,0FAA4C;AACnE,uBAAuB,0FAA4C;AACnE,uBAAuB,0FAA4C;AACnE,uBAAuB,0FAA4C;AACnE,uBAAuB,0FAA4C;AACnE,uBAAuB,0FAA4C;AACnE,uBAAuB,0FAA4C;AACnE,uBAAuB,0FAA4C;AACnE;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,KAAK;AAChB,YAAY;AACZ;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA,yCAAyC,uBAAuB;AAChE;AACA;AACA,gCAAgC,EAAE;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,yCAAyC,EAAE;AACnE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,2CAA2C,EAAE;AACrE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,2CAA2C,EAAE;AACrE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,2CAA2C,EAAE;AACrE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,2CAA2C,EAAE;AACrE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,2CAA2C,EAAE;AACrE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,sHAAwD,EAAE;AAClF;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE,YAAY;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA,kCAAkC,iEAAiE;AACnG;AACA;AACA,SAAS,wEAA0B,6VAA6V,IAAI;AACpY;AACA;AACA,4DAA4D;AAC5D,SAAS,gFAAsB;AAC/B,SAAS,kEAAoB;AAC7B,SAAS,8EAAoB;AAC7B,MAAM;AACN;AACA,mBAAmB,uFAAyC;AAC5D,qBAAqB,0FAA4C;AACjE,qBAAqB,0FAA4C;AACjE,qBAAqB,0FAA4C;AACjE,qBAAqB,0FAA4C;AACjE,qBAAqB,0FAA4C;AACjE,uBAAuB,6FAA+C;AACtE,uBAAuB,6FAA+C;AACtE,uBAAuB,6FAA+C;AACtE,uBAAuB,6FAA+C;AACtE,uBAAuB,6FAA+C;AACtE,uBAAuB,6FAA+C;AACtE,uBAAuB,6FAA+C;AACtE,uBAAuB,6FAA+C;AACtE,oBAAoB,iFAAmC;AACvD;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,yCAAyC,EAAE;AACnE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,2CAA2C,EAAE;AACrE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,2CAA2C,EAAE;AACrE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,2CAA2C,EAAE;AACrE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,2CAA2C,EAAE;AACrE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,2CAA2C,EAAE;AACrE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,sHAAwD,EAAE;AAClF;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE,YAAY;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA,kCAAkC,iEAAiE;AACnG;AACA;AACA,SAAS,wEAA0B,mTAAmT,IAAI;AAC1V;AACA;AACA,yDAAyD;AACzD,SAAS,gFAAsB;AAC/B,SAAS,kEAAoB;AAC7B,SAAS,8EAAoB;AAC7B,MAAM;AACN;AACA,mBAAmB,oFAAsC;AACzD,qBAAqB,uFAAyC;AAC9D,qBAAqB,uFAAyC;AAC9D,qBAAqB,uFAAyC;AAC9D,qBAAqB,uFAAyC;AAC9D,qBAAqB,uFAAyC;AAC9D,uBAAuB,0FAA4C;AACnE,uBAAuB,0FAA4C;AACnE,uBAAuB,0FAA4C;AACnE,uBAAuB,0FAA4C;AACnE,uBAAuB,0FAA4C;AACnE,uBAAuB,0FAA4C;AACnE,uBAAuB,0FAA4C;AACnE,uBAAuB,0FAA4C;AACnE,oBAAoB,iFAAmC;AACvD;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,yCAAyC,EAAE;AACnE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,2CAA2C,EAAE;AACrE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,2CAA2C,EAAE;AACrE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,2CAA2C,EAAE;AACrE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,2CAA2C,EAAE;AACrE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,2CAA2C,EAAE;AACrE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,SAAS,wEAA0B,uOAAuO,IAAI;AAC9Q;AACA;AACA,oDAAoD;AACpD,SAAS,gFAAsB;AAC/B,SAAS,kEAAoB;AAC7B,SAAS,8EAAoB;AAC7B,MAAM;AACN;AACA,mBAAmB,+EAAiC;AACpD,qBAAqB,kFAAoC;AACzD,qBAAqB,kFAAoC;AACzD,qBAAqB,kFAAoC;AACzD,qBAAqB,kFAAoC;AACzD,qBAAqB,kFAAoC;AACzD,uBAAuB,qFAAuC;AAC9D,uBAAuB,qFAAuC;AAC9D,uBAAuB,qFAAuC;AAC9D,uBAAuB,qFAAuC;AAC9D,uBAAuB,qFAAuC;AAC9D,uBAAuB,qFAAuC;AAC9D,uBAAuB,qFAAuC;AAC9D,uBAAuB,qFAAuC;AAC9D;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,yCAAyC,EAAE;AACnE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,2CAA2C,EAAE;AACrE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,2CAA2C,EAAE;AACrE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,2CAA2C,EAAE;AACrE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,2CAA2C,EAAE;AACrE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,2CAA2C,EAAE;AACrE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,sHAAwD,EAAE;AAClF;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE,qDAAqD,+BAA+B,EAAE;AAC/G;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,wEAA0B,qPAAqP,IAAI;AAC5R;AACA;AACA,qDAAqD;AACrD,SAAS,gFAAsB;AAC/B,SAAS,kEAAoB;AAC7B,SAAS,8EAAoB;AAC7B,MAAM;AACN;AACA,mBAAmB,gFAAkC;AACrD,qBAAqB,mFAAqC;AAC1D,qBAAqB,mFAAqC;AAC1D,qBAAqB,mFAAqC;AAC1D,qBAAqB,mFAAqC;AAC1D,qBAAqB,mFAAqC;AAC1D,uBAAuB,sFAAwC;AAC/D,uBAAuB,sFAAwC;AAC/D,uBAAuB,sFAAwC;AAC/D,uBAAuB,sFAAwC;AAC/D,uBAAuB,sFAAwC;AAC/D,uBAAuB,sFAAwC;AAC/D,uBAAuB,sFAAwC;AAC/D,uBAAuB,sFAAwC;AAC/D,oBAAoB,iFAAmC;AACvD;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,yCAAyC,EAAE;AACnE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,2CAA2C,EAAE;AACrE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,2CAA2C,EAAE;AACrE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,2CAA2C,EAAE;AACrE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,2CAA2C,EAAE;AACrE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,2CAA2C,EAAE;AACrE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,sHAAwD,EAAE;AAClF;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,wEAA0B,uOAAuO,IAAI;AAC9Q;AACA;AACA,oDAAoD;AACpD,SAAS,gFAAsB;AAC/B,SAAS,kEAAoB;AAC7B,SAAS,8EAAoB;AAC7B,MAAM;AACN;AACA,mBAAmB,+EAAiC;AACpD,qBAAqB,kFAAoC;AACzD,qBAAqB,kFAAoC;AACzD,qBAAqB,kFAAoC;AACzD,qBAAqB,kFAAoC;AACzD,qBAAqB,kFAAoC;AACzD,uBAAuB,qFAAuC;AAC9D,uBAAuB,qFAAuC;AAC9D,uBAAuB,qFAAuC;AAC9D,uBAAuB,qFAAuC;AAC9D,uBAAuB,qFAAuC;AAC9D,uBAAuB,qFAAuC;AAC9D,uBAAuB,qFAAuC;AAC9D,uBAAuB,qFAAuC;AAC9D,oBAAoB,iFAAmC;AACvD;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,yCAAyC,EAAE;AACnE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,2CAA2C,EAAE;AACrE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,2CAA2C,EAAE;AACrE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,2CAA2C,EAAE;AACrE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,2CAA2C,EAAE;AACrE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,2CAA2C,EAAE;AACrE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,SAAS,wEAA0B,mQAAmQ,IAAI;AAC1S;AACA;AACA,sDAAsD;AACtD,SAAS,gFAAsB;AAC/B,SAAS,kEAAoB;AAC7B,SAAS,8EAAoB;AAC7B,MAAM;AACN;AACA,mBAAmB,iFAAmC;AACtD,qBAAqB,oFAAsC;AAC3D,qBAAqB,oFAAsC;AAC3D,qBAAqB,oFAAsC;AAC3D,qBAAqB,oFAAsC;AAC3D,qBAAqB,oFAAsC;AAC3D,uBAAuB,uFAAyC;AAChE,uBAAuB,uFAAyC;AAChE,uBAAuB,uFAAyC;AAChE,uBAAuB,uFAAyC;AAChE,uBAAuB,uFAAyC;AAChE,uBAAuB,uFAAyC;AAChE,uBAAuB,uFAAyC;AAChE,uBAAuB,uFAAyC;AAChE;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,yCAAyC,EAAE;AACnE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,2CAA2C,EAAE;AACrE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,2CAA2C,EAAE;AACrE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,2CAA2C,EAAE;AACrE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,2CAA2C,EAAE;AACrE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,2CAA2C,EAAE;AACrE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,sHAAwD,EAAE;AAClF;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,SAAS,wEAA0B,iRAAiR,IAAI;AACxT;AACA;AACA,uDAAuD;AACvD,SAAS,gFAAsB;AAC/B,SAAS,kEAAoB;AAC7B,SAAS,8EAAoB;AAC7B,MAAM;AACN;AACA,mBAAmB,kFAAoC;AACvD,qBAAqB,qFAAuC;AAC5D,qBAAqB,qFAAuC;AAC5D,qBAAqB,qFAAuC;AAC5D,qBAAqB,qFAAuC;AAC5D,qBAAqB,qFAAuC;AAC5D,uBAAuB,wFAA0C;AACjE,uBAAuB,wFAA0C;AACjE,uBAAuB,wFAA0C;AACjE,uBAAuB,wFAA0C;AACjE,uBAAuB,wFAA0C;AACjE,uBAAuB,wFAA0C;AACjE,uBAAuB,wFAA0C;AACjE,uBAAuB,wFAA0C;AACjE,oBAAoB,iFAAmC;AACvD;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,yCAAyC,EAAE;AACnE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,2CAA2C,EAAE;AACrE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,2CAA2C,EAAE;AACrE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,2CAA2C,EAAE;AACrE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,2CAA2C,EAAE;AACrE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,2CAA2C,EAAE;AACrE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,sHAAwD,EAAE;AAClF;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,wEAA0B,yNAAyN,IAAI;AAChQ;AACA;AACA,mDAAmD;AACnD,SAAS,gFAAsB;AAC/B,SAAS,kEAAoB;AAC7B,SAAS,8EAAoB;AAC7B,MAAM;AACN;AACA,mBAAmB,8EAAgC;AACnD,qBAAqB,iFAAmC;AACxD,qBAAqB,iFAAmC;AACxD,qBAAqB,iFAAmC;AACxD,qBAAqB,iFAAmC;AACxD,qBAAqB,iFAAmC;AACxD,uBAAuB,oFAAsC;AAC7D,uBAAuB,oFAAsC;AAC7D,uBAAuB,oFAAsC;AAC7D,uBAAuB,oFAAsC;AAC7D,uBAAuB,oFAAsC;AAC7D,uBAAuB,oFAAsC;AAC7D,uBAAuB,oFAAsC;AAC7D,uBAAuB,oFAAsC;AAC7D,oBAAoB,iFAAmC;AACvD;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,yCAAyC,EAAE;AACnE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,2CAA2C,EAAE;AACrE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,2CAA2C,EAAE;AACrE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,2CAA2C,EAAE;AACrE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,2CAA2C,EAAE;AACrE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,2CAA2C,EAAE;AACrE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,6CAA6C,EAAE;AACvE;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,SAAS,wEAA0B,yNAAyN,IAAI;AAChQ;AACA;AACA,mDAAmD;AACnD,SAAS,gFAAsB;AAC/B,SAAS,kEAAoB;AAC7B,SAAS,8EAAoB;AAC7B,MAAM;AACN;AACA,mBAAmB,8EAAgC;AACnD,qBAAqB,iFAAmC;AACxD,qBAAqB,iFAAmC;AACxD,qBAAqB,iFAAmC;AACxD,qBAAqB,iFAAmC;AACxD,qBAAqB,iFAAmC;AACxD,uBAAuB,oFAAsC;AAC7D,uBAAuB,oFAAsC;AAC7D,uBAAuB,oFAAsC;AAC7D,uBAAuB,oFAAsC;AAC7D,uBAAuB,oFAAsC;AAC7D,uBAAuB,oFAAsC;AAC7D,uBAAuB,oFAAsC;AAC7D,uBAAuB,oFAAsC;AAC7D;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,0CAA0C,EAAE;AACpE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,4CAA4C,EAAE;AACtE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,4CAA4C,EAAE;AACtE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,4CAA4C,EAAE;AACtE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,4CAA4C,EAAE;AACtE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,4CAA4C,EAAE;AACtE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,8CAA8C,EAAE;AACxE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,8CAA8C,EAAE;AACxE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,8CAA8C,EAAE;AACxE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,8CAA8C,EAAE;AACxE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,8CAA8C,EAAE;AACxE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,8CAA8C,EAAE;AACxE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,8CAA8C,EAAE;AACxE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,8CAA8C,EAAE;AACxE;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,sHAAwD,EAAE;AAClF;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,SAAS,wEAA0B,uOAAuO,IAAI;AAC9Q;AACA;AACA,oDAAoD;AACpD,SAAS,gFAAsB;AAC/B,SAAS,kEAAoB;AAC7B,SAAS,8EAAoB;AAC7B,MAAM;AACN;AACA,mBAAmB,+EAAiC;AACpD,qBAAqB,kFAAoC;AACzD,qBAAqB,kFAAoC;AACzD,qBAAqB,kFAAoC;AACzD,qBAAqB,kFAAoC;AACzD,qBAAqB,kFAAoC;AACzD,uBAAuB,qFAAuC;AAC9D,uBAAuB,qFAAuC;AAC9D,uBAAuB,qFAAuC;AAC9D,uBAAuB,qFAAuC;AAC9D,uBAAuB,qFAAuC;AAC9D,uBAAuB,qFAAuC;AAC9D,uBAAuB,qFAAuC;AAC9D,uBAAuB,qFAAuC;AAC9D,oBAAoB,iFAAmC;AACvD;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,6CAA6C,WAAW;AACxD;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEQ;AACR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC17FA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACuP;AAClO;AACS;AACE;AACF;AACoC;AACpC;AACE;AACT;AACA;;AAEvB;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,CAAC;AACD;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,kDAAkD;AAClD,SAAS,gCAAgC,+DAAiB,GAAG,8FAAgD,IAAI;AACjH,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA,yBAAyB,uBAAuB,EAAE;AAClD;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,8BAA8B,6GAA+C,EAAE;AAC/E;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA,yBAAyB,oBAAoB,EAAE;AAC/C;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA,yBAAyB,4BAA4B,EAAE;AACvD;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,8BAA8B,kHAAoD,EAAE;AACpF;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,qCAAqC,qBAAqB;AAC1D;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA,yBAAyB,4CAA4C,EAAE;AACvE;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,oBAAoB;AACpB;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE,0CAA0C,EAAE;AACzE,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,YAAY,EAAE;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,CAAC;AACD;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE,gCAAgC;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,4BAA4B,EAAE;AACnD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA,eAAe,EAAE;;AAEjB;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE,0BAA0B,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,6BAA6B,EAAE,IAAI,EAAE;AACnH;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,mBAAmB,EAAE;AACrB,wBAAwB,EAAE,UAAU,YAAY;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,2BAA2B,EAAE,kDAAkD,gCAAgC;AAC/G;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,2BAA2B,EAAE,kDAAkD,kCAAkC;AACjH;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,2BAA2B,EAAE,kDAAkD,kCAAkC;AACjH;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,2BAA2B,EAAE,gDAAgD,mCAAmC;AAChH;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qFAAuC,kBAAkB,kBAAkB;AAC3E,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,SAAS,iEAAmB;AAC5B;AACA;AACA,oDAAoD;AACpD,SAAS,gCAAgC,+DAAiB,GAAG,uFAAyC,IAAI;AAC1G,SAAS,wEAAkB;AAC3B,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA,eAAe,EAAE;AACjB;AACA;AACA,KAAK;AACL;AACA,oBAAoB,oDAAoD;AACxE,yBAAyB,kCAAkC;AAC3D,wBAAwB,iDAAiD;AACzE,6BAA6B,iCAAiC;AAC9D;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,yBAAyB,oDAAoD;AAC7E;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,iCAAiC,4CAA4C;AAC7E,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,iEAAmB;AAC5B;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,yEAA2B,qBAAqB,IAAI;AAC7D;AACA,mIAA6E,gDAAgD,gCAAgC,EAAE,gDAAgD;AAC/M;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,EAAE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,uBAAuB,EAAE,yCAAyC,+BAA+B;AACjG,uBAAuB,EAAE,+CAA+C,gCAAgC;AACxG;AACA;AACA;AACA;AACA,0BAA0B,EAAE;AAC5B;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA,uBAAuB,EAAE,iCAAiC,EAAE;AAC5D;AACA,8CAA8C,uCAAuC,EAAE;AACvF;AACA;AACA;AACA,SAAS,iEAAmB;AAC5B;AACA;AACA,gDAAgD;AAChD,SAAS,gCAAgC,+DAAiB,GAAG,0FAA4C,IAAI;AAC7G,SAAS,sCAAsC,+DAAiB,IAAI;AACpE,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,2BAA2B;AAC3B,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yIAA2E,EAAE,MAAM,gBAAgB;AACnG;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,gCAAgC,aAAa;AAC7C,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE,+EAAiC;AAC1D;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE,+EAAiC;AAC1D;AACA;AACA;AACA;AACA;AACA,iDAAiD,YAAY,EAAE;AAC/D;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,uDAAuD,yBAAyB,EAAE;AAClF;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,+BAA+B,WAAW;AAC1C,oDAAoD,8BAA8B,EAAE;AACpF;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,aAAa;AACb;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,uBAAuB,EAAE;AAC9C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,wDAAwD,EAAE;AAC/E;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,oFAAsC;AACtC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,2BAA2B,OAAO;AAClC;AACA,4HAA8E;AAC9E;AACA;AACA,oHAAsE;AACtE;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,4CAA4C;AAC5C,SAAS,kEAAoB;AAC7B,SAAS,8DAAgB;AACzB,SAAS,wEAAkB;AAC3B,SAAS,gCAAgC,+DAAiB,GAAG,iGAAmD,IAAI;AACpH,SAAS,gCAAgC,+DAAiB,GAAG,kKAA+C,IAAI;AAChH,MAAM;AACN;AACA,mBAAmB,uFAAyC;AAC5D,uBAAuB,2FAA6C;AACpE,sBAAsB,0FAA4C;AAClE,oBAAoB,wFAA0C;AAC9D,yBAAyB,6FAA+C;AACxE,uBAAuB,2FAA6C;AACpE,sBAAsB,0FAA4C;AAClE,qBAAqB,yFAA2C;AAChE;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,wEAA0B;AACnC;AACA;AACA,mDAAmD,WAAW,YAAY,iBAAiB,kBAAkB,eAAe,qBAAqB,sBAAsB,sBAAsB,kBAAkB,cAAc,mGAAmG,4BAA4B,kBAAkB,UAAU,WAAW,qCAAqC,gDAAgD,wGAAwG,yBAAyB,6CAA6C,gBAAgB,eAAe,oDAAoD,gBAAgB,8BAA8B,eAAe,0CAA0C,QAAQ,OAAO,WAAW,UAAU,oCAAoC,QAAQ,SAAS,WAAW,WAAW,mCAAmC,yBAAyB,UAAU;AACr/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB,IAAI;AACrB;AACA;AACA,oDAAoD;AACpD,SAAS,gCAAgC,+DAAiB,GAAG,kKAA+C,IAAI;AAChH,MAAM;AACN;AACA,mBAAmB,4DAAc;AACjC,sBAAsB,4DAAc;AACpC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,wEAA0B;AACnC;AACA,uFAAuF,SAAS;AAChG;AACA;AACA;AACA,kDAAkD,mBAAmB,gBAAgB,uBAAuB,cAAc,iBAAiB,YAAY,eAAe,gBAAgB,qBAAqB,yBAAyB,sBAAsB,qBAAqB,iBAAiB,eAAe,8BAA8B,eAAe,8BAA8B,iBAAiB,8BAA8B,kBAAkB,sBAAsB,kCAAkC,mBAAmB,wCAAwC,iBAAiB,eAAe;AAC9kB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA;AACA,mBAAmB,4DAAc;AACjC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,qBAAqB;AAC1D;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,8CAA8C,EAAE;AACrE;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,iBAAiB,EAAE;AACxC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,uBAAuB,EAAE;AAC9C;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,8DAA8D,EAAE;AACrF;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,0BAA0B,6GAA+C,EAAE;AAC3E;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,mDAAmD,EAAE;AAC1E;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,qCAAqC,qBAAqB;AAC1D;AACA;AACA;AACA,SAAS,wEAA0B;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,0CAA0C,mBAAmB,gBAAgB,uBAAuB,cAAc,iBAAiB,YAAY,eAAe,gBAAgB,qBAAqB,kBAAkB,eAAe,UAAU,aAAa,mBAAmB,eAAe,sBAAsB,mBAAmB,sBAAsB,eAAe,sBAAsB,iBAAiB,sBAAsB,kBAAkB,sBAAsB,0BAA0B,mBAAmB,gCAAgC,iBAAiB,eAAe,gCAAgC,yBAAyB,sBAAsB,qBAAqB,iBAAiB,eAAe,oDAAoD,kBAAkB,8DAA8D,kBAAkB,mBAAmB,6CAA6C,YAAY,aAAa,uBAAuB,8BAA8B,UAAU,iBAAiB,qBAAqB,YAAY,gBAAgB,uBAAuB,mBAAmB,MAAM,OAAO,QAAQ,SAAS,kBAAkB,oBAAoB,6CAA6C,mBAAmB,YAAY,4BAA4B,iBAAiB,sCAAsC,gBAAgB,eAAe;AAC71C;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,4CAA4C;AAC5C,SAAS,kEAAoB;AAC7B,SAAS,yEAA2B;AACpC,SAAS,gCAAgC,+DAAiB,GAAG,mGAAqD,IAAI;AACtH,SAAS,kCAAkC,+DAAiB,IAAI;AAChE,MAAM;AACN;AACA,mBAAmB,4DAAc;AACjC,sBAAsB,4DAAc;AACpC,+BAA+B,6DAAe;AAC9C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,4BAA4B,EAAE,UAAU,qBAAqB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA,eAAe,EAAE;;AAEjB;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA,eAAe,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,wBAAwB,EAAE;AAC3P,oBAAoB,EAAE,yBAAyB,EAAE;;AAEjD;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEQ;AACR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzrFA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAC2S;AACjQ;AACT;AAC4C;AACzD;AACqD;AACK;AACpB;AAC1B;AACgC;AACD;AACtC;AACuB;;AAEhD;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE,sDAAsD,YAAY,EAAE;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,iDAAiD;AACjD,SAAS,mEAAqB;AAC9B,SAAS,gFAAkC;AAC3C,SAAS,sEAAwB;AACjC,SAAS,gEAAkB;AAC3B,SAAS,wEAA0B;AACnC,SAAS,gCAAgC,gIAAkC,IAAI;AAC/E,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sKAA8C,aAAa;AAC3D,mKAA2C,yCAAyC;AACpF;AACA,wRAAoG,aAAa;AACjH,iMAAyE,2BAA2B;AACpG;AACA;AACA,wPAAoE,aAAa;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wJAAgC,aAAa;AAC7C;AACA,+EAAmB,aAAa;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,eAAe,EAAE;;AAEjB;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;;AAEjB;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,gCAAgC,oBAAoB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA,gCAAgC,EAAE,UAAU,cAAc;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,wEAA0B;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,8CAA8C;AAC9C,SAAS,kEAAoB;AAC7B,SAAS,gCAAgC,gIAAkC,IAAI;AAC/E,SAAS,wEAAsB;AAC/B,SAAS,gCAAgC,sFAAwC,GAAG,+DAAiB,IAAI;AACzG,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,CAAC;AACD;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,wBAAwB,EAAE;AAC/C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,wBAAwB,EAAE;AAC/C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,6BAA6B,EAAE;AACpD;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,0BAA0B,EAAE;AACjD;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,wBAAwB,EAAE;AAC/C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,4BAA4B,2BAA2B,EAAE;AACzD;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,+EAA+E,iCAAiC,EAAE;AAClH;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,0MAA0F,4FAAuD,sBAAsB,EAAE,GAAG,EAAE;AAC9K;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,gCAAgC,oBAAoB;AACpD;AACA;AACA;AACA;AACA,wCAAwC,sEAAsE,EAAE;AAChH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE,sEAAsE,wCAAwC,EAAE;AACzI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,2EAA2E,kBAAkB;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,8BAA8B,uBAAuB;AACrD,8BAA8B,uBAAuB;AACrD,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,wEAA0B;AACnC;AACA,8CAA8C,gBAAgB,gBAAgB,cAAc,iCAAiC,8BAA8B,kBAAkB,UAAU,8CAA8C,iGAAiG,6CAA6C,gBAAgB,mBAAmB,kBAAkB,gBAAgB,mBAAmB,eAAe,yBAAyB,sBAAsB,qBAAqB,iBAAiB,eAAe,UAAU,YAAY,wCAAwC,mBAAmB,gBAAgB,uBAAuB,cAAc,iBAAiB,YAAY,eAAe,gBAAgB,qBAAqB,kBAAkB,iCAAiC,SAAS,yBAAyB,eAAe,yBAAyB,iBAAiB,yBAAyB,kBAAkB,sBAAsB,6BAA6B,mBAAmB,mCAAmC,iBAAiB,eAAe,+BAA+B,mBAAmB,sCAAsC,QAAQ,SAAS,mBAAmB,2BAA2B,8DAA8D,WAAW,qBAAqB,kBAAkB,QAAQ,WAAW,2BAA2B,yCAAyC,mBAAmB,kBAAkB,gDAAgD,WAAW,UAAU,2CAA2C,4DAA4D,oBAAoB,qBAAqB,WAAW,iBAAiB,MAAM,OAAO,QAAQ,SAAS,kBAAkB,oBAAoB;AAC/wD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,0CAA0C;AAC1C,SAAS,kEAAoB;AAC7B,SAAS,8DAAgB;AACzB,SAAS,gCAAgC,gGAAkD,IAAI;AAC/F,MAAM;AACN;AACA,2BAA2B,4DAAc;AACzC,uBAAuB,4DAAc;AACrC,uBAAuB,4DAAc;AACrC,yBAAyB,oIAAwC;AACjE,mBAAmB,4FAA8C;AACjE,yBAAyB,4FAA8C;AACvE,4BAA4B,4DAAc;AAC1C,yBAAyB,4DAAc;AACvC,wBAAwB,8EAAgC;AACxD,uBAAuB,4DAAc;AACrC,oBAAoB,6DAAe;AACnC,mBAAmB,6DAAe;AAClC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,wBAAwB,8CAA8C;AACtE;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,qCAAqC,EAAE;AACvC;AACA;AACA;AACA;AACA,oFAAoF,0BAA0B,EAAE;AAChH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,gCAAgC,oBAAoB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2GAAmD,iCAAiC,EAAE;AACtF;AACA,+BAA+B,EAAE;AACjC;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,kDAAkD,EAAE;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,+BAA+B,EAAE,wEAAwE,YAAY,EAAE;AACvH;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,+FAA+F;AAC5G,aAAa,+GAA+G;AAC5H;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE,0BAA0B,EAAE;AACrD,uBAAuB,EAAE,6BAA6B,EAAE;AACxD,uBAAuB,EAAE;AACzB,uBAAuB,EAAE,kJAA0F,2CAA2C,EAAE,+EAAuB,wBAAwB,EAAE;AACjN;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oGAA4C,+DAA+D,EAAE;AAC7G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,yBAAyB,EAAE;AACvE;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,iDAAiD;AACjD,SAAS,uEAAiB;AAC1B,SAAS,kEAAoB;AAC7B,SAAS,wEAA0B;AACnC,SAAS,gCAAgC,gGAAkD,IAAI;AAC/F,SAAS,8BAA8B,+DAAiB,IAAI;AAC5D,SAAS,kCAAkC,+DAAiB,GAAG,2DAAa,IAAI;AAChF,SAAS,wFAAqC,+DAAiB,IAAI;AACnE,SAAS,wEAAsB;AAC/B,MAAM;AACN;AACA,0CAA0C,6FAA+C;AACzF,kBAAkB,0FAA4C;AAC9D,sBAAsB,2FAA6C;AACnE,wBAAwB,6DAAe;AACvC,wBAAwB,6DAAe;AACvC,wBAAwB,6DAAe;AACvC,yBAAyB,6DAAe;AACxC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEQ;AACR;;;;;;;;;;;;;;;;;;;;;;;;AChjDA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACoB;AACiH;AAC/F;AACnB;AACA;;AAEnB;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,2BAA2B,6BAA6B;AACxD,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,wCAAwC,EAAE;AACnG;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,qCAAqC,wEAAwE,EAAE;AAC/G,qCAAqC,+EAA+E,EAAE;AACtH,mCAAmC,gCAAgC,EAAE;AACrE;AACA;AACA;AACA;AACA;AACA,SAAS,wEAA0B;AACnC;AACA;AACA,2EAA2E,aAAa,mBAAmB,yCAAyC,aAAa,sBAAsB,eAAe,WAAW,mBAAmB,mBAAmB,mBAAmB,2BAA2B,aAAa,sBAAsB,sBAAsB,WAAW,2BAA2B,gBAAgB,yCAAyC,YAAY,yBAAyB,2BAA2B,gBAAgB,yCAAyC,aAAa;AACnkB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,6CAA6C;AAC7C,SAAS,kEAAoB;AAC7B,SAAS,wEAAkB;AAC3B,SAAS,gCAAgC,gIAAkC,IAAI;AAC/E,MAAM;AACN;AACA,0BAA0B,8FAAgD;AAC1E;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEQ;AACR","file":"layout-layout-module~rating-rating-module.js","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { Inject, Injectable, Optional, SkipSelf, QueryList, Directive, ElementRef, Input, NgZone, InjectionToken, EventEmitter, Output, NgModule, defineInjectable, inject } from '@angular/core';\nimport { Subject, Subscription, of } from 'rxjs';\nimport { UP_ARROW, DOWN_ARROW, LEFT_ARROW, RIGHT_ARROW, TAB, A, Z, ZERO, NINE } from '@angular/cdk/keycodes';\nimport { debounceTime, filter, map, tap, take } from 'rxjs/operators';\nimport { __extends } from 'tslib';\nimport { Platform, supportsPassiveEventListeners, PlatformModule } from '@angular/cdk/platform';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ContentObserver, ObserversModule } from '@angular/cdk/observers';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * IDs are deliminated by an empty space, as per the spec.\n */\nvar /** @type {?} */ ID_DELIMINATOR = ' ';\n/**\n * Adds the given ID to the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n * @param {?} el\n * @param {?} attr\n * @param {?} id\n * @return {?}\n */\nfunction addAriaReferencedId(el, attr, id) {\n    var /** @type {?} */ ids = getAriaReferenceIds(el, attr);\n    if (ids.some(function (existingId) { return existingId.trim() == id.trim(); })) {\n        return;\n    }\n    ids.push(id.trim());\n    el.setAttribute(attr, ids.join(ID_DELIMINATOR));\n}\n/**\n * Removes the given ID from the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n * @param {?} el\n * @param {?} attr\n * @param {?} id\n * @return {?}\n */\nfunction removeAriaReferencedId(el, attr, id) {\n    var /** @type {?} */ ids = getAriaReferenceIds(el, attr);\n    var /** @type {?} */ filteredIds = ids.filter(function (val) { return val != id.trim(); });\n    el.setAttribute(attr, filteredIds.join(ID_DELIMINATOR));\n}\n/**\n * Gets the list of IDs referenced by the given ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n * @param {?} el\n * @param {?} attr\n * @return {?}\n */\nfunction getAriaReferenceIds(el, attr) {\n    // Get string array of all individual ids (whitespace deliminated) in the attribute value\n    return (el.getAttribute(attr) || '').match(/\\S+/g) || [];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * ID used for the body container where all messages are appended.\n */\nvar /** @type {?} */ MESSAGES_CONTAINER_ID = 'cdk-describedby-message-container';\n/**\n * ID prefix used for each created message element.\n */\nvar /** @type {?} */ CDK_DESCRIBEDBY_ID_PREFIX = 'cdk-describedby-message';\n/**\n * Attribute given to each host element that is described by a message element.\n */\nvar /** @type {?} */ CDK_DESCRIBEDBY_HOST_ATTRIBUTE = 'cdk-describedby-host';\n/**\n * Global incremental identifier for each registered message element.\n */\nvar /** @type {?} */ nextId = 0;\n/**\n * Global map of all registered message elements that have been placed into the document.\n */\nvar /** @type {?} */ messageRegistry = new Map();\n/**\n * Container for all registered messages.\n */\nvar /** @type {?} */ messagesContainer = null;\n/**\n * Utility that creates visually hidden elements with a message content. Useful for elements that\n * want to use aria-describedby to further describe themselves without adding additional visual\n * content.\n * \\@docs-private\n */\nvar AriaDescriber = /** @class */ (function () {\n    function AriaDescriber(_document) {\n        this._document = _document;\n    }\n    /**\n     * Adds to the host element an aria-describedby reference to a hidden element that contains\n     * the message. If the same message has already been registered, then it will reuse the created\n     * message element.\n     */\n    /**\n     * Adds to the host element an aria-describedby reference to a hidden element that contains\n     * the message. If the same message has already been registered, then it will reuse the created\n     * message element.\n     * @param {?} hostElement\n     * @param {?} message\n     * @return {?}\n     */\n    AriaDescriber.prototype.describe = /**\n     * Adds to the host element an aria-describedby reference to a hidden element that contains\n     * the message. If the same message has already been registered, then it will reuse the created\n     * message element.\n     * @param {?} hostElement\n     * @param {?} message\n     * @return {?}\n     */\n    function (hostElement, message) {\n        if (!this._canBeDescribed(hostElement, message)) {\n            return;\n        }\n        if (!messageRegistry.has(message)) {\n            this._createMessageElement(message);\n        }\n        if (!this._isElementDescribedByMessage(hostElement, message)) {\n            this._addMessageReference(hostElement, message);\n        }\n    };\n    /** Removes the host element's aria-describedby reference to the message element. */\n    /**\n     * Removes the host element's aria-describedby reference to the message element.\n     * @param {?} hostElement\n     * @param {?} message\n     * @return {?}\n     */\n    AriaDescriber.prototype.removeDescription = /**\n     * Removes the host element's aria-describedby reference to the message element.\n     * @param {?} hostElement\n     * @param {?} message\n     * @return {?}\n     */\n    function (hostElement, message) {\n        if (!this._canBeDescribed(hostElement, message)) {\n            return;\n        }\n        if (this._isElementDescribedByMessage(hostElement, message)) {\n            this._removeMessageReference(hostElement, message);\n        }\n        var /** @type {?} */ registeredMessage = messageRegistry.get(message);\n        if (registeredMessage && registeredMessage.referenceCount === 0) {\n            this._deleteMessageElement(message);\n        }\n        if (messagesContainer && messagesContainer.childNodes.length === 0) {\n            this._deleteMessagesContainer();\n        }\n    };\n    /** Unregisters all created message elements and removes the message container. */\n    /**\n     * Unregisters all created message elements and removes the message container.\n     * @return {?}\n     */\n    AriaDescriber.prototype.ngOnDestroy = /**\n     * Unregisters all created message elements and removes the message container.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ describedElements = this._document.querySelectorAll(\"[\" + CDK_DESCRIBEDBY_HOST_ATTRIBUTE + \"]\");\n        for (var /** @type {?} */ i = 0; i < describedElements.length; i++) {\n            this._removeCdkDescribedByReferenceIds(describedElements[i]);\n            describedElements[i].removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n        }\n        if (messagesContainer) {\n            this._deleteMessagesContainer();\n        }\n        messageRegistry.clear();\n    };\n    /**\n     * Creates a new element in the visually hidden message container element with the message\n     * as its content and adds it to the message registry.\n     * @param {?} message\n     * @return {?}\n     */\n    AriaDescriber.prototype._createMessageElement = /**\n     * Creates a new element in the visually hidden message container element with the message\n     * as its content and adds it to the message registry.\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        var /** @type {?} */ messageElement = this._document.createElement('div');\n        messageElement.setAttribute('id', CDK_DESCRIBEDBY_ID_PREFIX + \"-\" + nextId++);\n        messageElement.appendChild(/** @type {?} */ ((this._document.createTextNode(message))));\n        this._createMessagesContainer(); /** @type {?} */\n        ((messagesContainer)).appendChild(messageElement);\n        messageRegistry.set(message, { messageElement: messageElement, referenceCount: 0 });\n    };\n    /**\n     * Deletes the message element from the global messages container.\n     * @param {?} message\n     * @return {?}\n     */\n    AriaDescriber.prototype._deleteMessageElement = /**\n     * Deletes the message element from the global messages container.\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        var /** @type {?} */ registeredMessage = messageRegistry.get(message);\n        var /** @type {?} */ messageElement = registeredMessage && registeredMessage.messageElement;\n        if (messagesContainer && messageElement) {\n            messagesContainer.removeChild(messageElement);\n        }\n        messageRegistry.delete(message);\n    };\n    /**\n     * Creates the global container for all aria-describedby messages.\n     * @return {?}\n     */\n    AriaDescriber.prototype._createMessagesContainer = /**\n     * Creates the global container for all aria-describedby messages.\n     * @return {?}\n     */\n    function () {\n        if (!messagesContainer) {\n            var /** @type {?} */ preExistingContainer = this._document.getElementById(MESSAGES_CONTAINER_ID);\n            // When going from the server to the client, we may end up in a situation where there's\n            // already a container on the page, but we don't have a reference to it. Clear the\n            // old container so we don't get duplicates. Doing this, instead of emptying the previous\n            // container, should be slightly faster.\n            if (preExistingContainer) {\n                /** @type {?} */ ((preExistingContainer.parentNode)).removeChild(preExistingContainer);\n            }\n            messagesContainer = this._document.createElement('div');\n            messagesContainer.id = MESSAGES_CONTAINER_ID;\n            messagesContainer.setAttribute('aria-hidden', 'true');\n            messagesContainer.style.display = 'none';\n            this._document.body.appendChild(messagesContainer);\n        }\n    };\n    /**\n     * Deletes the global messages container.\n     * @return {?}\n     */\n    AriaDescriber.prototype._deleteMessagesContainer = /**\n     * Deletes the global messages container.\n     * @return {?}\n     */\n    function () {\n        if (messagesContainer && messagesContainer.parentNode) {\n            messagesContainer.parentNode.removeChild(messagesContainer);\n            messagesContainer = null;\n        }\n    };\n    /**\n     * Removes all cdk-describedby messages that are hosted through the element.\n     * @param {?} element\n     * @return {?}\n     */\n    AriaDescriber.prototype._removeCdkDescribedByReferenceIds = /**\n     * Removes all cdk-describedby messages that are hosted through the element.\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        // Remove all aria-describedby reference IDs that are prefixed by CDK_DESCRIBEDBY_ID_PREFIX\n        var /** @type {?} */ originalReferenceIds = getAriaReferenceIds(element, 'aria-describedby')\n            .filter(function (id) { return id.indexOf(CDK_DESCRIBEDBY_ID_PREFIX) != 0; });\n        element.setAttribute('aria-describedby', originalReferenceIds.join(' '));\n    };\n    /**\n     * Adds a message reference to the element using aria-describedby and increments the registered\n     * message's reference count.\n     * @param {?} element\n     * @param {?} message\n     * @return {?}\n     */\n    AriaDescriber.prototype._addMessageReference = /**\n     * Adds a message reference to the element using aria-describedby and increments the registered\n     * message's reference count.\n     * @param {?} element\n     * @param {?} message\n     * @return {?}\n     */\n    function (element, message) {\n        var /** @type {?} */ registeredMessage = /** @type {?} */ ((messageRegistry.get(message)));\n        // Add the aria-describedby reference and set the\n        // describedby_host attribute to mark the element.\n        addAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n        element.setAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE, '');\n        registeredMessage.referenceCount++;\n    };\n    /**\n     * Removes a message reference from the element using aria-describedby\n     * and decrements the registered message's reference count.\n     * @param {?} element\n     * @param {?} message\n     * @return {?}\n     */\n    AriaDescriber.prototype._removeMessageReference = /**\n     * Removes a message reference from the element using aria-describedby\n     * and decrements the registered message's reference count.\n     * @param {?} element\n     * @param {?} message\n     * @return {?}\n     */\n    function (element, message) {\n        var /** @type {?} */ registeredMessage = /** @type {?} */ ((messageRegistry.get(message)));\n        registeredMessage.referenceCount--;\n        removeAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n        element.removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n    };\n    /**\n     * Returns true if the element has been described by the provided message ID.\n     * @param {?} element\n     * @param {?} message\n     * @return {?}\n     */\n    AriaDescriber.prototype._isElementDescribedByMessage = /**\n     * Returns true if the element has been described by the provided message ID.\n     * @param {?} element\n     * @param {?} message\n     * @return {?}\n     */\n    function (element, message) {\n        var /** @type {?} */ referenceIds = getAriaReferenceIds(element, 'aria-describedby');\n        var /** @type {?} */ registeredMessage = messageRegistry.get(message);\n        var /** @type {?} */ messageId = registeredMessage && registeredMessage.messageElement.id;\n        return !!messageId && referenceIds.indexOf(messageId) != -1;\n    };\n    /**\n     * Determines whether a message can be described on a particular element.\n     * @param {?} element\n     * @param {?} message\n     * @return {?}\n     */\n    AriaDescriber.prototype._canBeDescribed = /**\n     * Determines whether a message can be described on a particular element.\n     * @param {?} element\n     * @param {?} message\n     * @return {?}\n     */\n    function (element, message) {\n        return element.nodeType === this._document.ELEMENT_NODE && message != null &&\n            !!(\"\" + message).trim();\n    };\n    AriaDescriber.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */\n    AriaDescriber.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] },] },\n    ]; };\n    /** @nocollapse */ AriaDescriber.ngInjectableDef = defineInjectable({ factory: function AriaDescriber_Factory() { return new AriaDescriber(inject(DOCUMENT)); }, token: AriaDescriber, providedIn: \"root\" });\n    return AriaDescriber;\n}());\n/**\n * \\@docs-private \\@deprecated \\@deletion-target 7.0.0\n * @param {?} parentDispatcher\n * @param {?} _document\n * @return {?}\n */\nfunction ARIA_DESCRIBER_PROVIDER_FACTORY(parentDispatcher, _document) {\n    return parentDispatcher || new AriaDescriber(_document);\n}\n/**\n * \\@docs-private \\@deprecated \\@deletion-target 7.0.0\n */\nvar /** @type {?} */ ARIA_DESCRIBER_PROVIDER = {\n    // If there is already an AriaDescriber available, use that. Otherwise, provide a new one.\n    provide: AriaDescriber,\n    deps: [\n        [new Optional(), new SkipSelf(), AriaDescriber],\n        /** @type {?} */ (DOCUMENT)\n    ],\n    useFactory: ARIA_DESCRIBER_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n// unsupported: template constraints.\n/**\n * This class manages keyboard events for selectable lists. If you pass it a query list\n * of items, it will set the active item correctly when arrow events occur.\n * @template T\n */\nvar  \n// unsupported: template constraints.\n/**\n * This class manages keyboard events for selectable lists. If you pass it a query list\n * of items, it will set the active item correctly when arrow events occur.\n * @template T\n */\nListKeyManager = /** @class */ (function () {\n    function ListKeyManager(_items) {\n        var _this = this;\n        this._items = _items;\n        this._activeItemIndex = -1;\n        this._wrap = false;\n        this._letterKeyStream = new Subject();\n        this._typeaheadSubscription = Subscription.EMPTY;\n        this._vertical = true;\n        /**\n         * Predicate function that can be used to check whether an item should be skipped\n         * by the key manager. By default, disabled items are skipped.\n         */\n        this._skipPredicateFn = function (item) { return item.disabled; };\n        this._pressedLetters = [];\n        /**\n         * Stream that emits any time the TAB key is pressed, so components can react\n         * when focus is shifted off of the list.\n         */\n        this.tabOut = new Subject();\n        /**\n         * Stream that emits whenever the active item of the list manager changes.\n         */\n        this.change = new Subject();\n        // We allow for the items to be an array because, in some cases, the consumer may\n        // not have access to a QueryList of the items they want to manage (e.g. when the\n        // items aren't being collected via `ViewChildren` or `ContentChildren`).\n        if (_items instanceof QueryList) {\n            _items.changes.subscribe(function (newItems) {\n                if (_this._activeItem) {\n                    var /** @type {?} */ itemArray = newItems.toArray();\n                    var /** @type {?} */ newIndex = itemArray.indexOf(_this._activeItem);\n                    if (newIndex > -1 && newIndex !== _this._activeItemIndex) {\n                        _this._activeItemIndex = newIndex;\n                    }\n                }\n            });\n        }\n    }\n    /**\n     * Sets the predicate function that determines which items should be skipped by the\n     * list key manager.\n     * @param predicate Function that determines whether the given item should be skipped.\n     */\n    /**\n     * Sets the predicate function that determines which items should be skipped by the\n     * list key manager.\n     * @param {?} predicate Function that determines whether the given item should be skipped.\n     * @return {?}\n     */\n    ListKeyManager.prototype.skipPredicate = /**\n     * Sets the predicate function that determines which items should be skipped by the\n     * list key manager.\n     * @param {?} predicate Function that determines whether the given item should be skipped.\n     * @return {?}\n     */\n    function (predicate) {\n        this._skipPredicateFn = predicate;\n        return this;\n    };\n    /**\n     * Configures wrapping mode, which determines whether the active item will wrap to\n     * the other end of list when there are no more items in the given direction.\n     * @param shouldWrap Whether the list should wrap when reaching the end.\n     */\n    /**\n     * Configures wrapping mode, which determines whether the active item will wrap to\n     * the other end of list when there are no more items in the given direction.\n     * @param {?=} shouldWrap Whether the list should wrap when reaching the end.\n     * @return {?}\n     */\n    ListKeyManager.prototype.withWrap = /**\n     * Configures wrapping mode, which determines whether the active item will wrap to\n     * the other end of list when there are no more items in the given direction.\n     * @param {?=} shouldWrap Whether the list should wrap when reaching the end.\n     * @return {?}\n     */\n    function (shouldWrap) {\n        if (shouldWrap === void 0) { shouldWrap = true; }\n        this._wrap = shouldWrap;\n        return this;\n    };\n    /**\n     * Configures whether the key manager should be able to move the selection vertically.\n     * @param enabled Whether vertical selection should be enabled.\n     */\n    /**\n     * Configures whether the key manager should be able to move the selection vertically.\n     * @param {?=} enabled Whether vertical selection should be enabled.\n     * @return {?}\n     */\n    ListKeyManager.prototype.withVerticalOrientation = /**\n     * Configures whether the key manager should be able to move the selection vertically.\n     * @param {?=} enabled Whether vertical selection should be enabled.\n     * @return {?}\n     */\n    function (enabled) {\n        if (enabled === void 0) { enabled = true; }\n        this._vertical = enabled;\n        return this;\n    };\n    /**\n     * Configures the key manager to move the selection horizontally.\n     * Passing in `null` will disable horizontal movement.\n     * @param direction Direction in which the selection can be moved.\n     */\n    /**\n     * Configures the key manager to move the selection horizontally.\n     * Passing in `null` will disable horizontal movement.\n     * @param {?} direction Direction in which the selection can be moved.\n     * @return {?}\n     */\n    ListKeyManager.prototype.withHorizontalOrientation = /**\n     * Configures the key manager to move the selection horizontally.\n     * Passing in `null` will disable horizontal movement.\n     * @param {?} direction Direction in which the selection can be moved.\n     * @return {?}\n     */\n    function (direction) {\n        this._horizontal = direction;\n        return this;\n    };\n    /**\n     * Turns on typeahead mode which allows users to set the active item by typing.\n     * @param debounceInterval Time to wait after the last keystroke before setting the active item.\n     */\n    /**\n     * Turns on typeahead mode which allows users to set the active item by typing.\n     * @param {?=} debounceInterval Time to wait after the last keystroke before setting the active item.\n     * @return {?}\n     */\n    ListKeyManager.prototype.withTypeAhead = /**\n     * Turns on typeahead mode which allows users to set the active item by typing.\n     * @param {?=} debounceInterval Time to wait after the last keystroke before setting the active item.\n     * @return {?}\n     */\n    function (debounceInterval) {\n        var _this = this;\n        if (debounceInterval === void 0) { debounceInterval = 200; }\n        if (this._items.length && this._items.some(function (item) { return typeof item.getLabel !== 'function'; })) {\n            throw Error('ListKeyManager items in typeahead mode must implement the `getLabel` method.');\n        }\n        this._typeaheadSubscription.unsubscribe();\n        // Debounce the presses of non-navigational keys, collect the ones that correspond to letters\n        // and convert those letters back into a string. Afterwards find the first item that starts\n        // with that string and select it.\n        this._typeaheadSubscription = this._letterKeyStream.pipe(tap(function (keyCode) { return _this._pressedLetters.push(keyCode); }), debounceTime(debounceInterval), filter(function () { return _this._pressedLetters.length > 0; }), map(function () { return _this._pressedLetters.join(''); })).subscribe(function (inputString) {\n            var /** @type {?} */ items = _this._getItemsArray();\n            // Start at 1 because we want to start searching at the item immediately\n            // following the current active item.\n            for (var /** @type {?} */ i = 1; i < items.length + 1; i++) {\n                var /** @type {?} */ index = (_this._activeItemIndex + i) % items.length;\n                var /** @type {?} */ item = items[index];\n                if (!_this._skipPredicateFn(item) && /** @type {?} */ ((item.getLabel))().toUpperCase().trim().indexOf(inputString) === 0) {\n                    _this.setActiveItem(index);\n                    break;\n                }\n            }\n            _this._pressedLetters = [];\n        });\n        return this;\n    };\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    ListKeyManager.prototype.setActiveItem = /**\n     * @param {?} item\n     * @return {?}\n     */\n    function (item) {\n        var /** @type {?} */ previousIndex = this._activeItemIndex;\n        this.updateActiveItem(item);\n        if (this._activeItemIndex !== previousIndex) {\n            this.change.next(this._activeItemIndex);\n        }\n    };\n    /**\n     * Sets the active item depending on the key event passed in.\n     * @param event Keyboard event to be used for determining which element should be active.\n     */\n    /**\n     * Sets the active item depending on the key event passed in.\n     * @param {?} event Keyboard event to be used for determining which element should be active.\n     * @return {?}\n     */\n    ListKeyManager.prototype.onKeydown = /**\n     * Sets the active item depending on the key event passed in.\n     * @param {?} event Keyboard event to be used for determining which element should be active.\n     * @return {?}\n     */\n    function (event) {\n        var /** @type {?} */ keyCode = event.keyCode;\n        switch (keyCode) {\n            case TAB:\n                this.tabOut.next();\n                return;\n            case DOWN_ARROW:\n                if (this._vertical) {\n                    this.setNextItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case UP_ARROW:\n                if (this._vertical) {\n                    this.setPreviousItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case RIGHT_ARROW:\n                if (this._horizontal === 'ltr') {\n                    this.setNextItemActive();\n                    break;\n                }\n                else if (this._horizontal === 'rtl') {\n                    this.setPreviousItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case LEFT_ARROW:\n                if (this._horizontal === 'ltr') {\n                    this.setPreviousItemActive();\n                    break;\n                }\n                else if (this._horizontal === 'rtl') {\n                    this.setNextItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            default:\n                // Attempt to use the `event.key` which also maps it to the user's keyboard language,\n                // otherwise fall back to resolving alphanumeric characters via the keyCode.\n                if (event.key && event.key.length === 1) {\n                    this._letterKeyStream.next(event.key.toLocaleUpperCase());\n                }\n                else if ((keyCode >= A && keyCode <= Z) || (keyCode >= ZERO && keyCode <= NINE)) {\n                    this._letterKeyStream.next(String.fromCharCode(keyCode));\n                }\n                // Note that we return here, in order to avoid preventing\n                // the default action of non-navigational keys.\n                return;\n        }\n        this._pressedLetters = [];\n        event.preventDefault();\n    };\n    Object.defineProperty(ListKeyManager.prototype, \"activeItemIndex\", {\n        /** Index of the currently active item. */\n        get: /**\n         * Index of the currently active item.\n         * @return {?}\n         */\n        function () {\n            return this._activeItemIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ListKeyManager.prototype, \"activeItem\", {\n        /** The active item. */\n        get: /**\n         * The active item.\n         * @return {?}\n         */\n        function () {\n            return this._activeItem;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** Sets the active item to the first enabled item in the list. */\n    /**\n     * Sets the active item to the first enabled item in the list.\n     * @return {?}\n     */\n    ListKeyManager.prototype.setFirstItemActive = /**\n     * Sets the active item to the first enabled item in the list.\n     * @return {?}\n     */\n    function () {\n        this._setActiveItemByIndex(0, 1);\n    };\n    /** Sets the active item to the last enabled item in the list. */\n    /**\n     * Sets the active item to the last enabled item in the list.\n     * @return {?}\n     */\n    ListKeyManager.prototype.setLastItemActive = /**\n     * Sets the active item to the last enabled item in the list.\n     * @return {?}\n     */\n    function () {\n        this._setActiveItemByIndex(this._items.length - 1, -1);\n    };\n    /** Sets the active item to the next enabled item in the list. */\n    /**\n     * Sets the active item to the next enabled item in the list.\n     * @return {?}\n     */\n    ListKeyManager.prototype.setNextItemActive = /**\n     * Sets the active item to the next enabled item in the list.\n     * @return {?}\n     */\n    function () {\n        this._activeItemIndex < 0 ? this.setFirstItemActive() : this._setActiveItemByDelta(1);\n    };\n    /** Sets the active item to a previous enabled item in the list. */\n    /**\n     * Sets the active item to a previous enabled item in the list.\n     * @return {?}\n     */\n    ListKeyManager.prototype.setPreviousItemActive = /**\n     * Sets the active item to a previous enabled item in the list.\n     * @return {?}\n     */\n    function () {\n        this._activeItemIndex < 0 && this._wrap ? this.setLastItemActive()\n            : this._setActiveItemByDelta(-1);\n    };\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    ListKeyManager.prototype.updateActiveItem = /**\n     * @param {?} item\n     * @return {?}\n     */\n    function (item) {\n        var /** @type {?} */ itemArray = this._getItemsArray();\n        var /** @type {?} */ index = typeof item === 'number' ? item : itemArray.indexOf(item);\n        this._activeItemIndex = index;\n        this._activeItem = itemArray[index];\n    };\n    /**\n     * Allows setting of the activeItemIndex without any other effects.\n     * @param index The new activeItemIndex.\n     * @deprecated Use `updateActiveItem` instead.\n     * @deletion-target 7.0.0\n     */\n    /**\n     * Allows setting of the activeItemIndex without any other effects.\n     * @deprecated Use `updateActiveItem` instead.\n     * \\@deletion-target 7.0.0\n     * @param {?} index The new activeItemIndex.\n     * @return {?}\n     */\n    ListKeyManager.prototype.updateActiveItemIndex = /**\n     * Allows setting of the activeItemIndex without any other effects.\n     * @deprecated Use `updateActiveItem` instead.\n     * \\@deletion-target 7.0.0\n     * @param {?} index The new activeItemIndex.\n     * @return {?}\n     */\n    function (index) {\n        this.updateActiveItem(index);\n    };\n    /**\n     * This method sets the active item, given a list of items and the delta between the\n     * currently active item and the new active item. It will calculate differently\n     * depending on whether wrap mode is turned on.\n     * @param {?} delta\n     * @return {?}\n     */\n    ListKeyManager.prototype._setActiveItemByDelta = /**\n     * This method sets the active item, given a list of items and the delta between the\n     * currently active item and the new active item. It will calculate differently\n     * depending on whether wrap mode is turned on.\n     * @param {?} delta\n     * @return {?}\n     */\n    function (delta) {\n        this._wrap ? this._setActiveInWrapMode(delta) : this._setActiveInDefaultMode(delta);\n    };\n    /**\n     * Sets the active item properly given \"wrap\" mode. In other words, it will continue to move\n     * down the list until it finds an item that is not disabled, and it will wrap if it\n     * encounters either end of the list.\n     * @param {?} delta\n     * @return {?}\n     */\n    ListKeyManager.prototype._setActiveInWrapMode = /**\n     * Sets the active item properly given \"wrap\" mode. In other words, it will continue to move\n     * down the list until it finds an item that is not disabled, and it will wrap if it\n     * encounters either end of the list.\n     * @param {?} delta\n     * @return {?}\n     */\n    function (delta) {\n        var /** @type {?} */ items = this._getItemsArray();\n        for (var /** @type {?} */ i = 1; i <= items.length; i++) {\n            var /** @type {?} */ index = (this._activeItemIndex + (delta * i) + items.length) % items.length;\n            var /** @type {?} */ item = items[index];\n            if (!this._skipPredicateFn(item)) {\n                this.setActiveItem(index);\n                return;\n            }\n        }\n    };\n    /**\n     * Sets the active item properly given the default mode. In other words, it will\n     * continue to move down the list until it finds an item that is not disabled. If\n     * it encounters either end of the list, it will stop and not wrap.\n     * @param {?} delta\n     * @return {?}\n     */\n    ListKeyManager.prototype._setActiveInDefaultMode = /**\n     * Sets the active item properly given the default mode. In other words, it will\n     * continue to move down the list until it finds an item that is not disabled. If\n     * it encounters either end of the list, it will stop and not wrap.\n     * @param {?} delta\n     * @return {?}\n     */\n    function (delta) {\n        this._setActiveItemByIndex(this._activeItemIndex + delta, delta);\n    };\n    /**\n     * Sets the active item to the first enabled item starting at the index specified. If the\n     * item is disabled, it will move in the fallbackDelta direction until it either\n     * finds an enabled item or encounters the end of the list.\n     * @param {?} index\n     * @param {?} fallbackDelta\n     * @return {?}\n     */\n    ListKeyManager.prototype._setActiveItemByIndex = /**\n     * Sets the active item to the first enabled item starting at the index specified. If the\n     * item is disabled, it will move in the fallbackDelta direction until it either\n     * finds an enabled item or encounters the end of the list.\n     * @param {?} index\n     * @param {?} fallbackDelta\n     * @return {?}\n     */\n    function (index, fallbackDelta) {\n        var /** @type {?} */ items = this._getItemsArray();\n        if (!items[index]) {\n            return;\n        }\n        while (this._skipPredicateFn(items[index])) {\n            index += fallbackDelta;\n            if (!items[index]) {\n                return;\n            }\n        }\n        this.setActiveItem(index);\n    };\n    /**\n     * Returns the items as an array.\n     * @return {?}\n     */\n    ListKeyManager.prototype._getItemsArray = /**\n     * Returns the items as an array.\n     * @return {?}\n     */\n    function () {\n        return this._items instanceof QueryList ? this._items.toArray() : this._items;\n    };\n    return ListKeyManager;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @template T\n */\nvar  /**\n * @template T\n */\nActiveDescendantKeyManager = /** @class */ (function (_super) {\n    __extends(ActiveDescendantKeyManager, _super);\n    function ActiveDescendantKeyManager() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    ActiveDescendantKeyManager.prototype.setActiveItem = /**\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        if (this.activeItem) {\n            this.activeItem.setInactiveStyles();\n        }\n        _super.prototype.setActiveItem.call(this, index);\n        if (this.activeItem) {\n            this.activeItem.setActiveStyles();\n        }\n    };\n    return ActiveDescendantKeyManager;\n}(ListKeyManager));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @template T\n */\nvar  /**\n * @template T\n */\nFocusKeyManager = /** @class */ (function (_super) {\n    __extends(FocusKeyManager, _super);\n    function FocusKeyManager() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._origin = 'program';\n        return _this;\n    }\n    /**\n     * Sets the focus origin that will be passed in to the items for any subsequent `focus` calls.\n     * @param origin Focus origin to be used when focusing items.\n     */\n    /**\n     * Sets the focus origin that will be passed in to the items for any subsequent `focus` calls.\n     * @param {?} origin Focus origin to be used when focusing items.\n     * @return {?}\n     */\n    FocusKeyManager.prototype.setFocusOrigin = /**\n     * Sets the focus origin that will be passed in to the items for any subsequent `focus` calls.\n     * @param {?} origin Focus origin to be used when focusing items.\n     * @return {?}\n     */\n    function (origin) {\n        this._origin = origin;\n        return this;\n    };\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    FocusKeyManager.prototype.setActiveItem = /**\n     * @param {?} item\n     * @return {?}\n     */\n    function (item) {\n        _super.prototype.setActiveItem.call(this, item);\n        if (this.activeItem) {\n            this.activeItem.focus(this._origin);\n        }\n    };\n    return FocusKeyManager;\n}(ListKeyManager));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Utility for checking the interactivity of an element, such as whether is is focusable or\n * tabbable.\n */\nvar InteractivityChecker = /** @class */ (function () {\n    function InteractivityChecker(_platform) {\n        this._platform = _platform;\n    }\n    /**\n     * Gets whether an element is disabled.\n     *\n     * @param element Element to be checked.\n     * @returns Whether the element is disabled.\n     */\n    /**\n     * Gets whether an element is disabled.\n     *\n     * @param {?} element Element to be checked.\n     * @return {?} Whether the element is disabled.\n     */\n    InteractivityChecker.prototype.isDisabled = /**\n     * Gets whether an element is disabled.\n     *\n     * @param {?} element Element to be checked.\n     * @return {?} Whether the element is disabled.\n     */\n    function (element) {\n        // This does not capture some cases, such as a non-form control with a disabled attribute or\n        // a form control inside of a disabled form, but should capture the most common cases.\n        return element.hasAttribute('disabled');\n    };\n    /**\n     * Gets whether an element is visible for the purposes of interactivity.\n     *\n     * This will capture states like `display: none` and `visibility: hidden`, but not things like\n     * being clipped by an `overflow: hidden` parent or being outside the viewport.\n     *\n     * @returns Whether the element is visible.\n     */\n    /**\n     * Gets whether an element is visible for the purposes of interactivity.\n     *\n     * This will capture states like `display: none` and `visibility: hidden`, but not things like\n     * being clipped by an `overflow: hidden` parent or being outside the viewport.\n     *\n     * @param {?} element\n     * @return {?} Whether the element is visible.\n     */\n    InteractivityChecker.prototype.isVisible = /**\n     * Gets whether an element is visible for the purposes of interactivity.\n     *\n     * This will capture states like `display: none` and `visibility: hidden`, but not things like\n     * being clipped by an `overflow: hidden` parent or being outside the viewport.\n     *\n     * @param {?} element\n     * @return {?} Whether the element is visible.\n     */\n    function (element) {\n        return hasGeometry(element) && getComputedStyle(element).visibility === 'visible';\n    };\n    /**\n     * Gets whether an element can be reached via Tab key.\n     * Assumes that the element has already been checked with isFocusable.\n     *\n     * @param element Element to be checked.\n     * @returns Whether the element is tabbable.\n     */\n    /**\n     * Gets whether an element can be reached via Tab key.\n     * Assumes that the element has already been checked with isFocusable.\n     *\n     * @param {?} element Element to be checked.\n     * @return {?} Whether the element is tabbable.\n     */\n    InteractivityChecker.prototype.isTabbable = /**\n     * Gets whether an element can be reached via Tab key.\n     * Assumes that the element has already been checked with isFocusable.\n     *\n     * @param {?} element Element to be checked.\n     * @return {?} Whether the element is tabbable.\n     */\n    function (element) {\n        // Nothing is tabbable on the the server 😎\n        if (!this._platform.isBrowser) {\n            return false;\n        }\n        var /** @type {?} */ frameElement = getFrameElement(getWindow(element));\n        if (frameElement) {\n            var /** @type {?} */ frameType = frameElement && frameElement.nodeName.toLowerCase();\n            // Frame elements inherit their tabindex onto all child elements.\n            if (getTabIndexValue(frameElement) === -1) {\n                return false;\n            }\n            // Webkit and Blink consider anything inside of an <object> element as non-tabbable.\n            if ((this._platform.BLINK || this._platform.WEBKIT) && frameType === 'object') {\n                return false;\n            }\n            // Webkit and Blink disable tabbing to an element inside of an invisible frame.\n            if ((this._platform.BLINK || this._platform.WEBKIT) && !this.isVisible(frameElement)) {\n                return false;\n            }\n        }\n        var /** @type {?} */ nodeName = element.nodeName.toLowerCase();\n        var /** @type {?} */ tabIndexValue = getTabIndexValue(element);\n        if (element.hasAttribute('contenteditable')) {\n            return tabIndexValue !== -1;\n        }\n        if (nodeName === 'iframe') {\n            // The frames may be tabbable depending on content, but it's not possibly to reliably\n            // investigate the content of the frames.\n            return false;\n        }\n        if (nodeName === 'audio') {\n            if (!element.hasAttribute('controls')) {\n                // By default an <audio> element without the controls enabled is not tabbable.\n                return false;\n            }\n            else if (this._platform.BLINK) {\n                // In Blink <audio controls> elements are always tabbable.\n                return true;\n            }\n        }\n        if (nodeName === 'video') {\n            if (!element.hasAttribute('controls') && this._platform.TRIDENT) {\n                // In Trident a <video> element without the controls enabled is not tabbable.\n                return false;\n            }\n            else if (this._platform.BLINK || this._platform.FIREFOX) {\n                // In Chrome and Firefox <video controls> elements are always tabbable.\n                return true;\n            }\n        }\n        if (nodeName === 'object' && (this._platform.BLINK || this._platform.WEBKIT)) {\n            // In all Blink and WebKit based browsers <object> elements are never tabbable.\n            return false;\n        }\n        // In iOS the browser only considers some specific elements as tabbable.\n        if (this._platform.WEBKIT && this._platform.IOS && !isPotentiallyTabbableIOS(element)) {\n            return false;\n        }\n        return element.tabIndex >= 0;\n    };\n    /**\n     * Gets whether an element can be focused by the user.\n     *\n     * @param element Element to be checked.\n     * @returns Whether the element is focusable.\n     */\n    /**\n     * Gets whether an element can be focused by the user.\n     *\n     * @param {?} element Element to be checked.\n     * @return {?} Whether the element is focusable.\n     */\n    InteractivityChecker.prototype.isFocusable = /**\n     * Gets whether an element can be focused by the user.\n     *\n     * @param {?} element Element to be checked.\n     * @return {?} Whether the element is focusable.\n     */\n    function (element) {\n        // Perform checks in order of left to most expensive.\n        // Again, naive approach that does not capture many edge cases and browser quirks.\n        return isPotentiallyFocusable(element) && !this.isDisabled(element) && this.isVisible(element);\n    };\n    InteractivityChecker.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */\n    InteractivityChecker.ctorParameters = function () { return [\n        { type: Platform, },\n    ]; };\n    /** @nocollapse */ InteractivityChecker.ngInjectableDef = defineInjectable({ factory: function InteractivityChecker_Factory() { return new InteractivityChecker(inject(Platform)); }, token: InteractivityChecker, providedIn: \"root\" });\n    return InteractivityChecker;\n}());\n/**\n * Returns the frame element from a window object. Since browsers like MS Edge throw errors if\n * the frameElement property is being accessed from a different host address, this property\n * should be accessed carefully.\n * @param {?} window\n * @return {?}\n */\nfunction getFrameElement(window) {\n    try {\n        return /** @type {?} */ (window.frameElement);\n    }\n    catch (/** @type {?} */ e) {\n        return null;\n    }\n}\n/**\n * Checks whether the specified element has any geometry / rectangles.\n * @param {?} element\n * @return {?}\n */\nfunction hasGeometry(element) {\n    // Use logic from jQuery to check for an invisible element.\n    // See https://github.com/jquery/jquery/blob/master/src/css/hiddenVisibleSelectors.js#L12\n    return !!(element.offsetWidth || element.offsetHeight ||\n        (typeof element.getClientRects === 'function' && element.getClientRects().length));\n}\n/**\n * Gets whether an element's\n * @param {?} element\n * @return {?}\n */\nfunction isNativeFormElement(element) {\n    var /** @type {?} */ nodeName = element.nodeName.toLowerCase();\n    return nodeName === 'input' ||\n        nodeName === 'select' ||\n        nodeName === 'button' ||\n        nodeName === 'textarea';\n}\n/**\n * Gets whether an element is an `<input type=\"hidden\">`.\n * @param {?} element\n * @return {?}\n */\nfunction isHiddenInput(element) {\n    return isInputElement(element) && element.type == 'hidden';\n}\n/**\n * Gets whether an element is an anchor that has an href attribute.\n * @param {?} element\n * @return {?}\n */\nfunction isAnchorWithHref(element) {\n    return isAnchorElement(element) && element.hasAttribute('href');\n}\n/**\n * Gets whether an element is an input element.\n * @param {?} element\n * @return {?}\n */\nfunction isInputElement(element) {\n    return element.nodeName.toLowerCase() == 'input';\n}\n/**\n * Gets whether an element is an anchor element.\n * @param {?} element\n * @return {?}\n */\nfunction isAnchorElement(element) {\n    return element.nodeName.toLowerCase() == 'a';\n}\n/**\n * Gets whether an element has a valid tabindex.\n * @param {?} element\n * @return {?}\n */\nfunction hasValidTabIndex(element) {\n    if (!element.hasAttribute('tabindex') || element.tabIndex === undefined) {\n        return false;\n    }\n    var /** @type {?} */ tabIndex = element.getAttribute('tabindex');\n    // IE11 parses tabindex=\"\" as the value \"-32768\"\n    if (tabIndex == '-32768') {\n        return false;\n    }\n    return !!(tabIndex && !isNaN(parseInt(tabIndex, 10)));\n}\n/**\n * Returns the parsed tabindex from the element attributes instead of returning the\n * evaluated tabindex from the browsers defaults.\n * @param {?} element\n * @return {?}\n */\nfunction getTabIndexValue(element) {\n    if (!hasValidTabIndex(element)) {\n        return null;\n    }\n    // See browser issue in Gecko https://bugzilla.mozilla.org/show_bug.cgi?id=1128054\n    var /** @type {?} */ tabIndex = parseInt(element.getAttribute('tabindex') || '', 10);\n    return isNaN(tabIndex) ? -1 : tabIndex;\n}\n/**\n * Checks whether the specified element is potentially tabbable on iOS\n * @param {?} element\n * @return {?}\n */\nfunction isPotentiallyTabbableIOS(element) {\n    var /** @type {?} */ nodeName = element.nodeName.toLowerCase();\n    var /** @type {?} */ inputType = nodeName === 'input' && (/** @type {?} */ (element)).type;\n    return inputType === 'text'\n        || inputType === 'password'\n        || nodeName === 'select'\n        || nodeName === 'textarea';\n}\n/**\n * Gets whether an element is potentially focusable without taking current visible/disabled state\n * into account.\n * @param {?} element\n * @return {?}\n */\nfunction isPotentiallyFocusable(element) {\n    // Inputs are potentially focusable *unless* they're type=\"hidden\".\n    if (isHiddenInput(element)) {\n        return false;\n    }\n    return isNativeFormElement(element) ||\n        isAnchorWithHref(element) ||\n        element.hasAttribute('contenteditable') ||\n        hasValidTabIndex(element);\n}\n/**\n * Gets the parent window of a DOM node with regards of being inside of an iframe.\n * @param {?} node\n * @return {?}\n */\nfunction getWindow(node) {\n    return node.ownerDocument.defaultView || window;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class currently uses a relatively simple approach to focus trapping.\n * It assumes that the tab order is the same as DOM order, which is not necessarily true.\n * Things like `tabIndex > 0`, flex `order`, and shadow roots can cause to two to misalign.\n */\nvar  /**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class currently uses a relatively simple approach to focus trapping.\n * It assumes that the tab order is the same as DOM order, which is not necessarily true.\n * Things like `tabIndex > 0`, flex `order`, and shadow roots can cause to two to misalign.\n */\nFocusTrap = /** @class */ (function () {\n    function FocusTrap(_element, _checker, _ngZone, _document, deferAnchors) {\n        if (deferAnchors === void 0) { deferAnchors = false; }\n        this._element = _element;\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._hasAttached = false;\n        this._enabled = true;\n        if (!deferAnchors) {\n            this.attachAnchors();\n        }\n    }\n    Object.defineProperty(FocusTrap.prototype, \"enabled\", {\n        /** Whether the focus trap is active. */\n        get: /**\n         * Whether the focus trap is active.\n         * @return {?}\n         */\n        function () { return this._enabled; },\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) {\n            this._enabled = val;\n            if (this._startAnchor && this._endAnchor) {\n                this._startAnchor.tabIndex = this._endAnchor.tabIndex = this._enabled ? 0 : -1;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** Destroys the focus trap by cleaning up the anchors. */\n    /**\n     * Destroys the focus trap by cleaning up the anchors.\n     * @return {?}\n     */\n    FocusTrap.prototype.destroy = /**\n     * Destroys the focus trap by cleaning up the anchors.\n     * @return {?}\n     */\n    function () {\n        if (this._startAnchor && this._startAnchor.parentNode) {\n            this._startAnchor.parentNode.removeChild(this._startAnchor);\n        }\n        if (this._endAnchor && this._endAnchor.parentNode) {\n            this._endAnchor.parentNode.removeChild(this._endAnchor);\n        }\n        this._startAnchor = this._endAnchor = null;\n    };\n    /**\n     * Inserts the anchors into the DOM. This is usually done automatically\n     * in the constructor, but can be deferred for cases like directives with `*ngIf`.\n     * @returns Whether the focus trap managed to attach successfuly. This may not be the case\n     * if the target element isn't currently in the DOM.\n     */\n    /**\n     * Inserts the anchors into the DOM. This is usually done automatically\n     * in the constructor, but can be deferred for cases like directives with `*ngIf`.\n     * @return {?} Whether the focus trap managed to attach successfuly. This may not be the case\n     * if the target element isn't currently in the DOM.\n     */\n    FocusTrap.prototype.attachAnchors = /**\n     * Inserts the anchors into the DOM. This is usually done automatically\n     * in the constructor, but can be deferred for cases like directives with `*ngIf`.\n     * @return {?} Whether the focus trap managed to attach successfuly. This may not be the case\n     * if the target element isn't currently in the DOM.\n     */\n    function () {\n        var _this = this;\n        // If we're not on the browser, there can be no focus to trap.\n        if (this._hasAttached) {\n            return true;\n        }\n        this._ngZone.runOutsideAngular(function () {\n            if (!_this._startAnchor) {\n                _this._startAnchor = _this._createAnchor(); /** @type {?} */\n                ((_this._startAnchor)).addEventListener('focus', function () { return _this.focusLastTabbableElement(); });\n            }\n            if (!_this._endAnchor) {\n                _this._endAnchor = _this._createAnchor(); /** @type {?} */\n                ((_this._endAnchor)).addEventListener('focus', function () { return _this.focusFirstTabbableElement(); });\n            }\n        });\n        if (this._element.parentNode) {\n            this._element.parentNode.insertBefore(/** @type {?} */ ((this._startAnchor)), this._element);\n            this._element.parentNode.insertBefore(/** @type {?} */ ((this._endAnchor)), this._element.nextSibling);\n            this._hasAttached = true;\n        }\n        return this._hasAttached;\n    };\n    /**\n     * Waits for the zone to stabilize, then either focuses the first element that the\n     * user specified, or the first tabbable element.\n     * @returns Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfuly.\n     */\n    /**\n     * Waits for the zone to stabilize, then either focuses the first element that the\n     * user specified, or the first tabbable element.\n     * @return {?} Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfuly.\n     */\n    FocusTrap.prototype.focusInitialElementWhenReady = /**\n     * Waits for the zone to stabilize, then either focuses the first element that the\n     * user specified, or the first tabbable element.\n     * @return {?} Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfuly.\n     */\n    function () {\n        var _this = this;\n        return new Promise(function (resolve) {\n            _this._executeOnStable(function () { return resolve(_this.focusInitialElement()); });\n        });\n    };\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the first tabbable element within the focus trap region.\n     * @returns Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfuly.\n     */\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the first tabbable element within the focus trap region.\n     * @return {?} Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfuly.\n     */\n    FocusTrap.prototype.focusFirstTabbableElementWhenReady = /**\n     * Waits for the zone to stabilize, then focuses\n     * the first tabbable element within the focus trap region.\n     * @return {?} Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfuly.\n     */\n    function () {\n        var _this = this;\n        return new Promise(function (resolve) {\n            _this._executeOnStable(function () { return resolve(_this.focusFirstTabbableElement()); });\n        });\n    };\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the last tabbable element within the focus trap region.\n     * @returns Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfuly.\n     */\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the last tabbable element within the focus trap region.\n     * @return {?} Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfuly.\n     */\n    FocusTrap.prototype.focusLastTabbableElementWhenReady = /**\n     * Waits for the zone to stabilize, then focuses\n     * the last tabbable element within the focus trap region.\n     * @return {?} Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfuly.\n     */\n    function () {\n        var _this = this;\n        return new Promise(function (resolve) {\n            _this._executeOnStable(function () { return resolve(_this.focusLastTabbableElement()); });\n        });\n    };\n    /**\n     * Get the specified boundary element of the trapped region.\n     * @param {?} bound The boundary to get (start or end of trapped region).\n     * @return {?} The boundary element.\n     */\n    FocusTrap.prototype._getRegionBoundary = /**\n     * Get the specified boundary element of the trapped region.\n     * @param {?} bound The boundary to get (start or end of trapped region).\n     * @return {?} The boundary element.\n     */\n    function (bound) {\n        // Contains the deprecated version of selector, for temporary backwards comparability.\n        var /** @type {?} */ markers = /** @type {?} */ (this._element.querySelectorAll(\"[cdk-focus-region-\" + bound + \"], \" +\n            (\"[cdkFocusRegion\" + bound + \"], \") +\n            (\"[cdk-focus-\" + bound + \"]\")));\n        for (var /** @type {?} */ i = 0; i < markers.length; i++) {\n            // @deletion-target 7.0.0\n            if (markers[i].hasAttribute(\"cdk-focus-\" + bound)) {\n                console.warn(\"Found use of deprecated attribute 'cdk-focus-\" + bound + \"', \" +\n                    (\"use 'cdkFocusRegion\" + bound + \"' instead. The deprecated \") +\n                    \"attribute will be removed in 7.0.0.\", markers[i]);\n            }\n            else if (markers[i].hasAttribute(\"cdk-focus-region-\" + bound)) {\n                console.warn(\"Found use of deprecated attribute 'cdk-focus-region-\" + bound + \"', \" +\n                    (\"use 'cdkFocusRegion\" + bound + \"' instead. The deprecated attribute \") +\n                    \"will be removed in 7.0.0.\", markers[i]);\n            }\n        }\n        if (bound == 'start') {\n            return markers.length ? markers[0] : this._getFirstTabbableElement(this._element);\n        }\n        return markers.length ?\n            markers[markers.length - 1] : this._getLastTabbableElement(this._element);\n    };\n    /**\n     * Focuses the element that should be focused when the focus trap is initialized.\n     * @returns Whether focus was moved successfuly.\n     */\n    /**\n     * Focuses the element that should be focused when the focus trap is initialized.\n     * @return {?} Whether focus was moved successfuly.\n     */\n    FocusTrap.prototype.focusInitialElement = /**\n     * Focuses the element that should be focused when the focus trap is initialized.\n     * @return {?} Whether focus was moved successfuly.\n     */\n    function () {\n        // Contains the deprecated version of selector, for temporary backwards comparability.\n        var /** @type {?} */ redirectToElement = /** @type {?} */ (this._element.querySelector(\"[cdk-focus-initial], \" +\n            \"[cdkFocusInitial]\"));\n        if (redirectToElement) {\n            // @deletion-target 7.0.0\n            if (redirectToElement.hasAttribute(\"cdk-focus-initial\")) {\n                console.warn(\"Found use of deprecated attribute 'cdk-focus-initial', \" +\n                    \"use 'cdkFocusInitial' instead. The deprecated attribute \" +\n                    \"will be removed in 7.0.0\", redirectToElement);\n            }\n            redirectToElement.focus();\n            return true;\n        }\n        return this.focusFirstTabbableElement();\n    };\n    /**\n     * Focuses the first tabbable element within the focus trap region.\n     * @returns Whether focus was moved successfuly.\n     */\n    /**\n     * Focuses the first tabbable element within the focus trap region.\n     * @return {?} Whether focus was moved successfuly.\n     */\n    FocusTrap.prototype.focusFirstTabbableElement = /**\n     * Focuses the first tabbable element within the focus trap region.\n     * @return {?} Whether focus was moved successfuly.\n     */\n    function () {\n        var /** @type {?} */ redirectToElement = this._getRegionBoundary('start');\n        if (redirectToElement) {\n            redirectToElement.focus();\n        }\n        return !!redirectToElement;\n    };\n    /**\n     * Focuses the last tabbable element within the focus trap region.\n     * @returns Whether focus was moved successfuly.\n     */\n    /**\n     * Focuses the last tabbable element within the focus trap region.\n     * @return {?} Whether focus was moved successfuly.\n     */\n    FocusTrap.prototype.focusLastTabbableElement = /**\n     * Focuses the last tabbable element within the focus trap region.\n     * @return {?} Whether focus was moved successfuly.\n     */\n    function () {\n        var /** @type {?} */ redirectToElement = this._getRegionBoundary('end');\n        if (redirectToElement) {\n            redirectToElement.focus();\n        }\n        return !!redirectToElement;\n    };\n    /**\n     * Checks whether the focus trap has successfuly been attached.\n     */\n    /**\n     * Checks whether the focus trap has successfuly been attached.\n     * @return {?}\n     */\n    FocusTrap.prototype.hasAttached = /**\n     * Checks whether the focus trap has successfuly been attached.\n     * @return {?}\n     */\n    function () {\n        return this._hasAttached;\n    };\n    /**\n     * Get the first tabbable element from a DOM subtree (inclusive).\n     * @param {?} root\n     * @return {?}\n     */\n    FocusTrap.prototype._getFirstTabbableElement = /**\n     * Get the first tabbable element from a DOM subtree (inclusive).\n     * @param {?} root\n     * @return {?}\n     */\n    function (root) {\n        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n            return root;\n        }\n        // Iterate in DOM order. Note that IE doesn't have `children` for SVG so we fall\n        // back to `childNodes` which includes text nodes, comments etc.\n        var /** @type {?} */ children = root.children || root.childNodes;\n        for (var /** @type {?} */ i = 0; i < children.length; i++) {\n            var /** @type {?} */ tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE ?\n                this._getFirstTabbableElement(/** @type {?} */ (children[i])) :\n                null;\n            if (tabbableChild) {\n                return tabbableChild;\n            }\n        }\n        return null;\n    };\n    /**\n     * Get the last tabbable element from a DOM subtree (inclusive).\n     * @param {?} root\n     * @return {?}\n     */\n    FocusTrap.prototype._getLastTabbableElement = /**\n     * Get the last tabbable element from a DOM subtree (inclusive).\n     * @param {?} root\n     * @return {?}\n     */\n    function (root) {\n        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n            return root;\n        }\n        // Iterate in reverse DOM order.\n        var /** @type {?} */ children = root.children || root.childNodes;\n        for (var /** @type {?} */ i = children.length - 1; i >= 0; i--) {\n            var /** @type {?} */ tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE ?\n                this._getLastTabbableElement(/** @type {?} */ (children[i])) :\n                null;\n            if (tabbableChild) {\n                return tabbableChild;\n            }\n        }\n        return null;\n    };\n    /**\n     * Creates an anchor element.\n     * @return {?}\n     */\n    FocusTrap.prototype._createAnchor = /**\n     * Creates an anchor element.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ anchor = this._document.createElement('div');\n        anchor.tabIndex = this._enabled ? 0 : -1;\n        anchor.classList.add('cdk-visually-hidden');\n        anchor.classList.add('cdk-focus-trap-anchor');\n        return anchor;\n    };\n    /**\n     * Executes a function when the zone is stable.\n     * @param {?} fn\n     * @return {?}\n     */\n    FocusTrap.prototype._executeOnStable = /**\n     * Executes a function when the zone is stable.\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        if (this._ngZone.isStable) {\n            fn();\n        }\n        else {\n            this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(fn);\n        }\n    };\n    return FocusTrap;\n}());\n/**\n * Factory that allows easy instantiation of focus traps.\n */\nvar FocusTrapFactory = /** @class */ (function () {\n    function FocusTrapFactory(_checker, _ngZone, _document) {\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._document = _document;\n    }\n    /**\n     * Creates a focus-trapped region around the given element.\n     * @param element The element around which focus will be trapped.\n     * @param deferCaptureElements Defers the creation of focus-capturing elements to be done\n     *     manually by the user.\n     * @returns The created focus trap instance.\n     */\n    /**\n     * Creates a focus-trapped region around the given element.\n     * @param {?} element The element around which focus will be trapped.\n     * @param {?=} deferCaptureElements Defers the creation of focus-capturing elements to be done\n     *     manually by the user.\n     * @return {?} The created focus trap instance.\n     */\n    FocusTrapFactory.prototype.create = /**\n     * Creates a focus-trapped region around the given element.\n     * @param {?} element The element around which focus will be trapped.\n     * @param {?=} deferCaptureElements Defers the creation of focus-capturing elements to be done\n     *     manually by the user.\n     * @return {?} The created focus trap instance.\n     */\n    function (element, deferCaptureElements) {\n        if (deferCaptureElements === void 0) { deferCaptureElements = false; }\n        return new FocusTrap(element, this._checker, this._ngZone, this._document, deferCaptureElements);\n    };\n    FocusTrapFactory.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */\n    FocusTrapFactory.ctorParameters = function () { return [\n        { type: InteractivityChecker, },\n        { type: NgZone, },\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] },] },\n    ]; };\n    /** @nocollapse */ FocusTrapFactory.ngInjectableDef = defineInjectable({ factory: function FocusTrapFactory_Factory() { return new FocusTrapFactory(inject(InteractivityChecker), inject(NgZone), inject(DOCUMENT)); }, token: FocusTrapFactory, providedIn: \"root\" });\n    return FocusTrapFactory;\n}());\n/**\n * Directive for trapping focus within a region.\n */\nvar CdkTrapFocus = /** @class */ (function () {\n    function CdkTrapFocus(_elementRef, _focusTrapFactory, _document) {\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        /**\n         * Previously focused element to restore focus to upon destroy when using autoCapture.\n         */\n        this._previouslyFocusedElement = null;\n        this._document = _document;\n        this.focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement, true);\n    }\n    Object.defineProperty(CdkTrapFocus.prototype, \"enabled\", {\n        get: /**\n         * Whether the focus trap is active.\n         * @return {?}\n         */\n        function () { return this.focusTrap.enabled; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this.focusTrap.enabled = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkTrapFocus.prototype, \"autoCapture\", {\n        get: /**\n         * Whether the directive should automatially move focus into the trapped region upon\n         * initialization and return focus to the previous activeElement upon destruction.\n         * @return {?}\n         */\n        function () { return this._autoCapture; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this._autoCapture = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    CdkTrapFocus.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this.focusTrap.destroy();\n        // If we stored a previously focused element when using autoCapture, return focus to that\n        // element now that the trapped region is being destroyed.\n        if (this._previouslyFocusedElement) {\n            this._previouslyFocusedElement.focus();\n            this._previouslyFocusedElement = null;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    CdkTrapFocus.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n    function () {\n        this.focusTrap.attachAnchors();\n        if (this.autoCapture) {\n            this._previouslyFocusedElement = /** @type {?} */ (this._document.activeElement);\n            this.focusTrap.focusInitialElementWhenReady();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    CdkTrapFocus.prototype.ngDoCheck = /**\n     * @return {?}\n     */\n    function () {\n        if (!this.focusTrap.hasAttached()) {\n            this.focusTrap.attachAnchors();\n        }\n    };\n    CdkTrapFocus.decorators = [\n        { type: Directive, args: [{\n                    selector: '[cdkTrapFocus]',\n                    exportAs: 'cdkTrapFocus',\n                },] },\n    ];\n    /** @nocollapse */\n    CdkTrapFocus.ctorParameters = function () { return [\n        { type: ElementRef, },\n        { type: FocusTrapFactory, },\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] },] },\n    ]; };\n    CdkTrapFocus.propDecorators = {\n        \"enabled\": [{ type: Input, args: ['cdkTrapFocus',] },],\n        \"autoCapture\": [{ type: Input, args: ['cdkTrapFocusAutoCapture',] },],\n    };\n    return CdkTrapFocus;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n// The token for the live announcer element is defined in a separate file from LiveAnnouncer\n// as a workaround for https://github.com/angular/angular/issues/22559\nvar /** @type {?} */ LIVE_ANNOUNCER_ELEMENT_TOKEN = new InjectionToken('liveAnnouncerElement', {\n    providedIn: 'root',\n    factory: LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY() {\n    return null;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar LiveAnnouncer = /** @class */ (function () {\n    function LiveAnnouncer(elementToken, _document) {\n        this._document = _document;\n        // We inject the live element as `any` because the constructor signature cannot reference\n        // browser globals (HTMLElement) on non-browser environments, since having a class decorator\n        // causes TypeScript to preserve the constructor signature types.\n        this._liveElement = elementToken || this._createLiveElement();\n    }\n    /**\n     * Announces a message to screenreaders.\n     * @param message Message to be announced to the screenreader\n     * @param politeness The politeness of the announcer element\n     * @returns Promise that will be resolved when the message is added to the DOM.\n     */\n    /**\n     * Announces a message to screenreaders.\n     * @param {?} message Message to be announced to the screenreader\n     * @param {?=} politeness The politeness of the announcer element\n     * @return {?} Promise that will be resolved when the message is added to the DOM.\n     */\n    LiveAnnouncer.prototype.announce = /**\n     * Announces a message to screenreaders.\n     * @param {?} message Message to be announced to the screenreader\n     * @param {?=} politeness The politeness of the announcer element\n     * @return {?} Promise that will be resolved when the message is added to the DOM.\n     */\n    function (message, politeness) {\n        var _this = this;\n        if (politeness === void 0) { politeness = 'polite'; }\n        this._liveElement.textContent = '';\n        // TODO: ensure changing the politeness works on all environments we support.\n        this._liveElement.setAttribute('aria-live', politeness);\n        // This 100ms timeout is necessary for some browser + screen-reader combinations:\n        // - Both JAWS and NVDA over IE11 will not announce anything without a non-zero timeout.\n        // - With Chrome and IE11 with NVDA or JAWS, a repeated (identical) message won't be read a\n        //   second time without clearing and then using a non-zero delay.\n        // (using JAWS 17 at time of this writing).\n        return new Promise(function (resolve) {\n            setTimeout(function () {\n                _this._liveElement.textContent = message;\n                resolve();\n            }, 100);\n        });\n    };\n    /**\n     * @return {?}\n     */\n    LiveAnnouncer.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this._liveElement && this._liveElement.parentNode) {\n            this._liveElement.parentNode.removeChild(this._liveElement);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    LiveAnnouncer.prototype._createLiveElement = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ liveEl = this._document.createElement('div');\n        liveEl.classList.add('cdk-visually-hidden');\n        liveEl.setAttribute('aria-atomic', 'true');\n        liveEl.setAttribute('aria-live', 'polite');\n        this._document.body.appendChild(liveEl);\n        return liveEl;\n    };\n    LiveAnnouncer.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */\n    LiveAnnouncer.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [LIVE_ANNOUNCER_ELEMENT_TOKEN,] },] },\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] },] },\n    ]; };\n    /** @nocollapse */ LiveAnnouncer.ngInjectableDef = defineInjectable({ factory: function LiveAnnouncer_Factory() { return new LiveAnnouncer(inject(LIVE_ANNOUNCER_ELEMENT_TOKEN, 8), inject(DOCUMENT)); }, token: LiveAnnouncer, providedIn: \"root\" });\n    return LiveAnnouncer;\n}());\n/**\n * A directive that works similarly to aria-live, but uses the LiveAnnouncer to ensure compatibility\n * with a wider range of browsers and screen readers.\n */\nvar CdkAriaLive = /** @class */ (function () {\n    function CdkAriaLive(_elementRef, _liveAnnouncer, _contentObserver, _ngZone) {\n        this._elementRef = _elementRef;\n        this._liveAnnouncer = _liveAnnouncer;\n        this._contentObserver = _contentObserver;\n        this._ngZone = _ngZone;\n        this._politeness = 'off';\n    }\n    Object.defineProperty(CdkAriaLive.prototype, \"politeness\", {\n        get: /**\n         * The aria-live politeness level to use when announcing messages.\n         * @return {?}\n         */\n        function () { return this._politeness; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            var _this = this;\n            this._politeness = value === 'polite' || value === 'assertive' ? value : 'off';\n            if (this._politeness === 'off') {\n                if (this._subscription) {\n                    this._subscription.unsubscribe();\n                    this._subscription = null;\n                }\n            }\n            else {\n                if (!this._subscription) {\n                    this._subscription = this._ngZone.runOutsideAngular(function () {\n                        return _this._contentObserver.observe(_this._elementRef.nativeElement).subscribe(function () {\n                            return _this._liveAnnouncer.announce(_this._elementRef.nativeElement.innerText, _this._politeness);\n                        });\n                    });\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    CdkAriaLive.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this._subscription) {\n            this._subscription.unsubscribe();\n        }\n    };\n    CdkAriaLive.decorators = [\n        { type: Directive, args: [{\n                    selector: '[cdkAriaLive]',\n                    exportAs: 'cdkAriaLive',\n                },] },\n    ];\n    /** @nocollapse */\n    CdkAriaLive.ctorParameters = function () { return [\n        { type: ElementRef, },\n        { type: LiveAnnouncer, },\n        { type: ContentObserver, },\n        { type: NgZone, },\n    ]; };\n    CdkAriaLive.propDecorators = {\n        \"politeness\": [{ type: Input, args: ['cdkAriaLive',] },],\n    };\n    return CdkAriaLive;\n}());\n/**\n * \\@docs-private \\@deprecated \\@deletion-target 7.0.0\n * @param {?} parentDispatcher\n * @param {?} liveElement\n * @param {?} _document\n * @return {?}\n */\nfunction LIVE_ANNOUNCER_PROVIDER_FACTORY(parentDispatcher, liveElement, _document) {\n    return parentDispatcher || new LiveAnnouncer(liveElement, _document);\n}\n/**\n * \\@docs-private \\@deprecated \\@deletion-target 7.0.0\n */\nvar /** @type {?} */ LIVE_ANNOUNCER_PROVIDER = {\n    // If there is already a LiveAnnouncer available, use that. Otherwise, provide a new one.\n    provide: LiveAnnouncer,\n    deps: [\n        [new Optional(), new SkipSelf(), LiveAnnouncer],\n        [new Optional(), new Inject(LIVE_ANNOUNCER_ELEMENT_TOKEN)],\n        DOCUMENT,\n    ],\n    useFactory: LIVE_ANNOUNCER_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n// This is the value used by AngularJS Material. Through trial and error (on iPhone 6S) they found\n// that a value of around 650ms seems appropriate.\nvar /** @type {?} */ TOUCH_BUFFER_MS = 650;\n/**\n * Monitors mouse and keyboard events to determine the cause of focus events.\n */\nvar FocusMonitor = /** @class */ (function () {\n    function FocusMonitor(_ngZone, _platform) {\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        /**\n         * The focus origin that the next focus event is a result of.\n         */\n        this._origin = null;\n        /**\n         * Whether the window has just been focused.\n         */\n        this._windowFocused = false;\n        /**\n         * Map of elements being monitored to their info.\n         */\n        this._elementInfo = new Map();\n        /**\n         * A map of global objects to lists of current listeners.\n         */\n        this._unregisterGlobalListeners = function () { };\n        /**\n         * The number of elements currently being monitored.\n         */\n        this._monitoredElementCount = 0;\n    }\n    /**\n     * Monitors focus on an element and applies appropriate CSS classes.\n     * @param element The element to monitor\n     * @param checkChildren Whether to count the element as focused when its children are focused.\n     * @returns An observable that emits when the focus state of the element changes.\n     *     When the element is blurred, null will be emitted.\n     */\n    /**\n     * Monitors focus on an element and applies appropriate CSS classes.\n     * @param {?} element The element to monitor\n     * @param {?=} checkChildren Whether to count the element as focused when its children are focused.\n     * @return {?} An observable that emits when the focus state of the element changes.\n     *     When the element is blurred, null will be emitted.\n     */\n    FocusMonitor.prototype.monitor = /**\n     * Monitors focus on an element and applies appropriate CSS classes.\n     * @param {?} element The element to monitor\n     * @param {?=} checkChildren Whether to count the element as focused when its children are focused.\n     * @return {?} An observable that emits when the focus state of the element changes.\n     *     When the element is blurred, null will be emitted.\n     */\n    function (element, checkChildren) {\n        var _this = this;\n        if (checkChildren === void 0) { checkChildren = false; }\n        // Do nothing if we're not on the browser platform.\n        if (!this._platform.isBrowser) {\n            return of(null);\n        }\n        // Check if we're already monitoring this element.\n        if (this._elementInfo.has(element)) {\n            var /** @type {?} */ cachedInfo = this._elementInfo.get(element); /** @type {?} */\n            ((cachedInfo)).checkChildren = checkChildren;\n            return /** @type {?} */ ((cachedInfo)).subject.asObservable();\n        }\n        // Create monitored element info.\n        var /** @type {?} */ info = {\n            unlisten: function () { },\n            checkChildren: checkChildren,\n            subject: new Subject()\n        };\n        this._elementInfo.set(element, info);\n        this._incrementMonitoredElementCount();\n        // Start listening. We need to listen in capture phase since focus events don't bubble.\n        var /** @type {?} */ focusListener = function (event) { return _this._onFocus(event, element); };\n        var /** @type {?} */ blurListener = function (event) { return _this._onBlur(event, element); };\n        this._ngZone.runOutsideAngular(function () {\n            element.addEventListener('focus', focusListener, true);\n            element.addEventListener('blur', blurListener, true);\n        });\n        // Create an unlisten function for later.\n        info.unlisten = function () {\n            element.removeEventListener('focus', focusListener, true);\n            element.removeEventListener('blur', blurListener, true);\n        };\n        return info.subject.asObservable();\n    };\n    /**\n     * Stops monitoring an element and removes all focus classes.\n     * @param element The element to stop monitoring.\n     */\n    /**\n     * Stops monitoring an element and removes all focus classes.\n     * @param {?} element The element to stop monitoring.\n     * @return {?}\n     */\n    FocusMonitor.prototype.stopMonitoring = /**\n     * Stops monitoring an element and removes all focus classes.\n     * @param {?} element The element to stop monitoring.\n     * @return {?}\n     */\n    function (element) {\n        var /** @type {?} */ elementInfo = this._elementInfo.get(element);\n        if (elementInfo) {\n            elementInfo.unlisten();\n            elementInfo.subject.complete();\n            this._setClasses(element);\n            this._elementInfo.delete(element);\n            this._decrementMonitoredElementCount();\n        }\n    };\n    /**\n     * Focuses the element via the specified focus origin.\n     * @param element Element to focus.\n     * @param origin Focus origin.\n     * @param focusOption Options that can be used to configure the focus behavior.\n     */\n    /**\n     * Focuses the element via the specified focus origin.\n     * @param {?} element Element to focus.\n     * @param {?} origin Focus origin.\n     * @param {?=} options\n     * @return {?}\n     */\n    FocusMonitor.prototype.focusVia = /**\n     * Focuses the element via the specified focus origin.\n     * @param {?} element Element to focus.\n     * @param {?} origin Focus origin.\n     * @param {?=} options\n     * @return {?}\n     */\n    function (element, origin, options) {\n        this._setOriginForCurrentEventQueue(origin);\n        // `focus` isn't available on the server\n        if (typeof element.focus === 'function') {\n            // Cast the element to `any`, because the TS typings don't have the `options` parameter yet.\n            (/** @type {?} */ (element)).focus(options);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    FocusMonitor.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._elementInfo.forEach(function (_info, element) { return _this.stopMonitoring(element); });\n    };\n    /**\n     * Register necessary event listeners on the document and window.\n     * @return {?}\n     */\n    FocusMonitor.prototype._registerGlobalListeners = /**\n     * Register necessary event listeners on the document and window.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // Do nothing if we're not on the browser platform.\n        if (!this._platform.isBrowser) {\n            return;\n        }\n        // On keydown record the origin and clear any touch event that may be in progress.\n        var /** @type {?} */ documentKeydownListener = function () {\n            _this._lastTouchTarget = null;\n            _this._setOriginForCurrentEventQueue('keyboard');\n        };\n        // On mousedown record the origin only if there is not touch target, since a mousedown can\n        // happen as a result of a touch event.\n        var /** @type {?} */ documentMousedownListener = function () {\n            if (!_this._lastTouchTarget) {\n                _this._setOriginForCurrentEventQueue('mouse');\n            }\n        };\n        // When the touchstart event fires the focus event is not yet in the event queue. This means\n        // we can't rely on the trick used above (setting timeout of 0ms). Instead we wait 650ms to\n        // see if a focus happens.\n        var /** @type {?} */ documentTouchstartListener = function (event) {\n            if (_this._touchTimeoutId != null) {\n                clearTimeout(_this._touchTimeoutId);\n            }\n            _this._lastTouchTarget = event.target;\n            _this._touchTimeoutId = setTimeout(function () { return _this._lastTouchTarget = null; }, TOUCH_BUFFER_MS);\n        };\n        // Make a note of when the window regains focus, so we can restore the origin info for the\n        // focused element.\n        var /** @type {?} */ windowFocusListener = function () {\n            _this._windowFocused = true;\n            _this._windowFocusTimeoutId = setTimeout(function () { return _this._windowFocused = false; });\n        };\n        // Note: we listen to events in the capture phase so we can detect them even if the user stops\n        // propagation.\n        this._ngZone.runOutsideAngular(function () {\n            document.addEventListener('keydown', documentKeydownListener, true);\n            document.addEventListener('mousedown', documentMousedownListener, true);\n            document.addEventListener('touchstart', documentTouchstartListener, supportsPassiveEventListeners() ? (/** @type {?} */ ({ passive: true, capture: true })) : true);\n            window.addEventListener('focus', windowFocusListener);\n        });\n        this._unregisterGlobalListeners = function () {\n            document.removeEventListener('keydown', documentKeydownListener, true);\n            document.removeEventListener('mousedown', documentMousedownListener, true);\n            document.removeEventListener('touchstart', documentTouchstartListener, supportsPassiveEventListeners() ? (/** @type {?} */ ({ passive: true, capture: true })) : true);\n            window.removeEventListener('focus', windowFocusListener);\n            // Clear timeouts for all potentially pending timeouts to prevent the leaks.\n            clearTimeout(_this._windowFocusTimeoutId);\n            clearTimeout(_this._touchTimeoutId);\n            clearTimeout(_this._originTimeoutId);\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} className\n     * @param {?} shouldSet\n     * @return {?}\n     */\n    FocusMonitor.prototype._toggleClass = /**\n     * @param {?} element\n     * @param {?} className\n     * @param {?} shouldSet\n     * @return {?}\n     */\n    function (element, className, shouldSet) {\n        if (shouldSet) {\n            element.classList.add(className);\n        }\n        else {\n            element.classList.remove(className);\n        }\n    };\n    /**\n     * Sets the focus classes on the element based on the given focus origin.\n     * @param {?} element The element to update the classes on.\n     * @param {?=} origin The focus origin.\n     * @return {?}\n     */\n    FocusMonitor.prototype._setClasses = /**\n     * Sets the focus classes on the element based on the given focus origin.\n     * @param {?} element The element to update the classes on.\n     * @param {?=} origin The focus origin.\n     * @return {?}\n     */\n    function (element, origin) {\n        var /** @type {?} */ elementInfo = this._elementInfo.get(element);\n        if (elementInfo) {\n            this._toggleClass(element, 'cdk-focused', !!origin);\n            this._toggleClass(element, 'cdk-touch-focused', origin === 'touch');\n            this._toggleClass(element, 'cdk-keyboard-focused', origin === 'keyboard');\n            this._toggleClass(element, 'cdk-mouse-focused', origin === 'mouse');\n            this._toggleClass(element, 'cdk-program-focused', origin === 'program');\n        }\n    };\n    /**\n     * Sets the origin and schedules an async function to clear it at the end of the event queue.\n     * @param {?} origin The origin to set.\n     * @return {?}\n     */\n    FocusMonitor.prototype._setOriginForCurrentEventQueue = /**\n     * Sets the origin and schedules an async function to clear it at the end of the event queue.\n     * @param {?} origin The origin to set.\n     * @return {?}\n     */\n    function (origin) {\n        var _this = this;\n        this._ngZone.runOutsideAngular(function () {\n            _this._origin = origin;\n            _this._originTimeoutId = setTimeout(function () { return _this._origin = null; });\n        });\n    };\n    /**\n     * Checks whether the given focus event was caused by a touchstart event.\n     * @param {?} event The focus event to check.\n     * @return {?} Whether the event was caused by a touch.\n     */\n    FocusMonitor.prototype._wasCausedByTouch = /**\n     * Checks whether the given focus event was caused by a touchstart event.\n     * @param {?} event The focus event to check.\n     * @return {?} Whether the event was caused by a touch.\n     */\n    function (event) {\n        // Note(mmalerba): This implementation is not quite perfect, there is a small edge case.\n        // Consider the following dom structure:\n        //\n        // <div #parent tabindex=\"0\" cdkFocusClasses>\n        //   <div #child (click)=\"#parent.focus()\"></div>\n        // </div>\n        //\n        // If the user touches the #child element and the #parent is programmatically focused as a\n        // result, this code will still consider it to have been caused by the touch event and will\n        // apply the cdk-touch-focused class rather than the cdk-program-focused class. This is a\n        // relatively small edge-case that can be worked around by using\n        // focusVia(parentEl, 'program') to focus the parent element.\n        //\n        // If we decide that we absolutely must handle this case correctly, we can do so by listening\n        // for the first focus event after the touchstart, and then the first blur event after that\n        // focus event. When that blur event fires we know that whatever follows is not a result of the\n        // touchstart.\n        var /** @type {?} */ focusTarget = event.target;\n        return this._lastTouchTarget instanceof Node && focusTarget instanceof Node &&\n            (focusTarget === this._lastTouchTarget || focusTarget.contains(this._lastTouchTarget));\n    };\n    /**\n     * Handles focus events on a registered element.\n     * @param {?} event The focus event.\n     * @param {?} element The monitored element.\n     * @return {?}\n     */\n    FocusMonitor.prototype._onFocus = /**\n     * Handles focus events on a registered element.\n     * @param {?} event The focus event.\n     * @param {?} element The monitored element.\n     * @return {?}\n     */\n    function (event, element) {\n        // NOTE(mmalerba): We currently set the classes based on the focus origin of the most recent\n        // focus event affecting the monitored element. If we want to use the origin of the first event\n        // instead we should check for the cdk-focused class here and return if the element already has\n        // it. (This only matters for elements that have includesChildren = true).\n        // If we are not counting child-element-focus as focused, make sure that the event target is the\n        // monitored element itself.\n        var /** @type {?} */ elementInfo = this._elementInfo.get(element);\n        if (!elementInfo || (!elementInfo.checkChildren && element !== event.target)) {\n            return;\n        }\n        // If we couldn't detect a cause for the focus event, it's due to one of three reasons:\n        // 1) The window has just regained focus, in which case we want to restore the focused state of\n        //    the element from before the window blurred.\n        // 2) It was caused by a touch event, in which case we mark the origin as 'touch'.\n        // 3) The element was programmatically focused, in which case we should mark the origin as\n        //    'program'.\n        var /** @type {?} */ origin = this._origin;\n        if (!origin) {\n            if (this._windowFocused && this._lastFocusOrigin) {\n                origin = this._lastFocusOrigin;\n            }\n            else if (this._wasCausedByTouch(event)) {\n                origin = 'touch';\n            }\n            else {\n                origin = 'program';\n            }\n        }\n        this._setClasses(element, origin);\n        this._emitOrigin(elementInfo.subject, origin);\n        this._lastFocusOrigin = origin;\n    };\n    /**\n     * Handles blur events on a registered element.\n     * @param event The blur event.\n     * @param element The monitored element.\n     */\n    /**\n     * Handles blur events on a registered element.\n     * @param {?} event The blur event.\n     * @param {?} element The monitored element.\n     * @return {?}\n     */\n    FocusMonitor.prototype._onBlur = /**\n     * Handles blur events on a registered element.\n     * @param {?} event The blur event.\n     * @param {?} element The monitored element.\n     * @return {?}\n     */\n    function (event, element) {\n        // If we are counting child-element-focus as focused, make sure that we aren't just blurring in\n        // order to focus another child of the monitored element.\n        var /** @type {?} */ elementInfo = this._elementInfo.get(element);\n        if (!elementInfo || (elementInfo.checkChildren && event.relatedTarget instanceof Node &&\n            element.contains(event.relatedTarget))) {\n            return;\n        }\n        this._setClasses(element);\n        this._emitOrigin(elementInfo.subject, null);\n    };\n    /**\n     * @param {?} subject\n     * @param {?} origin\n     * @return {?}\n     */\n    FocusMonitor.prototype._emitOrigin = /**\n     * @param {?} subject\n     * @param {?} origin\n     * @return {?}\n     */\n    function (subject, origin) {\n        this._ngZone.run(function () { return subject.next(origin); });\n    };\n    /**\n     * @return {?}\n     */\n    FocusMonitor.prototype._incrementMonitoredElementCount = /**\n     * @return {?}\n     */\n    function () {\n        // Register global listeners when first element is monitored.\n        if (++this._monitoredElementCount == 1) {\n            this._registerGlobalListeners();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    FocusMonitor.prototype._decrementMonitoredElementCount = /**\n     * @return {?}\n     */\n    function () {\n        // Unregister global listeners when last element is unmonitored.\n        if (!--this._monitoredElementCount) {\n            this._unregisterGlobalListeners();\n            this._unregisterGlobalListeners = function () { };\n        }\n    };\n    FocusMonitor.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */\n    FocusMonitor.ctorParameters = function () { return [\n        { type: NgZone, },\n        { type: Platform, },\n    ]; };\n    /** @nocollapse */ FocusMonitor.ngInjectableDef = defineInjectable({ factory: function FocusMonitor_Factory() { return new FocusMonitor(inject(NgZone), inject(Platform)); }, token: FocusMonitor, providedIn: \"root\" });\n    return FocusMonitor;\n}());\n/**\n * Directive that determines how a particular element was focused (via keyboard, mouse, touch, or\n * programmatically) and adds corresponding classes to the element.\n *\n * There are two variants of this directive:\n * 1) cdkMonitorElementFocus: does not consider an element to be focused if one of its children is\n *    focused.\n * 2) cdkMonitorSubtreeFocus: considers an element focused if it or any of its children are focused.\n */\nvar CdkMonitorFocus = /** @class */ (function () {\n    function CdkMonitorFocus(_elementRef, _focusMonitor) {\n        var _this = this;\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        this.cdkFocusChange = new EventEmitter();\n        this._monitorSubscription = this._focusMonitor.monitor(this._elementRef.nativeElement, this._elementRef.nativeElement.hasAttribute('cdkMonitorSubtreeFocus'))\n            .subscribe(function (origin) { return _this.cdkFocusChange.emit(origin); });\n    }\n    /**\n     * @return {?}\n     */\n    CdkMonitorFocus.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n        this._monitorSubscription.unsubscribe();\n    };\n    CdkMonitorFocus.decorators = [\n        { type: Directive, args: [{\n                    selector: '[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]',\n                },] },\n    ];\n    /** @nocollapse */\n    CdkMonitorFocus.ctorParameters = function () { return [\n        { type: ElementRef, },\n        { type: FocusMonitor, },\n    ]; };\n    CdkMonitorFocus.propDecorators = {\n        \"cdkFocusChange\": [{ type: Output },],\n    };\n    return CdkMonitorFocus;\n}());\n/**\n * \\@docs-private \\@deprecated \\@deletion-target 7.0.0\n * @param {?} parentDispatcher\n * @param {?} ngZone\n * @param {?} platform\n * @return {?}\n */\nfunction FOCUS_MONITOR_PROVIDER_FACTORY(parentDispatcher, ngZone, platform) {\n    return parentDispatcher || new FocusMonitor(ngZone, platform);\n}\n/**\n * \\@docs-private \\@deprecated \\@deletion-target 7.0.0\n */\nvar /** @type {?} */ FOCUS_MONITOR_PROVIDER = {\n    // If there is already a FocusMonitor available, use that. Otherwise, provide a new one.\n    provide: FocusMonitor,\n    deps: [[new Optional(), new SkipSelf(), FocusMonitor], NgZone, Platform],\n    useFactory: FOCUS_MONITOR_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Screenreaders will often fire fake mousedown events when a focusable element\n * is activated using the keyboard. We can typically distinguish between these faked\n * mousedown events and real mousedown events using the \"buttons\" property. While\n * real mousedowns will indicate the mouse button that was pressed (e.g. \"1\" for\n * the left mouse button), faked mousedowns will usually set the property value to 0.\n * @param {?} event\n * @return {?}\n */\nfunction isFakeMousedownFromScreenReader(event) {\n    return event.buttons === 0;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar A11yModule = /** @class */ (function () {\n    function A11yModule() {\n    }\n    A11yModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [CommonModule, PlatformModule, ObserversModule],\n                    declarations: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus],\n                    exports: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus],\n                },] },\n    ];\n    return A11yModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nexport { MESSAGES_CONTAINER_ID, CDK_DESCRIBEDBY_ID_PREFIX, CDK_DESCRIBEDBY_HOST_ATTRIBUTE, AriaDescriber, ARIA_DESCRIBER_PROVIDER_FACTORY, ARIA_DESCRIBER_PROVIDER, ActiveDescendantKeyManager, FocusKeyManager, ListKeyManager, FocusTrap, FocusTrapFactory, CdkTrapFocus, InteractivityChecker, LiveAnnouncer, CdkAriaLive, LIVE_ANNOUNCER_PROVIDER_FACTORY, LIVE_ANNOUNCER_PROVIDER, LIVE_ANNOUNCER_ELEMENT_TOKEN, LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY, TOUCH_BUFFER_MS, FocusMonitor, CdkMonitorFocus, FOCUS_MONITOR_PROVIDER_FACTORY, FOCUS_MONITOR_PROVIDER, isFakeMousedownFromScreenReader, A11yModule };\n//# sourceMappingURL=a11y.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { DOCUMENT } from '@angular/common';\nimport { inject, InjectionToken, EventEmitter, Inject, Injectable, Optional, Directive, Output, Input, NgModule, defineInjectable } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Injection token used to inject the document into Directionality.\n * This is used so that the value can be faked in tests.\n *\n * We can't use the real document in tests because changing the real `dir` causes geometry-based\n * tests in Safari to fail.\n *\n * We also can't re-provide the DOCUMENT token from platform-brower because the unit tests\n * themselves use things like `querySelector` in test code.\n *\n * This token is defined in a separate file from Directionality as a workaround for\n * https://github.com/angular/angular/issues/22559\n *\n * \\@docs-private\n */\nvar /** @type {?} */ DIR_DOCUMENT = new InjectionToken('cdk-dir-doc', {\n    providedIn: 'root',\n    factory: DIR_DOCUMENT_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction DIR_DOCUMENT_FACTORY() {\n    return inject(DOCUMENT);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\n * Exposes the current direction and a stream of direction changes.\n */\nvar Directionality = /** @class */ (function () {\n    function Directionality(_document) {\n        /**\n         * The current 'ltr' or 'rtl' value.\n         */\n        this.value = 'ltr';\n        /**\n         * Stream that emits whenever the 'ltr' / 'rtl' state changes.\n         */\n        this.change = new EventEmitter();\n        if (_document) {\n            // TODO: handle 'auto' value -\n            // We still need to account for dir=\"auto\".\n            // It looks like HTMLElemenet.dir is also \"auto\" when that's set to the attribute,\n            // but getComputedStyle return either \"ltr\" or \"rtl\". avoiding getComputedStyle for now\n            var /** @type {?} */ bodyDir = _document.body ? _document.body.dir : null;\n            var /** @type {?} */ htmlDir = _document.documentElement ? _document.documentElement.dir : null;\n            this.value = /** @type {?} */ ((bodyDir || htmlDir || 'ltr'));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    Directionality.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this.change.complete();\n    };\n    Directionality.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */\n    Directionality.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DIR_DOCUMENT,] },] },\n    ]; };\n    /** @nocollapse */ Directionality.ngInjectableDef = defineInjectable({ factory: function Directionality_Factory() { return new Directionality(inject(DIR_DOCUMENT, 8)); }, token: Directionality, providedIn: \"root\" });\n    return Directionality;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Directive to listen for changes of direction of part of the DOM.\n *\n * Provides itself as Directionality such that descendant directives only need to ever inject\n * Directionality to get the closest direction.\n */\nvar Dir = /** @class */ (function () {\n    function Dir() {\n        this._dir = 'ltr';\n        /**\n         * Whether the `value` has been set to its initial value.\n         */\n        this._isInitialized = false;\n        /**\n         * Event emitted when the direction changes.\n         */\n        this.change = new EventEmitter();\n    }\n    Object.defineProperty(Dir.prototype, \"dir\", {\n        get: /**\n         * \\@docs-private\n         * @return {?}\n         */\n        function () { return this._dir; },\n        set: /**\n         * @param {?} v\n         * @return {?}\n         */\n        function (v) {\n            var /** @type {?} */ old = this._dir;\n            this._dir = v;\n            if (old !== this._dir && this._isInitialized) {\n                this.change.emit(this._dir);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Dir.prototype, \"value\", {\n        /** Current layout direction of the element. */\n        get: /**\n         * Current layout direction of the element.\n         * @return {?}\n         */\n        function () { return this.dir; },\n        enumerable: true,\n        configurable: true\n    });\n    /** Initialize once default value has been set. */\n    /**\n     * Initialize once default value has been set.\n     * @return {?}\n     */\n    Dir.prototype.ngAfterContentInit = /**\n     * Initialize once default value has been set.\n     * @return {?}\n     */\n    function () {\n        this._isInitialized = true;\n    };\n    /**\n     * @return {?}\n     */\n    Dir.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this.change.complete();\n    };\n    Dir.decorators = [\n        { type: Directive, args: [{\n                    selector: '[dir]',\n                    providers: [{ provide: Directionality, useExisting: Dir }],\n                    host: { '[dir]': 'dir' },\n                    exportAs: 'dir',\n                },] },\n    ];\n    /** @nocollapse */\n    Dir.propDecorators = {\n        \"change\": [{ type: Output, args: ['dirChange',] },],\n        \"dir\": [{ type: Input },],\n    };\n    return Dir;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar BidiModule = /** @class */ (function () {\n    function BidiModule() {\n    }\n    BidiModule.decorators = [\n        { type: NgModule, args: [{\n                    exports: [Dir],\n                    declarations: [Dir],\n                },] },\n    ];\n    return BidiModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nexport { Directionality, DIR_DOCUMENT, Dir, BidiModule, DIR_DOCUMENT_FACTORY as ɵa };\n//# sourceMappingURL=bidi.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Coerces a data-bound value (typically a string) to a boolean.\n * @param {?} value\n * @return {?}\n */\nfunction coerceBooleanProperty(value) {\n    return value != null && \"\" + value !== 'false';\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @param {?} value\n * @param {?=} fallbackValue\n * @return {?}\n */\nfunction coerceNumberProperty(value, fallbackValue) {\n    if (fallbackValue === void 0) { fallbackValue = 0; }\n    return _isNumberValue(value) ? Number(value) : fallbackValue;\n}\n/**\n * Whether the provided value is considered a number.\n * \\@docs-private\n * @param {?} value\n * @return {?}\n */\nfunction _isNumberValue(value) {\n    // parseFloat(value) handles most of the cases we're interested in (it treats null, empty string,\n    // and other non-number values as NaN, where Number just uses 0) but it considers the string\n    // '123hello' to be a valid number. Therefore we also check if Number(value) is NaN.\n    return !isNaN(parseFloat(/** @type {?} */ (value))) && !isNaN(Number(value));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Wraps the provided value in an array, unless the provided value is an array.\n * @template T\n * @param {?} value\n * @return {?}\n */\nfunction coerceArray(value) {\n    return Array.isArray(value) ? value : [value];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Coerces a value to a CSS pixel value.\n * @param {?} value\n * @return {?}\n */\nfunction coerceCssPixelValue(value) {\n    if (value == null) {\n        return '';\n    }\n    return typeof value === 'string' ? value : value + \"px\";\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nexport { coerceBooleanProperty, coerceNumberProperty, _isNumberValue, coerceArray, coerceCssPixelValue };\n//# sourceMappingURL=coercion.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nvar /** @type {?} */ MAC_ENTER = 3;\nvar /** @type {?} */ BACKSPACE = 8;\nvar /** @type {?} */ TAB = 9;\nvar /** @type {?} */ NUM_CENTER = 12;\nvar /** @type {?} */ ENTER = 13;\nvar /** @type {?} */ SHIFT = 16;\nvar /** @type {?} */ CONTROL = 17;\nvar /** @type {?} */ ALT = 18;\nvar /** @type {?} */ PAUSE = 19;\nvar /** @type {?} */ CAPS_LOCK = 20;\nvar /** @type {?} */ ESCAPE = 27;\nvar /** @type {?} */ SPACE = 32;\nvar /** @type {?} */ PAGE_UP = 33;\nvar /** @type {?} */ PAGE_DOWN = 34;\nvar /** @type {?} */ END = 35;\nvar /** @type {?} */ HOME = 36;\nvar /** @type {?} */ LEFT_ARROW = 37;\nvar /** @type {?} */ UP_ARROW = 38;\nvar /** @type {?} */ RIGHT_ARROW = 39;\nvar /** @type {?} */ DOWN_ARROW = 40;\nvar /** @type {?} */ PLUS_SIGN = 43;\nvar /** @type {?} */ PRINT_SCREEN = 44;\nvar /** @type {?} */ INSERT = 45;\nvar /** @type {?} */ DELETE = 46;\nvar /** @type {?} */ ZERO = 48;\nvar /** @type {?} */ ONE = 49;\nvar /** @type {?} */ TWO = 50;\nvar /** @type {?} */ THREE = 51;\nvar /** @type {?} */ FOUR = 52;\nvar /** @type {?} */ FIVE = 53;\nvar /** @type {?} */ SIX = 54;\nvar /** @type {?} */ SEVEN = 55;\nvar /** @type {?} */ EIGHT = 56;\nvar /** @type {?} */ NINE = 57;\nvar /** @type {?} */ FF_SEMICOLON = 59; // Firefox (Gecko) fires this for semicolon instead of 186\nvar /** @type {?} */ FF_EQUALS = 61; // Firefox (Gecko) fires this for equals instead of 187\nvar /** @type {?} */ QUESTION_MARK = 63;\nvar /** @type {?} */ AT_SIGN = 64;\nvar /** @type {?} */ A = 65;\nvar /** @type {?} */ B = 66;\nvar /** @type {?} */ C = 67;\nvar /** @type {?} */ D = 68;\nvar /** @type {?} */ E = 69;\nvar /** @type {?} */ F = 70;\nvar /** @type {?} */ G = 71;\nvar /** @type {?} */ H = 72;\nvar /** @type {?} */ I = 73;\nvar /** @type {?} */ J = 74;\nvar /** @type {?} */ K = 75;\nvar /** @type {?} */ L = 76;\nvar /** @type {?} */ M = 77;\nvar /** @type {?} */ N = 78;\nvar /** @type {?} */ O = 79;\nvar /** @type {?} */ P = 80;\nvar /** @type {?} */ Q = 81;\nvar /** @type {?} */ R = 82;\nvar /** @type {?} */ S = 83;\nvar /** @type {?} */ T = 84;\nvar /** @type {?} */ U = 85;\nvar /** @type {?} */ V = 86;\nvar /** @type {?} */ W = 87;\nvar /** @type {?} */ X = 88;\nvar /** @type {?} */ Y = 89;\nvar /** @type {?} */ Z = 90;\nvar /** @type {?} */ META = 91; // WIN_KEY_LEFT\nvar /** @type {?} */ MAC_WK_CMD_LEFT = 91;\nvar /** @type {?} */ MAC_WK_CMD_RIGHT = 93;\nvar /** @type {?} */ CONTEXT_MENU = 93;\nvar /** @type {?} */ NUMPAD_ZERO = 96;\nvar /** @type {?} */ NUMPAD_ONE = 97;\nvar /** @type {?} */ NUMPAD_TWO = 98;\nvar /** @type {?} */ NUMPAD_THREE = 99;\nvar /** @type {?} */ NUMPAD_FOUR = 100;\nvar /** @type {?} */ NUMPAD_FIVE = 101;\nvar /** @type {?} */ NUMPAD_SIX = 102;\nvar /** @type {?} */ NUMPAD_SEVEN = 103;\nvar /** @type {?} */ NUMPAD_EIGHT = 104;\nvar /** @type {?} */ NUMPAD_NINE = 105;\nvar /** @type {?} */ NUMPAD_MULTIPLY = 106;\nvar /** @type {?} */ NUMPAD_PLUS = 107;\nvar /** @type {?} */ NUMPAD_MINUS = 109;\nvar /** @type {?} */ NUMPAD_PERIOD = 110;\nvar /** @type {?} */ NUMPAD_DIVIDE = 111;\nvar /** @type {?} */ F1 = 112;\nvar /** @type {?} */ F2 = 113;\nvar /** @type {?} */ F3 = 114;\nvar /** @type {?} */ F4 = 115;\nvar /** @type {?} */ F5 = 116;\nvar /** @type {?} */ F6 = 117;\nvar /** @type {?} */ F7 = 118;\nvar /** @type {?} */ F8 = 119;\nvar /** @type {?} */ F9 = 120;\nvar /** @type {?} */ F10 = 121;\nvar /** @type {?} */ F11 = 122;\nvar /** @type {?} */ F12 = 123;\nvar /** @type {?} */ NUM_LOCK = 144;\nvar /** @type {?} */ SCROLL_LOCK = 145;\nvar /** @type {?} */ FIRST_MEDIA = 166;\nvar /** @type {?} */ FF_MINUS = 173;\nvar /** @type {?} */ MUTE = 173; // Firefox (Gecko) fires 181 for MUTE\nvar /** @type {?} */ VOLUME_DOWN = 174; // Firefox (Gecko) fires 182 for VOLUME_DOWN\nvar /** @type {?} */ VOLUME_UP = 175; // Firefox (Gecko) fires 183 for VOLUME_UP\nvar /** @type {?} */ FF_MUTE = 181;\nvar /** @type {?} */ FF_VOLUME_DOWN = 182;\nvar /** @type {?} */ LAST_MEDIA = 183;\nvar /** @type {?} */ FF_VOLUME_UP = 183;\nvar /** @type {?} */ SEMICOLON = 186; // Firefox (Gecko) fires 59 for SEMICOLON\nvar /** @type {?} */ EQUALS = 187; // Firefox (Gecko) fires 61 for EQUALS\nvar /** @type {?} */ COMMA = 188;\nvar /** @type {?} */ DASH = 189; // Firefox (Gecko) fires 173 for DASH/MINUS\nvar /** @type {?} */ SLASH = 191;\nvar /** @type {?} */ APOSTROPHE = 192;\nvar /** @type {?} */ TILDE = 192;\nvar /** @type {?} */ OPEN_SQUARE_BRACKET = 219;\nvar /** @type {?} */ BACKSLASH = 220;\nvar /** @type {?} */ CLOSE_SQUARE_BRACKET = 221;\nvar /** @type {?} */ SINGLE_QUOTE = 222;\nvar /** @type {?} */ MAC_META = 224;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nexport { MAC_ENTER, BACKSPACE, TAB, NUM_CENTER, ENTER, SHIFT, CONTROL, ALT, PAUSE, CAPS_LOCK, ESCAPE, SPACE, PAGE_UP, PAGE_DOWN, END, HOME, LEFT_ARROW, UP_ARROW, RIGHT_ARROW, DOWN_ARROW, PLUS_SIGN, PRINT_SCREEN, INSERT, DELETE, ZERO, ONE, TWO, THREE, FOUR, FIVE, SIX, SEVEN, EIGHT, NINE, FF_SEMICOLON, FF_EQUALS, QUESTION_MARK, AT_SIGN, A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, META, MAC_WK_CMD_LEFT, MAC_WK_CMD_RIGHT, CONTEXT_MENU, NUMPAD_ZERO, NUMPAD_ONE, NUMPAD_TWO, NUMPAD_THREE, NUMPAD_FOUR, NUMPAD_FIVE, NUMPAD_SIX, NUMPAD_SEVEN, NUMPAD_EIGHT, NUMPAD_NINE, NUMPAD_MULTIPLY, NUMPAD_PLUS, NUMPAD_MINUS, NUMPAD_PERIOD, NUMPAD_DIVIDE, F1, F2, F3, F4, F5, F6, F7, F8, F9, F10, F11, F12, NUM_LOCK, SCROLL_LOCK, FIRST_MEDIA, FF_MINUS, MUTE, VOLUME_DOWN, VOLUME_UP, FF_MUTE, FF_VOLUME_DOWN, LAST_MEDIA, FF_VOLUME_UP, SEMICOLON, EQUALS, COMMA, DASH, SLASH, APOSTROPHE, TILDE, OPEN_SQUARE_BRACKET, BACKSLASH, CLOSE_SQUARE_BRACKET, SINGLE_QUOTE, MAC_META };\n//# sourceMappingURL=keycodes.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { Directive, ElementRef, EventEmitter, Injectable, Input, NgModule, NgZone, Output, defineInjectable, inject } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Factory that creates a new MutationObserver and allows us to stub it out in unit tests.\n * \\@docs-private\n */\nvar MutationObserverFactory = /** @class */ (function () {\n    function MutationObserverFactory() {\n    }\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    MutationObserverFactory.prototype.create = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) {\n        return typeof MutationObserver === 'undefined' ? null : new MutationObserver(callback);\n    };\n    MutationObserverFactory.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */ MutationObserverFactory.ngInjectableDef = defineInjectable({ factory: function MutationObserverFactory_Factory() { return new MutationObserverFactory(); }, token: MutationObserverFactory, providedIn: \"root\" });\n    return MutationObserverFactory;\n}());\n/**\n * An injectable service that allows watching elements for changes to their content.\n */\nvar ContentObserver = /** @class */ (function () {\n    function ContentObserver(_mutationObserverFactory) {\n        this._mutationObserverFactory = _mutationObserverFactory;\n        /**\n         * Keeps track of the existing MutationObservers so they can be reused.\n         */\n        this._observedElements = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    ContentObserver.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._observedElements.forEach(function (_, element) { return _this._cleanupObserver(element); });\n    };\n    /**\n     * Observe content changes on an element.\n     * @param element The element to observe for content changes.\n     */\n    /**\n     * Observe content changes on an element.\n     * @param {?} element The element to observe for content changes.\n     * @return {?}\n     */\n    ContentObserver.prototype.observe = /**\n     * Observe content changes on an element.\n     * @param {?} element The element to observe for content changes.\n     * @return {?}\n     */\n    function (element) {\n        var _this = this;\n        return Observable.create(function (observer) {\n            var /** @type {?} */ stream = _this._observeElement(element);\n            var /** @type {?} */ subscription = stream.subscribe(observer);\n            return function () {\n                subscription.unsubscribe();\n                _this._unobserveElement(element);\n            };\n        });\n    };\n    /**\n     * Observes the given element by using the existing MutationObserver if available, or creating a\n     * new one if not.\n     * @param {?} element\n     * @return {?}\n     */\n    ContentObserver.prototype._observeElement = /**\n     * Observes the given element by using the existing MutationObserver if available, or creating a\n     * new one if not.\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        if (!this._observedElements.has(element)) {\n            var /** @type {?} */ stream_1 = new Subject();\n            var /** @type {?} */ observer = this._mutationObserverFactory.create(function (mutations) { return stream_1.next(mutations); });\n            if (observer) {\n                observer.observe(element, {\n                    characterData: true,\n                    childList: true,\n                    subtree: true\n                });\n            }\n            this._observedElements.set(element, { observer: observer, stream: stream_1, count: 1 });\n        }\n        else {\n            /** @type {?} */ ((this._observedElements.get(element))).count++;\n        }\n        return /** @type {?} */ ((this._observedElements.get(element))).stream;\n    };\n    /**\n     * Un-observes the given element and cleans up the underlying MutationObserver if nobody else is\n     * observing this element.\n     * @param {?} element\n     * @return {?}\n     */\n    ContentObserver.prototype._unobserveElement = /**\n     * Un-observes the given element and cleans up the underlying MutationObserver if nobody else is\n     * observing this element.\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        if (this._observedElements.has(element)) {\n            /** @type {?} */ ((this._observedElements.get(element))).count--;\n            if (!/** @type {?} */ ((this._observedElements.get(element))).count) {\n                this._cleanupObserver(element);\n            }\n        }\n    };\n    /**\n     * Clean up the underlying MutationObserver for the specified element.\n     * @param {?} element\n     * @return {?}\n     */\n    ContentObserver.prototype._cleanupObserver = /**\n     * Clean up the underlying MutationObserver for the specified element.\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        if (this._observedElements.has(element)) {\n            var _a = /** @type {?} */ ((this._observedElements.get(element))), observer = _a.observer, stream = _a.stream;\n            if (observer) {\n                observer.disconnect();\n            }\n            stream.complete();\n            this._observedElements.delete(element);\n        }\n    };\n    ContentObserver.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */\n    ContentObserver.ctorParameters = function () { return [\n        { type: MutationObserverFactory, },\n    ]; };\n    /** @nocollapse */ ContentObserver.ngInjectableDef = defineInjectable({ factory: function ContentObserver_Factory() { return new ContentObserver(inject(MutationObserverFactory)); }, token: ContentObserver, providedIn: \"root\" });\n    return ContentObserver;\n}());\n/**\n * Directive that triggers a callback whenever the content of\n * its associated element has changed.\n */\nvar CdkObserveContent = /** @class */ (function () {\n    function CdkObserveContent(_contentObserver, _elementRef, _ngZone) {\n        this._contentObserver = _contentObserver;\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        /**\n         * Event emitted for each change in the element's content.\n         */\n        this.event = new EventEmitter();\n        this._disabled = false;\n        this._currentSubscription = null;\n    }\n    Object.defineProperty(CdkObserveContent.prototype, \"disabled\", {\n        get: /**\n         * Whether observing content is disabled. This option can be used\n         * to disconnect the underlying MutationObserver until it is needed.\n         * @return {?}\n         */\n        function () { return this._disabled; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._disabled = coerceBooleanProperty(value);\n            if (this._disabled) {\n                this._unsubscribe();\n            }\n            else {\n                this._subscribe();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkObserveContent.prototype, \"debounce\", {\n        get: /**\n         * Debounce interval for emitting the changes.\n         * @return {?}\n         */\n        function () { return this._debounce; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._debounce = coerceNumberProperty(value);\n            this._subscribe();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    CdkObserveContent.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n    function () {\n        if (!this._currentSubscription && !this.disabled) {\n            this._subscribe();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    CdkObserveContent.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._unsubscribe();\n    };\n    /**\n     * @return {?}\n     */\n    CdkObserveContent.prototype._subscribe = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._unsubscribe();\n        var /** @type {?} */ stream = this._contentObserver.observe(this._elementRef.nativeElement);\n        // TODO(mmalerba): We shouldn't be emitting on this @Output() outside the zone.\n        // Consider brining it back inside the zone next time we're making breaking changes.\n        // Bringing it back inside can cause things like infinite change detection loops and changed\n        // after checked errors if people's code isn't handling it properly.\n        this._ngZone.runOutsideAngular(function () {\n            _this._currentSubscription =\n                (_this.debounce ? stream.pipe(debounceTime(_this.debounce)) : stream).subscribe(_this.event);\n        });\n    };\n    /**\n     * @return {?}\n     */\n    CdkObserveContent.prototype._unsubscribe = /**\n     * @return {?}\n     */\n    function () {\n        if (this._currentSubscription) {\n            this._currentSubscription.unsubscribe();\n        }\n    };\n    CdkObserveContent.decorators = [\n        { type: Directive, args: [{\n                    selector: '[cdkObserveContent]',\n                    exportAs: 'cdkObserveContent',\n                },] },\n    ];\n    /** @nocollapse */\n    CdkObserveContent.ctorParameters = function () { return [\n        { type: ContentObserver, },\n        { type: ElementRef, },\n        { type: NgZone, },\n    ]; };\n    CdkObserveContent.propDecorators = {\n        \"event\": [{ type: Output, args: ['cdkObserveContent',] },],\n        \"disabled\": [{ type: Input, args: ['cdkObserveContentDisabled',] },],\n        \"debounce\": [{ type: Input },],\n    };\n    return CdkObserveContent;\n}());\nvar ObserversModule = /** @class */ (function () {\n    function ObserversModule() {\n    }\n    ObserversModule.decorators = [\n        { type: NgModule, args: [{\n                    exports: [CdkObserveContent],\n                    declarations: [CdkObserveContent],\n                    providers: [MutationObserverFactory]\n                },] },\n    ];\n    return ObserversModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nexport { MutationObserverFactory, ContentObserver, CdkObserveContent, ObserversModule };\n//# sourceMappingURL=observers.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Optional, Inject, Injectable, NgZone, NgModule, SkipSelf, ApplicationRef, ComponentFactoryResolver, Injector, ElementRef, Directive, EventEmitter, InjectionToken, Input, Output, TemplateRef, ViewContainerRef, defineInjectable, inject } from '@angular/core';\nimport { coerceCssPixelValue, coerceArray, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ScrollDispatcher, ViewportRuler, ScrollDispatchModule, VIEWPORT_RULER_PROVIDER } from '@angular/cdk/scrolling';\nexport { ViewportRuler, VIEWPORT_RULER_PROVIDER, CdkScrollable, ScrollDispatcher } from '@angular/cdk/scrolling';\nimport { DOCUMENT } from '@angular/common';\nimport { __assign, __extends } from 'tslib';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { Platform } from '@angular/cdk/platform';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { DomPortalOutlet, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { ESCAPE } from '@angular/cdk/keycodes';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Scroll strategy that doesn't do anything.\n */\nvar  /**\n * Scroll strategy that doesn't do anything.\n */\nNoopScrollStrategy = /** @class */ (function () {\n    function NoopScrollStrategy() {\n    }\n    /** Does nothing, as this scroll strategy is a no-op. */\n    /**\n     * Does nothing, as this scroll strategy is a no-op.\n     * @return {?}\n     */\n    NoopScrollStrategy.prototype.enable = /**\n     * Does nothing, as this scroll strategy is a no-op.\n     * @return {?}\n     */\n    function () { };\n    /** Does nothing, as this scroll strategy is a no-op. */\n    /**\n     * Does nothing, as this scroll strategy is a no-op.\n     * @return {?}\n     */\n    NoopScrollStrategy.prototype.disable = /**\n     * Does nothing, as this scroll strategy is a no-op.\n     * @return {?}\n     */\n    function () { };\n    /** Does nothing, as this scroll strategy is a no-op. */\n    /**\n     * Does nothing, as this scroll strategy is a no-op.\n     * @return {?}\n     */\n    NoopScrollStrategy.prototype.attach = /**\n     * Does nothing, as this scroll strategy is a no-op.\n     * @return {?}\n     */\n    function () { };\n    return NoopScrollStrategy;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Initial configuration used when creating an overlay.\n */\nvar  /**\n * Initial configuration used when creating an overlay.\n */\nOverlayConfig = /** @class */ (function () {\n    function OverlayConfig(config) {\n        var _this = this;\n        /**\n         * Strategy to be used when handling scroll events while the overlay is open.\n         */\n        this.scrollStrategy = new NoopScrollStrategy();\n        /**\n         * Custom class to add to the overlay pane.\n         */\n        this.panelClass = '';\n        /**\n         * Whether the overlay has a backdrop.\n         */\n        this.hasBackdrop = false;\n        /**\n         * Custom class to add to the backdrop\n         */\n        this.backdropClass = 'cdk-overlay-dark-backdrop';\n        if (config) {\n            Object.keys(config)\n                .filter(function (key) { return typeof config[key] !== 'undefined'; })\n                .forEach(function (key) { return _this[key] = config[key]; });\n        }\n    }\n    return OverlayConfig;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * The points of the origin element and the overlay element to connect.\n */\nvar  /**\n * The points of the origin element and the overlay element to connect.\n */\nConnectionPositionPair = /** @class */ (function () {\n    function ConnectionPositionPair(origin, overlay, offsetX, offsetY) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.originX = origin.originX;\n        this.originY = origin.originY;\n        this.overlayX = overlay.overlayX;\n        this.overlayY = overlay.overlayY;\n    }\n    return ConnectionPositionPair;\n}());\n/**\n * Set of properties regarding the position of the origin and overlay relative to the viewport\n * with respect to the containing Scrollable elements.\n *\n * The overlay and origin are clipped if any part of their bounding client rectangle exceeds the\n * bounds of any one of the strategy's Scrollable's bounding client rectangle.\n *\n * The overlay and origin are outside view if there is no overlap between their bounding client\n * rectangle and any one of the strategy's Scrollable's bounding client rectangle.\n *\n *       -----------                    -----------\n *       | outside |                    | clipped |\n *       |  view   |              --------------------------\n *       |         |              |     |         |        |\n *       ----------               |     -----------        |\n *  --------------------------    |                        |\n *  |                        |    |      Scrollable        |\n *  |                        |    |                        |\n *  |                        |     --------------------------\n *  |      Scrollable        |\n *  |                        |\n *  --------------------------\n *\n *  \\@docs-private\n */\nvar  /**\n * Set of properties regarding the position of the origin and overlay relative to the viewport\n * with respect to the containing Scrollable elements.\n *\n * The overlay and origin are clipped if any part of their bounding client rectangle exceeds the\n * bounds of any one of the strategy's Scrollable's bounding client rectangle.\n *\n * The overlay and origin are outside view if there is no overlap between their bounding client\n * rectangle and any one of the strategy's Scrollable's bounding client rectangle.\n *\n *       -----------                    -----------\n *       | outside |                    | clipped |\n *       |  view   |              --------------------------\n *       |         |              |     |         |        |\n *       ----------               |     -----------        |\n *  --------------------------    |                        |\n *  |                        |    |      Scrollable        |\n *  |                        |    |                        |\n *  |                        |     --------------------------\n *  |      Scrollable        |\n *  |                        |\n *  --------------------------\n *\n *  \\@docs-private\n */\nScrollingVisibility = /** @class */ (function () {\n    function ScrollingVisibility() {\n    }\n    return ScrollingVisibility;\n}());\n/**\n * The change event emitted by the strategy when a fallback position is used.\n */\nvar ConnectedOverlayPositionChange = /** @class */ (function () {\n    function ConnectedOverlayPositionChange(connectionPair, /** @docs-private */\n    scrollableViewProperties) {\n        this.connectionPair = connectionPair;\n        this.scrollableViewProperties = scrollableViewProperties;\n    }\n    /** @nocollapse */\n    ConnectedOverlayPositionChange.ctorParameters = function () { return [\n        { type: ConnectionPositionPair, },\n        { type: ScrollingVisibility, decorators: [{ type: Optional },] },\n    ]; };\n    return ConnectedOverlayPositionChange;\n}());\n/**\n * Validates whether a vertical position property matches the expected values.\n * \\@docs-private\n * @param {?} property Name of the property being validated.\n * @param {?} value Value of the property being validated.\n * @return {?}\n */\nfunction validateVerticalPosition(property, value) {\n    if (value !== 'top' && value !== 'bottom' && value !== 'center') {\n        throw Error(\"ConnectedPosition: Invalid \" + property + \" \\\"\" + value + \"\\\". \" +\n            \"Expected \\\"top\\\", \\\"bottom\\\" or \\\"center\\\".\");\n    }\n}\n/**\n * Validates whether a horizontal position property matches the expected values.\n * \\@docs-private\n * @param {?} property Name of the property being validated.\n * @param {?} value Value of the property being validated.\n * @return {?}\n */\nfunction validateHorizontalPosition(property, value) {\n    if (value !== 'start' && value !== 'end' && value !== 'center') {\n        throw Error(\"ConnectedPosition: Invalid \" + property + \" \\\"\" + value + \"\\\". \" +\n            \"Expected \\\"start\\\", \\\"end\\\" or \\\"center\\\".\");\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Strategy that will prevent the user from scrolling while the overlay is visible.\n */\nvar  /**\n * Strategy that will prevent the user from scrolling while the overlay is visible.\n */\nBlockScrollStrategy = /** @class */ (function () {\n    function BlockScrollStrategy(_viewportRuler, document) {\n        this._viewportRuler = _viewportRuler;\n        this._previousHTMLStyles = { top: '', left: '' };\n        this._isEnabled = false;\n        this._document = document;\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    /**\n     * Attaches this scroll strategy to an overlay.\n     * @return {?}\n     */\n    BlockScrollStrategy.prototype.attach = /**\n     * Attaches this scroll strategy to an overlay.\n     * @return {?}\n     */\n    function () { };\n    /** Blocks page-level scroll while the attached overlay is open. */\n    /**\n     * Blocks page-level scroll while the attached overlay is open.\n     * @return {?}\n     */\n    BlockScrollStrategy.prototype.enable = /**\n     * Blocks page-level scroll while the attached overlay is open.\n     * @return {?}\n     */\n    function () {\n        if (this._canBeEnabled()) {\n            var /** @type {?} */ root = this._document.documentElement;\n            this._previousScrollPosition = this._viewportRuler.getViewportScrollPosition();\n            // Cache the previous inline styles in case the user had set them.\n            this._previousHTMLStyles.left = root.style.left || '';\n            this._previousHTMLStyles.top = root.style.top || '';\n            // Note: we're using the `html` node, instead of the `body`, because the `body` may\n            // have the user agent margin, whereas the `html` is guaranteed not to have one.\n            root.style.left = coerceCssPixelValue(-this._previousScrollPosition.left);\n            root.style.top = coerceCssPixelValue(-this._previousScrollPosition.top);\n            root.classList.add('cdk-global-scrollblock');\n            this._isEnabled = true;\n        }\n    };\n    /** Unblocks page-level scroll while the attached overlay is open. */\n    /**\n     * Unblocks page-level scroll while the attached overlay is open.\n     * @return {?}\n     */\n    BlockScrollStrategy.prototype.disable = /**\n     * Unblocks page-level scroll while the attached overlay is open.\n     * @return {?}\n     */\n    function () {\n        if (this._isEnabled) {\n            var /** @type {?} */ html = this._document.documentElement;\n            var /** @type {?} */ body = this._document.body;\n            var /** @type {?} */ previousHtmlScrollBehavior = html.style['scrollBehavior'] || '';\n            var /** @type {?} */ previousBodyScrollBehavior = body.style['scrollBehavior'] || '';\n            this._isEnabled = false;\n            html.style.left = this._previousHTMLStyles.left;\n            html.style.top = this._previousHTMLStyles.top;\n            html.classList.remove('cdk-global-scrollblock');\n            // Disable user-defined smooth scrolling temporarily while we restore the scroll position.\n            // See https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-behavior\n            html.style['scrollBehavior'] = body.style['scrollBehavior'] = 'auto';\n            window.scroll(this._previousScrollPosition.left, this._previousScrollPosition.top);\n            html.style['scrollBehavior'] = previousHtmlScrollBehavior;\n            body.style['scrollBehavior'] = previousBodyScrollBehavior;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    BlockScrollStrategy.prototype._canBeEnabled = /**\n     * @return {?}\n     */\n    function () {\n        // Since the scroll strategies can't be singletons, we have to use a global CSS class\n        // (`cdk-global-scrollblock`) to make sure that we don't try to disable global\n        // scrolling multiple times.\n        var /** @type {?} */ html = this._document.documentElement;\n        if (html.classList.contains('cdk-global-scrollblock') || this._isEnabled) {\n            return false;\n        }\n        var /** @type {?} */ body = this._document.body;\n        var /** @type {?} */ viewport = this._viewportRuler.getViewportSize();\n        return body.scrollHeight > viewport.height || body.scrollWidth > viewport.width;\n    };\n    return BlockScrollStrategy;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Returns an error to be thrown when attempting to attach an already-attached scroll strategy.\n * @return {?}\n */\nfunction getMatScrollStrategyAlreadyAttachedError() {\n    return Error(\"Scroll strategy has already been attached.\");\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Strategy that will close the overlay as soon as the user starts scrolling.\n */\nvar  /**\n * Strategy that will close the overlay as soon as the user starts scrolling.\n */\nCloseScrollStrategy = /** @class */ (function () {\n    function CloseScrollStrategy(_scrollDispatcher, _ngZone, _viewportRuler, _config) {\n        var _this = this;\n        this._scrollDispatcher = _scrollDispatcher;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._config = _config;\n        this._scrollSubscription = null;\n        /**\n         * Detaches the overlay ref and disables the scroll strategy.\n         */\n        this._detach = function () {\n            _this.disable();\n            if (_this._overlayRef.hasAttached()) {\n                _this._ngZone.run(function () { return _this._overlayRef.detach(); });\n            }\n        };\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    /**\n     * Attaches this scroll strategy to an overlay.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    CloseScrollStrategy.prototype.attach = /**\n     * Attaches this scroll strategy to an overlay.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    function (overlayRef) {\n        if (this._overlayRef) {\n            throw getMatScrollStrategyAlreadyAttachedError();\n        }\n        this._overlayRef = overlayRef;\n    };\n    /** Enables the closing of the attached overlay on scroll. */\n    /**\n     * Enables the closing of the attached overlay on scroll.\n     * @return {?}\n     */\n    CloseScrollStrategy.prototype.enable = /**\n     * Enables the closing of the attached overlay on scroll.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this._scrollSubscription) {\n            return;\n        }\n        var /** @type {?} */ stream = this._scrollDispatcher.scrolled(0);\n        if (this._config && this._config.threshold && this._config.threshold > 1) {\n            this._initialScrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n            this._scrollSubscription = stream.subscribe(function () {\n                var /** @type {?} */ scrollPosition = _this._viewportRuler.getViewportScrollPosition().top;\n                if (Math.abs(scrollPosition - _this._initialScrollPosition) > /** @type {?} */ ((/** @type {?} */ ((_this._config)).threshold))) {\n                    _this._detach();\n                }\n                else {\n                    _this._overlayRef.updatePosition();\n                }\n            });\n        }\n        else {\n            this._scrollSubscription = stream.subscribe(this._detach);\n        }\n    };\n    /** Disables the closing the attached overlay on scroll. */\n    /**\n     * Disables the closing the attached overlay on scroll.\n     * @return {?}\n     */\n    CloseScrollStrategy.prototype.disable = /**\n     * Disables the closing the attached overlay on scroll.\n     * @return {?}\n     */\n    function () {\n        if (this._scrollSubscription) {\n            this._scrollSubscription.unsubscribe();\n            this._scrollSubscription = null;\n        }\n    };\n    return CloseScrollStrategy;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n// TODO(jelbourn): move this to live with the rest of the scrolling code\n// TODO(jelbourn): someday replace this with IntersectionObservers\n/**\n * Gets whether an element is scrolled outside of view by any of its parent scrolling containers.\n * \\@docs-private\n * @param {?} element Dimensions of the element (from getBoundingClientRect)\n * @param {?} scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @return {?} Whether the element is scrolled out of view\n */\nfunction isElementScrolledOutsideView(element, scrollContainers) {\n    return scrollContainers.some(function (containerBounds) {\n        var /** @type {?} */ outsideAbove = element.bottom < containerBounds.top;\n        var /** @type {?} */ outsideBelow = element.top > containerBounds.bottom;\n        var /** @type {?} */ outsideLeft = element.right < containerBounds.left;\n        var /** @type {?} */ outsideRight = element.left > containerBounds.right;\n        return outsideAbove || outsideBelow || outsideLeft || outsideRight;\n    });\n}\n/**\n * Gets whether an element is clipped by any of its scrolling containers.\n * \\@docs-private\n * @param {?} element Dimensions of the element (from getBoundingClientRect)\n * @param {?} scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @return {?} Whether the element is clipped\n */\nfunction isElementClippedByScrolling(element, scrollContainers) {\n    return scrollContainers.some(function (scrollContainerRect) {\n        var /** @type {?} */ clippedAbove = element.top < scrollContainerRect.top;\n        var /** @type {?} */ clippedBelow = element.bottom > scrollContainerRect.bottom;\n        var /** @type {?} */ clippedLeft = element.left < scrollContainerRect.left;\n        var /** @type {?} */ clippedRight = element.right > scrollContainerRect.right;\n        return clippedAbove || clippedBelow || clippedLeft || clippedRight;\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Strategy that will update the element position as the user is scrolling.\n */\nvar  /**\n * Strategy that will update the element position as the user is scrolling.\n */\nRepositionScrollStrategy = /** @class */ (function () {\n    function RepositionScrollStrategy(_scrollDispatcher, _viewportRuler, _ngZone, _config) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewportRuler = _viewportRuler;\n        this._ngZone = _ngZone;\n        this._config = _config;\n        this._scrollSubscription = null;\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    /**\n     * Attaches this scroll strategy to an overlay.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    RepositionScrollStrategy.prototype.attach = /**\n     * Attaches this scroll strategy to an overlay.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    function (overlayRef) {\n        if (this._overlayRef) {\n            throw getMatScrollStrategyAlreadyAttachedError();\n        }\n        this._overlayRef = overlayRef;\n    };\n    /** Enables repositioning of the attached overlay on scroll. */\n    /**\n     * Enables repositioning of the attached overlay on scroll.\n     * @return {?}\n     */\n    RepositionScrollStrategy.prototype.enable = /**\n     * Enables repositioning of the attached overlay on scroll.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (!this._scrollSubscription) {\n            var /** @type {?} */ throttle = this._config ? this._config.scrollThrottle : 0;\n            this._scrollSubscription = this._scrollDispatcher.scrolled(throttle).subscribe(function () {\n                _this._overlayRef.updatePosition();\n                // TODO(crisbeto): make `close` on by default once all components can handle it.\n                if (_this._config && _this._config.autoClose) {\n                    var /** @type {?} */ overlayRect = _this._overlayRef.overlayElement.getBoundingClientRect();\n                    var _a = _this._viewportRuler.getViewportSize(), width = _a.width, height = _a.height;\n                    // TODO(crisbeto): include all ancestor scroll containers here once\n                    // we have a way of exposing the trigger element to the scroll strategy.\n                    var /** @type {?} */ parentRects = [{ width: width, height: height, bottom: height, right: width, top: 0, left: 0 }];\n                    if (isElementScrolledOutsideView(overlayRect, parentRects)) {\n                        _this.disable();\n                        _this._ngZone.run(function () { return _this._overlayRef.detach(); });\n                    }\n                }\n            });\n        }\n    };\n    /** Disables repositioning of the attached overlay on scroll. */\n    /**\n     * Disables repositioning of the attached overlay on scroll.\n     * @return {?}\n     */\n    RepositionScrollStrategy.prototype.disable = /**\n     * Disables repositioning of the attached overlay on scroll.\n     * @return {?}\n     */\n    function () {\n        if (this._scrollSubscription) {\n            this._scrollSubscription.unsubscribe();\n            this._scrollSubscription = null;\n        }\n    };\n    return RepositionScrollStrategy;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Options for how an overlay will handle scrolling.\n *\n * Users can provide a custom value for `ScrollStrategyOptions` to replace the default\n * behaviors. This class primarily acts as a factory for ScrollStrategy instances.\n */\nvar ScrollStrategyOptions = /** @class */ (function () {\n    function ScrollStrategyOptions(_scrollDispatcher, _viewportRuler, _ngZone, document) {\n        var _this = this;\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewportRuler = _viewportRuler;\n        this._ngZone = _ngZone;\n        /**\n         * Do nothing on scroll.\n         */\n        this.noop = function () { return new NoopScrollStrategy(); };\n        /**\n         * Close the overlay as soon as the user scrolls.\n         * @param config Configuration to be used inside the scroll strategy.\n         */\n        this.close = function (config) {\n            return new CloseScrollStrategy(_this._scrollDispatcher, _this._ngZone, _this._viewportRuler, config);\n        };\n        /**\n         * Block scrolling.\n         */\n        this.block = function () { return new BlockScrollStrategy(_this._viewportRuler, _this._document); };\n        /**\n         * Update the overlay's position on scroll.\n         * @param config Configuration to be used inside the scroll strategy.\n         * Allows debouncing the reposition calls.\n         */\n        this.reposition = function (config) {\n            return new RepositionScrollStrategy(_this._scrollDispatcher, _this._viewportRuler, _this._ngZone, config);\n        };\n        this._document = document;\n    }\n    ScrollStrategyOptions.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */\n    ScrollStrategyOptions.ctorParameters = function () { return [\n        { type: ScrollDispatcher, },\n        { type: ViewportRuler, },\n        { type: NgZone, },\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] },] },\n    ]; };\n    /** @nocollapse */ ScrollStrategyOptions.ngInjectableDef = defineInjectable({ factory: function ScrollStrategyOptions_Factory() { return new ScrollStrategyOptions(inject(ScrollDispatcher), inject(ViewportRuler), inject(NgZone), inject(DOCUMENT)); }, token: ScrollStrategyOptions, providedIn: \"root\" });\n    return ScrollStrategyOptions;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Service for dispatching keyboard events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nvar OverlayKeyboardDispatcher = /** @class */ (function () {\n    function OverlayKeyboardDispatcher(document) {\n        var _this = this;\n        /**\n         * Currently attached overlays in the order they were attached.\n         */\n        this._attachedOverlays = [];\n        /**\n         * Keyboard event listener that will be attached to the body.\n         */\n        this._keydownListener = function (event) {\n            var /** @type {?} */ overlays = _this._attachedOverlays;\n            for (var /** @type {?} */ i = overlays.length - 1; i > -1; i--) {\n                // Dispatch the keydown event to the top overlay which has subscribers to its keydown events.\n                // We want to target the most recent overlay, rather than trying to match where the event came\n                // from, because some components might open an overlay, but keep focus on a trigger element\n                // (e.g. for select and autocomplete). We skip overlays without keydown event subscriptions,\n                // because we don't want overlays that don't handle keyboard events to block the ones below\n                // them that do.\n                if (overlays[i]._keydownEventSubscriptions > 0) {\n                    overlays[i]._keydownEvents.next(event);\n                    break;\n                }\n            }\n        };\n        this._document = document;\n    }\n    /**\n     * @return {?}\n     */\n    OverlayKeyboardDispatcher.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._detach();\n    };\n    /** Add a new overlay to the list of attached overlay refs. */\n    /**\n     * Add a new overlay to the list of attached overlay refs.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    OverlayKeyboardDispatcher.prototype.add = /**\n     * Add a new overlay to the list of attached overlay refs.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    function (overlayRef) {\n        // Lazily start dispatcher once first overlay is added\n        if (!this._isAttached) {\n            this._document.body.addEventListener('keydown', this._keydownListener, true);\n            this._isAttached = true;\n        }\n        this._attachedOverlays.push(overlayRef);\n    };\n    /** Remove an overlay from the list of attached overlay refs. */\n    /**\n     * Remove an overlay from the list of attached overlay refs.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    OverlayKeyboardDispatcher.prototype.remove = /**\n     * Remove an overlay from the list of attached overlay refs.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    function (overlayRef) {\n        var /** @type {?} */ index = this._attachedOverlays.indexOf(overlayRef);\n        if (index > -1) {\n            this._attachedOverlays.splice(index, 1);\n        }\n        // Remove the global listener once there are no more overlays.\n        if (this._attachedOverlays.length === 0) {\n            this._detach();\n        }\n    };\n    /**\n     * Detaches the global keyboard event listener.\n     * @return {?}\n     */\n    OverlayKeyboardDispatcher.prototype._detach = /**\n     * Detaches the global keyboard event listener.\n     * @return {?}\n     */\n    function () {\n        if (this._isAttached) {\n            this._document.body.removeEventListener('keydown', this._keydownListener, true);\n            this._isAttached = false;\n        }\n    };\n    OverlayKeyboardDispatcher.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */\n    OverlayKeyboardDispatcher.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] },] },\n    ]; };\n    /** @nocollapse */ OverlayKeyboardDispatcher.ngInjectableDef = defineInjectable({ factory: function OverlayKeyboardDispatcher_Factory() { return new OverlayKeyboardDispatcher(inject(DOCUMENT)); }, token: OverlayKeyboardDispatcher, providedIn: \"root\" });\n    return OverlayKeyboardDispatcher;\n}());\n/**\n * \\@docs-private \\@deprecated \\@deletion-target 7.0.0\n * @param {?} dispatcher\n * @param {?} _document\n * @return {?}\n */\nfunction OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY(dispatcher, _document) {\n    return dispatcher || new OverlayKeyboardDispatcher(_document);\n}\n/**\n * \\@docs-private \\@deprecated \\@deletion-target 7.0.0\n */\nvar /** @type {?} */ OVERLAY_KEYBOARD_DISPATCHER_PROVIDER = {\n    // If there is already an OverlayKeyboardDispatcher available, use that.\n    // Otherwise, provide a new one.\n    provide: OverlayKeyboardDispatcher,\n    deps: [\n        [new Optional(), new SkipSelf(), OverlayKeyboardDispatcher],\n        /** @type {?} */ (\n        // Coerce to `InjectionToken` so that the `deps` match the \"shape\"\n        // of the type expected by Angular\n        DOCUMENT)\n    ],\n    useFactory: OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Container inside which all overlays will render.\n */\nvar OverlayContainer = /** @class */ (function () {\n    function OverlayContainer(_document) {\n        this._document = _document;\n    }\n    /**\n     * @return {?}\n     */\n    OverlayContainer.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this._containerElement && this._containerElement.parentNode) {\n            this._containerElement.parentNode.removeChild(this._containerElement);\n        }\n    };\n    /**\n     * This method returns the overlay container element. It will lazily\n     * create the element the first time  it is called to facilitate using\n     * the container in non-browser environments.\n     * @returns the container element\n     */\n    /**\n     * This method returns the overlay container element. It will lazily\n     * create the element the first time  it is called to facilitate using\n     * the container in non-browser environments.\n     * @return {?} the container element\n     */\n    OverlayContainer.prototype.getContainerElement = /**\n     * This method returns the overlay container element. It will lazily\n     * create the element the first time  it is called to facilitate using\n     * the container in non-browser environments.\n     * @return {?} the container element\n     */\n    function () {\n        if (!this._containerElement) {\n            this._createContainer();\n        }\n        return this._containerElement;\n    };\n    /**\n     * Create the overlay container element, which is simply a div\n     * with the 'cdk-overlay-container' class on the document body.\n     */\n    /**\n     * Create the overlay container element, which is simply a div\n     * with the 'cdk-overlay-container' class on the document body.\n     * @return {?}\n     */\n    OverlayContainer.prototype._createContainer = /**\n     * Create the overlay container element, which is simply a div\n     * with the 'cdk-overlay-container' class on the document body.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ container = this._document.createElement('div');\n        container.classList.add('cdk-overlay-container');\n        this._document.body.appendChild(container);\n        this._containerElement = container;\n    };\n    OverlayContainer.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */\n    OverlayContainer.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] },] },\n    ]; };\n    /** @nocollapse */ OverlayContainer.ngInjectableDef = defineInjectable({ factory: function OverlayContainer_Factory() { return new OverlayContainer(inject(DOCUMENT)); }, token: OverlayContainer, providedIn: \"root\" });\n    return OverlayContainer;\n}());\n/**\n * \\@docs-private \\@deprecated \\@deletion-target 7.0.0\n * @param {?} parentContainer\n * @param {?} _document\n * @return {?}\n */\nfunction OVERLAY_CONTAINER_PROVIDER_FACTORY(parentContainer, _document) {\n    return parentContainer || new OverlayContainer(_document);\n}\n/**\n * \\@docs-private \\@deprecated \\@deletion-target 7.0.0\n */\nvar /** @type {?} */ OVERLAY_CONTAINER_PROVIDER = {\n    // If there is already an OverlayContainer available, use that. Otherwise, provide a new one.\n    provide: OverlayContainer,\n    deps: [\n        [new Optional(), new SkipSelf(), OverlayContainer],\n        /** @type {?} */ (DOCUMENT // We need to use the InjectionToken somewhere to keep TS happy\n        ) // We need to use the InjectionToken somewhere to keep TS happy\n    ],\n    useFactory: OVERLAY_CONTAINER_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\nvar  /**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\nOverlayRef = /** @class */ (function () {\n    function OverlayRef(_portalOutlet, _host, _pane, _config, _ngZone, _keyboardDispatcher, _document) {\n        var _this = this;\n        this._portalOutlet = _portalOutlet;\n        this._host = _host;\n        this._pane = _pane;\n        this._config = _config;\n        this._ngZone = _ngZone;\n        this._keyboardDispatcher = _keyboardDispatcher;\n        this._document = _document;\n        this._backdropElement = null;\n        this._backdropClick = new Subject();\n        this._attachments = new Subject();\n        this._detachments = new Subject();\n        this._keydownEventsObservable = Observable.create(function (observer) {\n            var /** @type {?} */ subscription = _this._keydownEvents.subscribe(observer);\n            _this._keydownEventSubscriptions++;\n            return function () {\n                subscription.unsubscribe();\n                _this._keydownEventSubscriptions--;\n            };\n        });\n        /**\n         * Stream of keydown events dispatched to this overlay.\n         */\n        this._keydownEvents = new Subject();\n        /**\n         * Amount of subscriptions to the keydown events.\n         */\n        this._keydownEventSubscriptions = 0;\n        if (_config.scrollStrategy) {\n            _config.scrollStrategy.attach(this);\n        }\n    }\n    Object.defineProperty(OverlayRef.prototype, \"overlayElement\", {\n        /** The overlay's HTML element */\n        get: /**\n         * The overlay's HTML element\n         * @return {?}\n         */\n        function () {\n            return this._pane;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OverlayRef.prototype, \"backdropElement\", {\n        /** The overlay's backdrop HTML element. */\n        get: /**\n         * The overlay's backdrop HTML element.\n         * @return {?}\n         */\n        function () {\n            return this._backdropElement;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OverlayRef.prototype, \"hostElement\", {\n        /**\n         * Wrapper around the panel element. Can be used for advanced\n         * positioning where a wrapper with specific styling is\n         * required around the overlay pane.\n         */\n        get: /**\n         * Wrapper around the panel element. Can be used for advanced\n         * positioning where a wrapper with specific styling is\n         * required around the overlay pane.\n         * @return {?}\n         */\n        function () {\n            return this._host;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Attaches content, given via a Portal, to the overlay.\n     * If the overlay is configured to have a backdrop, it will be created.\n     *\n     * @param portal Portal instance to which to attach the overlay.\n     * @returns The portal attachment result.\n     */\n    /**\n     * Attaches content, given via a Portal, to the overlay.\n     * If the overlay is configured to have a backdrop, it will be created.\n     *\n     * @param {?} portal Portal instance to which to attach the overlay.\n     * @return {?} The portal attachment result.\n     */\n    OverlayRef.prototype.attach = /**\n     * Attaches content, given via a Portal, to the overlay.\n     * If the overlay is configured to have a backdrop, it will be created.\n     *\n     * @param {?} portal Portal instance to which to attach the overlay.\n     * @return {?} The portal attachment result.\n     */\n    function (portal) {\n        var _this = this;\n        var /** @type {?} */ attachResult = this._portalOutlet.attach(portal);\n        if (this._config.positionStrategy) {\n            this._config.positionStrategy.attach(this);\n        }\n        // Update the pane element with the given configuration.\n        this._updateStackingOrder();\n        this._updateElementSize();\n        this._updateElementDirection();\n        if (this._config.scrollStrategy) {\n            this._config.scrollStrategy.enable();\n        }\n        // Update the position once the zone is stable so that the overlay will be fully rendered\n        // before attempting to position it, as the position may depend on the size of the rendered\n        // content.\n        this._ngZone.onStable\n            .asObservable()\n            .pipe(take(1))\n            .subscribe(function () {\n            // The overlay could've been detached before the zone has stabilized.\n            if (_this.hasAttached()) {\n                _this.updatePosition();\n            }\n        });\n        // Enable pointer events for the overlay pane element.\n        this._togglePointerEvents(true);\n        if (this._config.hasBackdrop) {\n            this._attachBackdrop();\n        }\n        if (this._config.panelClass) {\n            this._toggleClasses(this._pane, this._config.panelClass, true);\n        }\n        // Only emit the `attachments` event once all other setup is done.\n        this._attachments.next();\n        // Track this overlay by the keyboard dispatcher\n        this._keyboardDispatcher.add(this);\n        return attachResult;\n    };\n    /**\n     * Detaches an overlay from a portal.\n     * @returns The portal detachment result.\n     */\n    /**\n     * Detaches an overlay from a portal.\n     * @return {?} The portal detachment result.\n     */\n    OverlayRef.prototype.detach = /**\n     * Detaches an overlay from a portal.\n     * @return {?} The portal detachment result.\n     */\n    function () {\n        if (!this.hasAttached()) {\n            return;\n        }\n        this.detachBackdrop();\n        // When the overlay is detached, the pane element should disable pointer events.\n        // This is necessary because otherwise the pane element will cover the page and disable\n        // pointer events therefore. Depends on the position strategy and the applied pane boundaries.\n        this._togglePointerEvents(false);\n        if (this._config.positionStrategy && this._config.positionStrategy.detach) {\n            this._config.positionStrategy.detach();\n        }\n        if (this._config.scrollStrategy) {\n            this._config.scrollStrategy.disable();\n        }\n        var /** @type {?} */ detachmentResult = this._portalOutlet.detach();\n        // Only emit after everything is detached.\n        this._detachments.next();\n        // Remove this overlay from keyboard dispatcher tracking\n        this._keyboardDispatcher.remove(this);\n        return detachmentResult;\n    };\n    /** Cleans up the overlay from the DOM. */\n    /**\n     * Cleans up the overlay from the DOM.\n     * @return {?}\n     */\n    OverlayRef.prototype.dispose = /**\n     * Cleans up the overlay from the DOM.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ isAttached = this.hasAttached();\n        if (this._config.positionStrategy) {\n            this._config.positionStrategy.dispose();\n        }\n        if (this._config.scrollStrategy) {\n            this._config.scrollStrategy.disable();\n        }\n        this.detachBackdrop();\n        this._keyboardDispatcher.remove(this);\n        this._portalOutlet.dispose();\n        this._attachments.complete();\n        this._backdropClick.complete();\n        this._keydownEvents.complete();\n        if (this._host && this._host.parentNode) {\n            this._host.parentNode.removeChild(this._host);\n            this._host = /** @type {?} */ ((null));\n        }\n        this._pane = /** @type {?} */ ((null));\n        if (isAttached) {\n            this._detachments.next();\n        }\n        this._detachments.complete();\n    };\n    /** Whether the overlay has attached content. */\n    /**\n     * Whether the overlay has attached content.\n     * @return {?}\n     */\n    OverlayRef.prototype.hasAttached = /**\n     * Whether the overlay has attached content.\n     * @return {?}\n     */\n    function () {\n        return this._portalOutlet.hasAttached();\n    };\n    /** Gets an observable that emits when the backdrop has been clicked. */\n    /**\n     * Gets an observable that emits when the backdrop has been clicked.\n     * @return {?}\n     */\n    OverlayRef.prototype.backdropClick = /**\n     * Gets an observable that emits when the backdrop has been clicked.\n     * @return {?}\n     */\n    function () {\n        return this._backdropClick.asObservable();\n    };\n    /** Gets an observable that emits when the overlay has been attached. */\n    /**\n     * Gets an observable that emits when the overlay has been attached.\n     * @return {?}\n     */\n    OverlayRef.prototype.attachments = /**\n     * Gets an observable that emits when the overlay has been attached.\n     * @return {?}\n     */\n    function () {\n        return this._attachments.asObservable();\n    };\n    /** Gets an observable that emits when the overlay has been detached. */\n    /**\n     * Gets an observable that emits when the overlay has been detached.\n     * @return {?}\n     */\n    OverlayRef.prototype.detachments = /**\n     * Gets an observable that emits when the overlay has been detached.\n     * @return {?}\n     */\n    function () {\n        return this._detachments.asObservable();\n    };\n    /** Gets an observable of keydown events targeted to this overlay. */\n    /**\n     * Gets an observable of keydown events targeted to this overlay.\n     * @return {?}\n     */\n    OverlayRef.prototype.keydownEvents = /**\n     * Gets an observable of keydown events targeted to this overlay.\n     * @return {?}\n     */\n    function () {\n        return this._keydownEventsObservable;\n    };\n    /** Gets the the current overlay configuration, which is immutable. */\n    /**\n     * Gets the the current overlay configuration, which is immutable.\n     * @return {?}\n     */\n    OverlayRef.prototype.getConfig = /**\n     * Gets the the current overlay configuration, which is immutable.\n     * @return {?}\n     */\n    function () {\n        return this._config;\n    };\n    /** Updates the position of the overlay based on the position strategy. */\n    /**\n     * Updates the position of the overlay based on the position strategy.\n     * @return {?}\n     */\n    OverlayRef.prototype.updatePosition = /**\n     * Updates the position of the overlay based on the position strategy.\n     * @return {?}\n     */\n    function () {\n        if (this._config.positionStrategy) {\n            this._config.positionStrategy.apply();\n        }\n    };\n    /** Update the size properties of the overlay. */\n    /**\n     * Update the size properties of the overlay.\n     * @param {?} sizeConfig\n     * @return {?}\n     */\n    OverlayRef.prototype.updateSize = /**\n     * Update the size properties of the overlay.\n     * @param {?} sizeConfig\n     * @return {?}\n     */\n    function (sizeConfig) {\n        this._config = __assign({}, this._config, sizeConfig);\n        this._updateElementSize();\n    };\n    /** Sets the LTR/RTL direction for the overlay. */\n    /**\n     * Sets the LTR/RTL direction for the overlay.\n     * @param {?} dir\n     * @return {?}\n     */\n    OverlayRef.prototype.setDirection = /**\n     * Sets the LTR/RTL direction for the overlay.\n     * @param {?} dir\n     * @return {?}\n     */\n    function (dir) {\n        this._config = __assign({}, this._config, { direction: dir });\n        this._updateElementDirection();\n    };\n    /**\n     * Returns the layout direction of the overlay panel.\n     */\n    /**\n     * Returns the layout direction of the overlay panel.\n     * @return {?}\n     */\n    OverlayRef.prototype.getDirection = /**\n     * Returns the layout direction of the overlay panel.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ direction = this._config.direction;\n        if (!direction) {\n            return 'ltr';\n        }\n        return typeof direction === 'string' ? direction : direction.value;\n    };\n    /**\n     * Updates the text direction of the overlay panel.\n     * @return {?}\n     */\n    OverlayRef.prototype._updateElementDirection = /**\n     * Updates the text direction of the overlay panel.\n     * @return {?}\n     */\n    function () {\n        this._host.setAttribute('dir', this.getDirection());\n    };\n    /**\n     * Updates the size of the overlay element based on the overlay config.\n     * @return {?}\n     */\n    OverlayRef.prototype._updateElementSize = /**\n     * Updates the size of the overlay element based on the overlay config.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ style = this._pane.style;\n        style.width = coerceCssPixelValue(this._config.width);\n        style.height = coerceCssPixelValue(this._config.height);\n        style.minWidth = coerceCssPixelValue(this._config.minWidth);\n        style.minHeight = coerceCssPixelValue(this._config.minHeight);\n        style.maxWidth = coerceCssPixelValue(this._config.maxWidth);\n        style.maxHeight = coerceCssPixelValue(this._config.maxHeight);\n    };\n    /**\n     * Toggles the pointer events for the overlay pane element.\n     * @param {?} enablePointer\n     * @return {?}\n     */\n    OverlayRef.prototype._togglePointerEvents = /**\n     * Toggles the pointer events for the overlay pane element.\n     * @param {?} enablePointer\n     * @return {?}\n     */\n    function (enablePointer) {\n        this._pane.style.pointerEvents = enablePointer ? 'auto' : 'none';\n    };\n    /**\n     * Attaches a backdrop for this overlay.\n     * @return {?}\n     */\n    OverlayRef.prototype._attachBackdrop = /**\n     * Attaches a backdrop for this overlay.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ showingClass = 'cdk-overlay-backdrop-showing';\n        this._backdropElement = this._document.createElement('div');\n        this._backdropElement.classList.add('cdk-overlay-backdrop');\n        if (this._config.backdropClass) {\n            this._toggleClasses(this._backdropElement, this._config.backdropClass, true);\n        } /** @type {?} */\n        ((\n        // Insert the backdrop before the pane in the DOM order,\n        // in order to handle stacked overlays properly.\n        this._host.parentElement)).insertBefore(this._backdropElement, this._host);\n        // Forward backdrop clicks such that the consumer of the overlay can perform whatever\n        // action desired when such a click occurs (usually closing the overlay).\n        this._backdropElement.addEventListener('click', function (event) { return _this._backdropClick.next(event); });\n        // Add class to fade-in the backdrop after one frame.\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular(function () {\n                requestAnimationFrame(function () {\n                    if (_this._backdropElement) {\n                        _this._backdropElement.classList.add(showingClass);\n                    }\n                });\n            });\n        }\n        else {\n            this._backdropElement.classList.add(showingClass);\n        }\n    };\n    /**\n     * Updates the stacking order of the element, moving it to the top if necessary.\n     * This is required in cases where one overlay was detached, while another one,\n     * that should be behind it, was destroyed. The next time both of them are opened,\n     * the stacking will be wrong, because the detached element's pane will still be\n     * in its original DOM position.\n     * @return {?}\n     */\n    OverlayRef.prototype._updateStackingOrder = /**\n     * Updates the stacking order of the element, moving it to the top if necessary.\n     * This is required in cases where one overlay was detached, while another one,\n     * that should be behind it, was destroyed. The next time both of them are opened,\n     * the stacking will be wrong, because the detached element's pane will still be\n     * in its original DOM position.\n     * @return {?}\n     */\n    function () {\n        if (this._host.nextSibling) {\n            /** @type {?} */ ((this._host.parentNode)).appendChild(this._host);\n        }\n    };\n    /** Detaches the backdrop (if any) associated with the overlay. */\n    /**\n     * Detaches the backdrop (if any) associated with the overlay.\n     * @return {?}\n     */\n    OverlayRef.prototype.detachBackdrop = /**\n     * Detaches the backdrop (if any) associated with the overlay.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ backdropToDetach = this._backdropElement;\n        if (backdropToDetach) {\n            var /** @type {?} */ timeoutId_1;\n            var /** @type {?} */ finishDetach_1 = function () {\n                // It may not be attached to anything in certain cases (e.g. unit tests).\n                if (backdropToDetach && backdropToDetach.parentNode) {\n                    backdropToDetach.parentNode.removeChild(backdropToDetach);\n                }\n                // It is possible that a new portal has been attached to this overlay since we started\n                // removing the backdrop. If that is the case, only clear the backdrop reference if it\n                // is still the same instance that we started to remove.\n                if (_this._backdropElement == backdropToDetach) {\n                    _this._backdropElement = null;\n                }\n                clearTimeout(timeoutId_1);\n            };\n            backdropToDetach.classList.remove('cdk-overlay-backdrop-showing');\n            if (this._config.backdropClass) {\n                this._toggleClasses(backdropToDetach, this._config.backdropClass, false);\n            }\n            this._ngZone.runOutsideAngular(function () {\n                /** @type {?} */ ((backdropToDetach)).addEventListener('transitionend', finishDetach_1);\n            });\n            // If the backdrop doesn't have a transition, the `transitionend` event won't fire.\n            // In this case we make it unclickable and we try to remove it after a delay.\n            backdropToDetach.style.pointerEvents = 'none';\n            // Run this outside the Angular zone because there's nothing that Angular cares about.\n            // If it were to run inside the Angular zone, every test that used Overlay would have to be\n            // either async or fakeAsync.\n            // Run this outside the Angular zone because there's nothing that Angular cares about.\n            // If it were to run inside the Angular zone, every test that used Overlay would have to be\n            // either async or fakeAsync.\n            timeoutId_1 = this._ngZone.runOutsideAngular(function () { return setTimeout(finishDetach_1, 500); });\n        }\n    };\n    /**\n     * Toggles a single CSS class or an array of classes on an element.\n     * @param {?} element\n     * @param {?} cssClasses\n     * @param {?} isAdd\n     * @return {?}\n     */\n    OverlayRef.prototype._toggleClasses = /**\n     * Toggles a single CSS class or an array of classes on an element.\n     * @param {?} element\n     * @param {?} cssClasses\n     * @param {?} isAdd\n     * @return {?}\n     */\n    function (element, cssClasses, isAdd) {\n        var /** @type {?} */ classList = element.classList;\n        coerceArray(cssClasses).forEach(function (cssClass) {\n            // We can't do a spread here, because IE doesn't support setting multiple classes.\n            isAdd ? classList.add(cssClass) : classList.remove(cssClass);\n        });\n    };\n    return OverlayRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n */\nvar  /**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n */\nFlexibleConnectedPositionStrategy = /** @class */ (function () {\n    function FlexibleConnectedPositionStrategy(connectedTo, _viewportRuler, _document, _platform) {\n        var _this = this;\n        this._viewportRuler = _viewportRuler;\n        this._document = _document;\n        this._platform = _platform;\n        /**\n         * Whether we're performing the very first positioning of the overlay.\n         */\n        this._isInitialRender = true;\n        /**\n         * Last size used for the bounding box. Used to avoid resizing the overlay after open.\n         */\n        this._lastBoundingBoxSize = { width: 0, height: 0 };\n        /**\n         * Whether the overlay was pushed in a previous positioning.\n         */\n        this._isPushed = false;\n        /**\n         * Whether the overlay can be pushed on-screen on the initial open.\n         */\n        this._canPush = true;\n        /**\n         * Whether the overlay can grow via flexible width/height after the initial open.\n         */\n        this._growAfterOpen = false;\n        /**\n         * Whether the overlay's width and height can be constrained to fit within the viewport.\n         */\n        this._hasFlexibleDimensions = true;\n        /**\n         * Whether the overlay position is locked.\n         */\n        this._positionLocked = false;\n        /**\n         * Amount of space that must be maintained between the overlay and the edge of the viewport.\n         */\n        this._viewportMargin = 0;\n        /**\n         * The Scrollable containers used to check scrollable view properties on position change.\n         */\n        this.scrollables = [];\n        /**\n         * Ordered list of preferred positions, from most to least desirable.\n         */\n        this._preferredPositions = [];\n        /**\n         * Subject that emits whenever the position changes.\n         */\n        this._positionChanges = new Subject();\n        /**\n         * Subscription to viewport size changes.\n         */\n        this._resizeSubscription = Subscription.EMPTY;\n        /**\n         * Default offset for the overlay along the x axis.\n         */\n        this._offsetX = 0;\n        /**\n         * Default offset for the overlay along the y axis.\n         */\n        this._offsetY = 0;\n        /**\n         * Amount of subscribers to the `positionChanges` stream.\n         */\n        this._positionChangeSubscriptions = 0;\n        /**\n         * Observable sequence of position changes.\n         */\n        this.positionChanges = Observable.create(function (observer) {\n            var /** @type {?} */ subscription = _this._positionChanges.subscribe(observer);\n            _this._positionChangeSubscriptions++;\n            return function () {\n                subscription.unsubscribe();\n                _this._positionChangeSubscriptions--;\n            };\n        });\n        this.setOrigin(connectedTo);\n    }\n    Object.defineProperty(FlexibleConnectedPositionStrategy.prototype, \"positions\", {\n        /** Ordered list of preferred positions, from most to least desirable. */\n        get: /**\n         * Ordered list of preferred positions, from most to least desirable.\n         * @return {?}\n         */\n        function () {\n            return this._preferredPositions;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** Attaches this position strategy to an overlay. */\n    /**\n     * Attaches this position strategy to an overlay.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype.attach = /**\n     * Attaches this position strategy to an overlay.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    function (overlayRef) {\n        var _this = this;\n        if (this._overlayRef && overlayRef !== this._overlayRef) {\n            throw Error('This position strategy is already attached to an overlay');\n        }\n        this._validatePositions();\n        overlayRef.hostElement.classList.add('cdk-overlay-connected-position-bounding-box');\n        this._overlayRef = overlayRef;\n        this._boundingBox = overlayRef.hostElement;\n        this._pane = overlayRef.overlayElement;\n        this._resizeSubscription.unsubscribe();\n        this._resizeSubscription = this._viewportRuler.change().subscribe(function () { return _this.apply(); });\n    };\n    /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin best fits on-screen.\n     *\n     * The selection of a position goes as follows:\n     *  - If any positions fit completely within the viewport as-is,\n     *      choose the first position that does so.\n     *  - If flexible dimensions are enabled and at least one satifies the given minimum width/height,\n     *      choose the position with the greatest available size modified by the positions' weight.\n     *  - If pushing is enabled, take the position that went off-screen the least and push it\n     *      on-screen.\n     *  - If none of the previous criteria were met, use the position that goes off-screen the least.\n     * @docs-private\n     */\n    /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin best fits on-screen.\n     *\n     * The selection of a position goes as follows:\n     *  - If any positions fit completely within the viewport as-is,\n     *      choose the first position that does so.\n     *  - If flexible dimensions are enabled and at least one satifies the given minimum width/height,\n     *      choose the position with the greatest available size modified by the positions' weight.\n     *  - If pushing is enabled, take the position that went off-screen the least and push it\n     *      on-screen.\n     *  - If none of the previous criteria were met, use the position that goes off-screen the least.\n     * \\@docs-private\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype.apply = /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin best fits on-screen.\n     *\n     * The selection of a position goes as follows:\n     *  - If any positions fit completely within the viewport as-is,\n     *      choose the first position that does so.\n     *  - If flexible dimensions are enabled and at least one satifies the given minimum width/height,\n     *      choose the position with the greatest available size modified by the positions' weight.\n     *  - If pushing is enabled, take the position that went off-screen the least and push it\n     *      on-screen.\n     *  - If none of the previous criteria were met, use the position that goes off-screen the least.\n     * \\@docs-private\n     * @return {?}\n     */\n    function () {\n        // We shouldn't do anything if the strategy was disposed or we're on the server.\n        if (this._isDisposed || (this._platform && !this._platform.isBrowser)) {\n            return;\n        }\n        // If the position has been applied already (e.g. when the overlay was opened) and the\n        // consumer opted into locking in the position, re-use the old position, in order to\n        // prevent the overlay from jumping around.\n        if (!this._isInitialRender && this._positionLocked && this._lastPosition) {\n            this.reapplyLastPosition();\n            return;\n        }\n        this._resetOverlayElementStyles();\n        this._resetBoundingBoxStyles();\n        // We need the bounding rects for the origin and the overlay to determine how to position\n        // the overlay relative to the origin.\n        // We use the viewport rect to determine whether a position would go off-screen.\n        this._viewportRect = this._getNarrowedViewportRect();\n        this._originRect = this._origin.getBoundingClientRect();\n        this._overlayRect = this._pane.getBoundingClientRect();\n        var /** @type {?} */ originRect = this._originRect;\n        var /** @type {?} */ overlayRect = this._overlayRect;\n        var /** @type {?} */ viewportRect = this._viewportRect;\n        // Positions where the overlay will fit with flexible dimensions.\n        var /** @type {?} */ flexibleFits = [];\n        // Fallback if none of the preferred positions fit within the viewport.\n        var /** @type {?} */ fallback;\n        // Go through each of the preferred positions looking for a good fit.\n        // If a good fit is found, it will be applied immediately.\n        for (var _i = 0, _a = this._preferredPositions; _i < _a.length; _i++) {\n            var pos = _a[_i];\n            // Get the exact (x, y) coordinate for the point-of-origin on the origin element.\n            var /** @type {?} */ originPoint = this._getOriginPoint(originRect, pos);\n            // From that point-of-origin, get the exact (x, y) coordinate for the top-left corner of the\n            // overlay in this position. We use the top-left corner for calculations and later translate\n            // this into an appropriate (top, left, bottom, right) style.\n            var /** @type {?} */ overlayPoint = this._getOverlayPoint(originPoint, overlayRect, pos);\n            // Calculate how well the overlay would fit into the viewport with this point.\n            var /** @type {?} */ overlayFit = this._getOverlayFit(overlayPoint, overlayRect, viewportRect, pos);\n            // If the overlay, without any further work, fits into the viewport, use this position.\n            if (overlayFit.isCompletelyWithinViewport) {\n                this._isPushed = false;\n                this._applyPosition(pos, originPoint);\n                return;\n            }\n            // If the overlay has flexible dimensions, we can use this position\n            // so long as there's enough space for the minimum dimensions.\n            if (this._canFitWithFlexibleDimensions(overlayFit, overlayPoint, viewportRect)) {\n                // Save positions where the overlay will fit with flexible dimensions. We will use these\n                // if none of the positions fit *without* flexible dimensions.\n                flexibleFits.push({\n                    position: pos,\n                    origin: originPoint,\n                    overlayRect: overlayRect,\n                    boundingBoxRect: this._calculateBoundingBoxRect(originPoint, pos)\n                });\n                continue;\n            }\n            // If the current preferred position does not fit on the screen, remember the position\n            // if it has more visible area on-screen than we've seen and move onto the next preferred\n            // position.\n            if (!fallback || fallback.overlayFit.visibleArea < overlayFit.visibleArea) {\n                fallback = { overlayFit: overlayFit, overlayPoint: overlayPoint, originPoint: originPoint, position: pos, overlayRect: overlayRect };\n            }\n        }\n        // If there are any positions where the overlay would fit with flexible dimensions, choose the\n        // one that has the greatest area available modified by the position's weight\n        if (flexibleFits.length) {\n            var /** @type {?} */ bestFit = null;\n            var /** @type {?} */ bestScore = -1;\n            for (var _b = 0, flexibleFits_1 = flexibleFits; _b < flexibleFits_1.length; _b++) {\n                var fit_1 = flexibleFits_1[_b];\n                var /** @type {?} */ score = fit_1.boundingBoxRect.width * fit_1.boundingBoxRect.height * (fit_1.position.weight || 1);\n                if (score > bestScore) {\n                    bestScore = score;\n                    bestFit = fit_1;\n                }\n            }\n            this._isPushed = false;\n            this._applyPosition(/** @type {?} */ ((bestFit)).position, /** @type {?} */ ((bestFit)).origin);\n            return;\n        }\n        // When none of the preferred positions fit within the viewport, take the position\n        // that went off-screen the least and attempt to push it on-screen.\n        if (this._canPush) {\n            // TODO(jelbourn): after pushing, the opening \"direction\" of the overlay might not make sense.\n            this._isPushed = true;\n            this._applyPosition(/** @type {?} */ ((fallback)).position, /** @type {?} */ ((fallback)).originPoint);\n            return;\n        }\n        // All options for getting the overlay within the viewport have been exhausted, so go with the\n        // position that went off-screen the least.\n        this._applyPosition(/** @type {?} */ ((fallback)).position, /** @type {?} */ ((fallback)).originPoint);\n    };\n    /**\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype.detach = /**\n     * @return {?}\n     */\n    function () {\n        this._resizeSubscription.unsubscribe();\n    };\n    /** Cleanup after the element gets destroyed. */\n    /**\n     * Cleanup after the element gets destroyed.\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype.dispose = /**\n     * Cleanup after the element gets destroyed.\n     * @return {?}\n     */\n    function () {\n        if (!this._isDisposed) {\n            this.detach();\n            this._boundingBox = null;\n            this._positionChanges.complete();\n            this._isDisposed = true;\n        }\n    };\n    /**\n     * This re-aligns the overlay element with the trigger in its last calculated position,\n     * even if a position higher in the \"preferred positions\" list would now fit. This\n     * allows one to re-align the panel without changing the orientation of the panel.\n     */\n    /**\n     * This re-aligns the overlay element with the trigger in its last calculated position,\n     * even if a position higher in the \"preferred positions\" list would now fit. This\n     * allows one to re-align the panel without changing the orientation of the panel.\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype.reapplyLastPosition = /**\n     * This re-aligns the overlay element with the trigger in its last calculated position,\n     * even if a position higher in the \"preferred positions\" list would now fit. This\n     * allows one to re-align the panel without changing the orientation of the panel.\n     * @return {?}\n     */\n    function () {\n        if (!this._isDisposed && (!this._platform || this._platform.isBrowser)) {\n            this._originRect = this._origin.getBoundingClientRect();\n            this._overlayRect = this._pane.getBoundingClientRect();\n            this._viewportRect = this._getNarrowedViewportRect();\n            var /** @type {?} */ lastPosition = this._lastPosition || this._preferredPositions[0];\n            var /** @type {?} */ originPoint = this._getOriginPoint(this._originRect, lastPosition);\n            this._applyPosition(lastPosition, originPoint);\n        }\n    };\n    /**\n     * Sets the list of Scrollable containers that host the origin element so that\n     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n     * Scrollable must be an ancestor element of the strategy's origin element.\n     */\n    /**\n     * Sets the list of Scrollable containers that host the origin element so that\n     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n     * Scrollable must be an ancestor element of the strategy's origin element.\n     * @param {?} scrollables\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype.withScrollableContainers = /**\n     * Sets the list of Scrollable containers that host the origin element so that\n     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n     * Scrollable must be an ancestor element of the strategy's origin element.\n     * @param {?} scrollables\n     * @return {?}\n     */\n    function (scrollables) {\n        this.scrollables = scrollables;\n    };\n    /**\n     * Adds new preferred positions.\n     * @param positions List of positions options for this overlay.\n     */\n    /**\n     * Adds new preferred positions.\n     * @param {?} positions List of positions options for this overlay.\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype.withPositions = /**\n     * Adds new preferred positions.\n     * @param {?} positions List of positions options for this overlay.\n     * @return {?}\n     */\n    function (positions) {\n        this._preferredPositions = positions;\n        // If the last calculated position object isn't part of the positions anymore, clear\n        // it in order to avoid it being picked up if the consumer tries to re-apply.\n        if (positions.indexOf(/** @type {?} */ ((this._lastPosition))) === -1) {\n            this._lastPosition = null;\n        }\n        this._validatePositions();\n        return this;\n    };\n    /**\n     * Sets a minimum distance the overlay may be positioned to the edge of the viewport.\n     * @param margin Required margin between the overlay and the viewport edge in pixels.\n     */\n    /**\n     * Sets a minimum distance the overlay may be positioned to the edge of the viewport.\n     * @param {?} margin Required margin between the overlay and the viewport edge in pixels.\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype.withViewportMargin = /**\n     * Sets a minimum distance the overlay may be positioned to the edge of the viewport.\n     * @param {?} margin Required margin between the overlay and the viewport edge in pixels.\n     * @return {?}\n     */\n    function (margin) {\n        this._viewportMargin = margin;\n        return this;\n    };\n    /** Sets whether the overlay's width and height can be constrained to fit within the viewport. */\n    /**\n     * Sets whether the overlay's width and height can be constrained to fit within the viewport.\n     * @param {?=} flexibleDimensions\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype.withFlexibleDimensions = /**\n     * Sets whether the overlay's width and height can be constrained to fit within the viewport.\n     * @param {?=} flexibleDimensions\n     * @return {?}\n     */\n    function (flexibleDimensions) {\n        if (flexibleDimensions === void 0) { flexibleDimensions = true; }\n        this._hasFlexibleDimensions = flexibleDimensions;\n        return this;\n    };\n    /** Sets whether the overlay can grow after the initial open via flexible width/height. */\n    /**\n     * Sets whether the overlay can grow after the initial open via flexible width/height.\n     * @param {?=} growAfterOpen\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype.withGrowAfterOpen = /**\n     * Sets whether the overlay can grow after the initial open via flexible width/height.\n     * @param {?=} growAfterOpen\n     * @return {?}\n     */\n    function (growAfterOpen) {\n        if (growAfterOpen === void 0) { growAfterOpen = true; }\n        this._growAfterOpen = growAfterOpen;\n        return this;\n    };\n    /** Sets whether the overlay can be pushed on-screen if none of the provided positions fit. */\n    /**\n     * Sets whether the overlay can be pushed on-screen if none of the provided positions fit.\n     * @param {?=} canPush\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype.withPush = /**\n     * Sets whether the overlay can be pushed on-screen if none of the provided positions fit.\n     * @param {?=} canPush\n     * @return {?}\n     */\n    function (canPush) {\n        if (canPush === void 0) { canPush = true; }\n        this._canPush = canPush;\n        return this;\n    };\n    /**\n     * Sets whether the overlay's position should be locked in after it is positioned\n     * initially. When an overlay is locked in, it won't attempt to reposition itself\n     * when the position is re-applied (e.g. when the user scrolls away).\n     * @param isLocked Whether the overlay should locked in.\n     */\n    /**\n     * Sets whether the overlay's position should be locked in after it is positioned\n     * initially. When an overlay is locked in, it won't attempt to reposition itself\n     * when the position is re-applied (e.g. when the user scrolls away).\n     * @param {?=} isLocked Whether the overlay should locked in.\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype.withLockedPosition = /**\n     * Sets whether the overlay's position should be locked in after it is positioned\n     * initially. When an overlay is locked in, it won't attempt to reposition itself\n     * when the position is re-applied (e.g. when the user scrolls away).\n     * @param {?=} isLocked Whether the overlay should locked in.\n     * @return {?}\n     */\n    function (isLocked) {\n        if (isLocked === void 0) { isLocked = true; }\n        this._positionLocked = isLocked;\n        return this;\n    };\n    /**\n     * Sets the origin element, relative to which to position the overlay.\n     * @param origin Reference to the new origin element.\n     */\n    /**\n     * Sets the origin element, relative to which to position the overlay.\n     * @param {?} origin Reference to the new origin element.\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype.setOrigin = /**\n     * Sets the origin element, relative to which to position the overlay.\n     * @param {?} origin Reference to the new origin element.\n     * @return {?}\n     */\n    function (origin) {\n        this._origin = origin instanceof ElementRef ? origin.nativeElement : origin;\n        return this;\n    };\n    /**\n     * Sets the default offset for the overlay's connection point on the x-axis.\n     * @param offset New offset in the X axis.\n     */\n    /**\n     * Sets the default offset for the overlay's connection point on the x-axis.\n     * @param {?} offset New offset in the X axis.\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype.withDefaultOffsetX = /**\n     * Sets the default offset for the overlay's connection point on the x-axis.\n     * @param {?} offset New offset in the X axis.\n     * @return {?}\n     */\n    function (offset) {\n        this._offsetX = offset;\n        return this;\n    };\n    /**\n     * Sets the default offset for the overlay's connection point on the y-axis.\n     * @param offset New offset in the Y axis.\n     */\n    /**\n     * Sets the default offset for the overlay's connection point on the y-axis.\n     * @param {?} offset New offset in the Y axis.\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype.withDefaultOffsetY = /**\n     * Sets the default offset for the overlay's connection point on the y-axis.\n     * @param {?} offset New offset in the Y axis.\n     * @return {?}\n     */\n    function (offset) {\n        this._offsetY = offset;\n        return this;\n    };\n    /**\n     * Configures that the position strategy should set a `transform-origin` on some elements\n     * inside the overlay, depending on the current position that is being applied. This is\n     * useful for the cases where the origin of an animation can change depending on the\n     * alignment of the overlay.\n     * @param selector CSS selector that will be used to find the target\n     *    elements onto which to set the transform origin.\n     */\n    /**\n     * Configures that the position strategy should set a `transform-origin` on some elements\n     * inside the overlay, depending on the current position that is being applied. This is\n     * useful for the cases where the origin of an animation can change depending on the\n     * alignment of the overlay.\n     * @param {?} selector CSS selector that will be used to find the target\n     *    elements onto which to set the transform origin.\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype.withTransformOriginOn = /**\n     * Configures that the position strategy should set a `transform-origin` on some elements\n     * inside the overlay, depending on the current position that is being applied. This is\n     * useful for the cases where the origin of an animation can change depending on the\n     * alignment of the overlay.\n     * @param {?} selector CSS selector that will be used to find the target\n     *    elements onto which to set the transform origin.\n     * @return {?}\n     */\n    function (selector) {\n        this._transformOriginSelector = selector;\n        return this;\n    };\n    /**\n     * Gets the (x, y) coordinate of a connection point on the origin based on a relative position.\n     * @param {?} originRect\n     * @param {?} pos\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype._getOriginPoint = /**\n     * Gets the (x, y) coordinate of a connection point on the origin based on a relative position.\n     * @param {?} originRect\n     * @param {?} pos\n     * @return {?}\n     */\n    function (originRect, pos) {\n        var /** @type {?} */ x;\n        if (pos.originX == 'center') {\n            // Note: when centering we should always use the `left`\n            // offset, otherwise the position will be wrong in RTL.\n            x = originRect.left + (originRect.width / 2);\n        }\n        else {\n            var /** @type {?} */ startX = this._isRtl() ? originRect.right : originRect.left;\n            var /** @type {?} */ endX = this._isRtl() ? originRect.left : originRect.right;\n            x = pos.originX == 'start' ? startX : endX;\n        }\n        var /** @type {?} */ y;\n        if (pos.originY == 'center') {\n            y = originRect.top + (originRect.height / 2);\n        }\n        else {\n            y = pos.originY == 'top' ? originRect.top : originRect.bottom;\n        }\n        return { x: x, y: y };\n    };\n    /**\n     * Gets the (x, y) coordinate of the top-left corner of the overlay given a given position and\n     * origin point to which the overlay should be connected.\n     * @param {?} originPoint\n     * @param {?} overlayRect\n     * @param {?} pos\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype._getOverlayPoint = /**\n     * Gets the (x, y) coordinate of the top-left corner of the overlay given a given position and\n     * origin point to which the overlay should be connected.\n     * @param {?} originPoint\n     * @param {?} overlayRect\n     * @param {?} pos\n     * @return {?}\n     */\n    function (originPoint, overlayRect, pos) {\n        // Calculate the (overlayStartX, overlayStartY), the start of the\n        // potential overlay position relative to the origin point.\n        var /** @type {?} */ overlayStartX;\n        if (pos.overlayX == 'center') {\n            overlayStartX = -overlayRect.width / 2;\n        }\n        else if (pos.overlayX === 'start') {\n            overlayStartX = this._isRtl() ? -overlayRect.width : 0;\n        }\n        else {\n            overlayStartX = this._isRtl() ? 0 : -overlayRect.width;\n        }\n        var /** @type {?} */ overlayStartY;\n        if (pos.overlayY == 'center') {\n            overlayStartY = -overlayRect.height / 2;\n        }\n        else {\n            overlayStartY = pos.overlayY == 'top' ? 0 : -overlayRect.height;\n        }\n        // The (x, y) coordinates of the overlay.\n        return {\n            x: originPoint.x + overlayStartX,\n            y: originPoint.y + overlayStartY,\n        };\n    };\n    /**\n     * Gets how well an overlay at the given point will fit within the viewport.\n     * @param {?} point\n     * @param {?} overlay\n     * @param {?} viewport\n     * @param {?} position\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype._getOverlayFit = /**\n     * Gets how well an overlay at the given point will fit within the viewport.\n     * @param {?} point\n     * @param {?} overlay\n     * @param {?} viewport\n     * @param {?} position\n     * @return {?}\n     */\n    function (point, overlay, viewport, position) {\n        var x = point.x, y = point.y;\n        var /** @type {?} */ offsetX = this._getOffset(position, 'x');\n        var /** @type {?} */ offsetY = this._getOffset(position, 'y');\n        // Account for the offsets since they could push the overlay out of the viewport.\n        if (offsetX) {\n            x += offsetX;\n        }\n        if (offsetY) {\n            y += offsetY;\n        }\n        // How much the overlay would overflow at this position, on each side.\n        var /** @type {?} */ leftOverflow = 0 - x;\n        var /** @type {?} */ rightOverflow = (x + overlay.width) - viewport.width;\n        var /** @type {?} */ topOverflow = 0 - y;\n        var /** @type {?} */ bottomOverflow = (y + overlay.height) - viewport.height;\n        // Visible parts of the element on each axis.\n        var /** @type {?} */ visibleWidth = this._subtractOverflows(overlay.width, leftOverflow, rightOverflow);\n        var /** @type {?} */ visibleHeight = this._subtractOverflows(overlay.height, topOverflow, bottomOverflow);\n        var /** @type {?} */ visibleArea = visibleWidth * visibleHeight;\n        return {\n            visibleArea: visibleArea,\n            isCompletelyWithinViewport: (overlay.width * overlay.height) === visibleArea,\n            fitsInViewportVertically: visibleHeight === overlay.height,\n            fitsInViewportHorizontally: visibleWidth == overlay.width,\n        };\n    };\n    /**\n     * Whether the overlay can fit within the viewport when it may resize either its width or height.\n     * @param {?} fit How well the overlay fits in the viewport at some position.\n     * @param {?} point The (x, y) coordinates of the overlat at some position.\n     * @param {?} viewport The geometry of the viewport.\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype._canFitWithFlexibleDimensions = /**\n     * Whether the overlay can fit within the viewport when it may resize either its width or height.\n     * @param {?} fit How well the overlay fits in the viewport at some position.\n     * @param {?} point The (x, y) coordinates of the overlat at some position.\n     * @param {?} viewport The geometry of the viewport.\n     * @return {?}\n     */\n    function (fit, point, viewport) {\n        if (this._hasFlexibleDimensions) {\n            var /** @type {?} */ availableHeight = viewport.bottom - point.y;\n            var /** @type {?} */ availableWidth = viewport.right - point.x;\n            var /** @type {?} */ minHeight = this._overlayRef.getConfig().minHeight;\n            var /** @type {?} */ minWidth = this._overlayRef.getConfig().minWidth;\n            var /** @type {?} */ verticalFit = fit.fitsInViewportVertically ||\n                (minHeight != null && minHeight <= availableHeight);\n            var /** @type {?} */ horizontalFit = fit.fitsInViewportHorizontally ||\n                (minWidth != null && minWidth <= availableWidth);\n            return verticalFit && horizontalFit;\n        }\n    };\n    /**\n     * Gets the point at which the overlay can be \"pushed\" on-screen. If the overlay is larger than\n     * the viewport, the top-left corner will be pushed on-screen (with overflow occuring on the\n     * right and bottom).\n     *\n     * @param {?} start The starting point from which the overlay is pushed.\n     * @param {?} overlay The overlay dimensions.\n     * @return {?} The point at which to position the overlay after pushing. This is effectively a new\n     *     originPoint.\n     */\n    FlexibleConnectedPositionStrategy.prototype._pushOverlayOnScreen = /**\n     * Gets the point at which the overlay can be \"pushed\" on-screen. If the overlay is larger than\n     * the viewport, the top-left corner will be pushed on-screen (with overflow occuring on the\n     * right and bottom).\n     *\n     * @param {?} start The starting point from which the overlay is pushed.\n     * @param {?} overlay The overlay dimensions.\n     * @return {?} The point at which to position the overlay after pushing. This is effectively a new\n     *     originPoint.\n     */\n    function (start, overlay) {\n        var /** @type {?} */ viewport = this._viewportRect;\n        // Determine how much the overlay goes outside the viewport on each side, which we'll use to\n        // decide which direction to push it.\n        var /** @type {?} */ overflowRight = Math.max(start.x + overlay.width - viewport.right, 0);\n        var /** @type {?} */ overflowBottom = Math.max(start.y + overlay.height - viewport.bottom, 0);\n        var /** @type {?} */ overflowTop = Math.max(viewport.top - start.y, 0);\n        var /** @type {?} */ overflowLeft = Math.max(viewport.left - start.x, 0);\n        // Amount by which to push the overlay in each direction such that it remains on-screen.\n        var /** @type {?} */ pushX, /** @type {?} */ pushY = 0;\n        // If the overlay fits completely within the bounds of the viewport, push it from whichever\n        // direction is goes off-screen. Otherwise, push the top-left corner such that its in the\n        // viewport and allow for the trailing end of the overlay to go out of bounds.\n        if (overlay.width <= viewport.width) {\n            pushX = overflowLeft || -overflowRight;\n        }\n        else {\n            pushX = viewport.left - start.x;\n        }\n        if (overlay.height <= viewport.height) {\n            pushY = overflowTop || -overflowBottom;\n        }\n        else {\n            pushY = viewport.top - start.y;\n        }\n        return {\n            x: start.x + pushX,\n            y: start.y + pushY,\n        };\n    };\n    /**\n     * Applies a computed position to the overlay and emits a position change.\n     * @param {?} position The position preference\n     * @param {?} originPoint The point on the origin element where the overlay is connected.\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype._applyPosition = /**\n     * Applies a computed position to the overlay and emits a position change.\n     * @param {?} position The position preference\n     * @param {?} originPoint The point on the origin element where the overlay is connected.\n     * @return {?}\n     */\n    function (position, originPoint) {\n        this._setTransformOrigin(position);\n        this._setOverlayElementStyles(originPoint, position);\n        this._setBoundingBoxStyles(originPoint, position);\n        // Save the last connected position in case the position needs to be re-calculated.\n        this._lastPosition = position;\n        // Notify that the position has been changed along with its change properties.\n        // We only emit if we've got any subscriptions, because the scroll visibility\n        // calculcations can be somewhat expensive.\n        if (this._positionChangeSubscriptions > 0) {\n            var /** @type {?} */ scrollableViewProperties = this._getScrollVisibility();\n            var /** @type {?} */ changeEvent = new ConnectedOverlayPositionChange(position, scrollableViewProperties);\n            this._positionChanges.next(changeEvent);\n        }\n        this._isInitialRender = false;\n    };\n    /**\n     * Sets the transform origin based on the configured selector and the passed-in position.\n     * @param {?} position\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype._setTransformOrigin = /**\n     * Sets the transform origin based on the configured selector and the passed-in position.\n     * @param {?} position\n     * @return {?}\n     */\n    function (position) {\n        if (!this._transformOriginSelector) {\n            return;\n        }\n        var /** @type {?} */ elements = /** @type {?} */ ((this._boundingBox)).querySelectorAll(this._transformOriginSelector);\n        var /** @type {?} */ xOrigin;\n        var /** @type {?} */ yOrigin = position.overlayY;\n        if (position.overlayX === 'center') {\n            xOrigin = 'center';\n        }\n        else if (this._isRtl()) {\n            xOrigin = position.overlayX === 'start' ? 'right' : 'left';\n        }\n        else {\n            xOrigin = position.overlayX === 'start' ? 'left' : 'right';\n        }\n        for (var /** @type {?} */ i = 0; i < elements.length; i++) {\n            elements[i].style.transformOrigin = xOrigin + \" \" + yOrigin;\n        }\n    };\n    /**\n     * Gets the position and size of the overlay's sizing container.\n     *\n     * This method does no measuring and applies no styles so that we can cheaply compute the\n     * bounds for all positions and choose the best fit based on these results.\n     * @param {?} origin\n     * @param {?} position\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype._calculateBoundingBoxRect = /**\n     * Gets the position and size of the overlay's sizing container.\n     *\n     * This method does no measuring and applies no styles so that we can cheaply compute the\n     * bounds for all positions and choose the best fit based on these results.\n     * @param {?} origin\n     * @param {?} position\n     * @return {?}\n     */\n    function (origin, position) {\n        var /** @type {?} */ viewport = this._viewportRect;\n        var /** @type {?} */ isRtl = this._isRtl();\n        var /** @type {?} */ height, /** @type {?} */ top, /** @type {?} */ bottom;\n        if (position.overlayY === 'top') {\n            // Overlay is opening \"downward\" and thus is bound by the bottom viewport edge.\n            top = origin.y;\n            height = viewport.bottom - origin.y;\n        }\n        else if (position.overlayY === 'bottom') {\n            // Overlay is opening \"upward\" and thus is bound by the top viewport edge. We need to add\n            // the viewport margin back in, because the viewport rect is narrowed down to remove the\n            // margin, whereas the `origin` position is calculated based on its `ClientRect`.\n            bottom = viewport.height - origin.y + this._viewportMargin * 2;\n            height = viewport.height - bottom + this._viewportMargin;\n        }\n        else {\n            // If neither top nor bottom, it means that the overlay\n            // is vertically centered on the origin point.\n            var /** @type {?} */ smallestDistanceToViewportEdge = Math.min(viewport.bottom - origin.y, origin.y - viewport.left);\n            var /** @type {?} */ previousHeight = this._lastBoundingBoxSize.height;\n            height = smallestDistanceToViewportEdge * 2;\n            top = origin.y - smallestDistanceToViewportEdge;\n            if (height > previousHeight && !this._isInitialRender && !this._growAfterOpen) {\n                top = origin.y - (previousHeight / 2);\n            }\n        }\n        // The overlay is opening 'right-ward' (the content flows to the right).\n        var /** @type {?} */ isBoundedByRightViewportEdge = (position.overlayX === 'start' && !isRtl) ||\n            (position.overlayX === 'end' && isRtl);\n        // The overlay is opening 'left-ward' (the content flows to the left).\n        var /** @type {?} */ isBoundedByLeftViewportEdge = (position.overlayX === 'end' && !isRtl) ||\n            (position.overlayX === 'start' && isRtl);\n        var /** @type {?} */ width, /** @type {?} */ left, /** @type {?} */ right;\n        if (isBoundedByLeftViewportEdge) {\n            right = viewport.right - origin.x + this._viewportMargin;\n            width = origin.x - viewport.left;\n        }\n        else if (isBoundedByRightViewportEdge) {\n            left = origin.x;\n            width = viewport.right - origin.x;\n        }\n        else {\n            // If neither start nor end, it means that the overlay\n            // is horizontally centered on the origin point.\n            var /** @type {?} */ smallestDistanceToViewportEdge = Math.min(viewport.right - origin.x, origin.x - viewport.top);\n            var /** @type {?} */ previousWidth = this._lastBoundingBoxSize.width;\n            width = smallestDistanceToViewportEdge * 2;\n            left = origin.x - smallestDistanceToViewportEdge;\n            if (width > previousWidth && !this._isInitialRender && !this._growAfterOpen) {\n                left = origin.x - (previousWidth / 2);\n            }\n        }\n        return { top: top, left: left, bottom: bottom, right: right, width: width, height: height };\n    };\n    /**\n     * Sets the position and size of the overlay's sizing wrapper. The wrapper is positioned on the\n     * origin's connection point and stetches to the bounds of the viewport.\n     *\n     * @param {?} origin The point on the origin element where the overlay is connected.\n     * @param {?} position The position preference\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype._setBoundingBoxStyles = /**\n     * Sets the position and size of the overlay's sizing wrapper. The wrapper is positioned on the\n     * origin's connection point and stetches to the bounds of the viewport.\n     *\n     * @param {?} origin The point on the origin element where the overlay is connected.\n     * @param {?} position The position preference\n     * @return {?}\n     */\n    function (origin, position) {\n        var /** @type {?} */ boundingBoxRect = this._calculateBoundingBoxRect(origin, position);\n        // It's weird if the overlay *grows* while scrolling, so we take the last size into account\n        // when applying a new size.\n        if (!this._isInitialRender && !this._growAfterOpen) {\n            boundingBoxRect.height = Math.min(boundingBoxRect.height, this._lastBoundingBoxSize.height);\n            boundingBoxRect.width = Math.min(boundingBoxRect.width, this._lastBoundingBoxSize.width);\n        }\n        var /** @type {?} */ styles = /** @type {?} */ ({});\n        if (this._hasExactPosition()) {\n            styles.top = styles.left = '0';\n            styles.bottom = styles.right = '';\n            styles.width = styles.height = '100%';\n        }\n        else {\n            var /** @type {?} */ maxHeight = this._overlayRef.getConfig().maxHeight;\n            var /** @type {?} */ maxWidth = this._overlayRef.getConfig().maxWidth;\n            styles.height = coerceCssPixelValue(boundingBoxRect.height);\n            styles.top = coerceCssPixelValue(boundingBoxRect.top);\n            styles.bottom = coerceCssPixelValue(boundingBoxRect.bottom);\n            styles.width = coerceCssPixelValue(boundingBoxRect.width);\n            styles.left = coerceCssPixelValue(boundingBoxRect.left);\n            styles.right = coerceCssPixelValue(boundingBoxRect.right);\n            // Push the pane content towards the proper direction.\n            if (position.overlayX === 'center') {\n                styles.alignItems = 'center';\n            }\n            else {\n                styles.alignItems = position.overlayX === 'end' ? 'flex-end' : 'flex-start';\n            }\n            if (position.overlayY === 'center') {\n                styles.justifyContent = 'center';\n            }\n            else {\n                styles.justifyContent = position.overlayY === 'bottom' ? 'flex-end' : 'flex-start';\n            }\n            if (maxHeight) {\n                styles.maxHeight = coerceCssPixelValue(maxHeight);\n            }\n            if (maxWidth) {\n                styles.maxWidth = coerceCssPixelValue(maxWidth);\n            }\n        }\n        this._lastBoundingBoxSize = boundingBoxRect;\n        extendStyles(/** @type {?} */ ((this._boundingBox)).style, styles);\n    };\n    /**\n     * Resets the styles for the bounding box so that a new positioning can be computed.\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype._resetBoundingBoxStyles = /**\n     * Resets the styles for the bounding box so that a new positioning can be computed.\n     * @return {?}\n     */\n    function () {\n        extendStyles(/** @type {?} */ ((this._boundingBox)).style, /** @type {?} */ ({\n            top: '0',\n            left: '0',\n            right: '0',\n            bottom: '0',\n            height: '',\n            width: '',\n            alignItems: '',\n            justifyContent: '',\n        }));\n    };\n    /**\n     * Resets the styles for the overlay pane so that a new positioning can be computed.\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype._resetOverlayElementStyles = /**\n     * Resets the styles for the overlay pane so that a new positioning can be computed.\n     * @return {?}\n     */\n    function () {\n        extendStyles(this._pane.style, /** @type {?} */ ({\n            top: '',\n            left: '',\n            bottom: '',\n            right: '',\n            position: '',\n        }));\n    };\n    /**\n     * Sets positioning styles to the overlay element.\n     * @param {?} originPoint\n     * @param {?} position\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype._setOverlayElementStyles = /**\n     * Sets positioning styles to the overlay element.\n     * @param {?} originPoint\n     * @param {?} position\n     * @return {?}\n     */\n    function (originPoint, position) {\n        var /** @type {?} */ styles = /** @type {?} */ ({});\n        if (this._hasExactPosition()) {\n            extendStyles(styles, this._getExactOverlayY(position, originPoint));\n            extendStyles(styles, this._getExactOverlayX(position, originPoint));\n        }\n        else {\n            styles.position = 'static';\n        }\n        // Use a transform to apply the offsets. We do this because the `center` positions rely on\n        // being in the normal flex flow and setting a `top` / `left` at all will completely throw\n        // off the position. We also can't use margins, because they won't have an effect in some\n        // cases where the element doesn't have anything to \"push off of\". Finally, this works\n        // better both with flexible and non-flexible positioning.\n        var /** @type {?} */ transformString = '';\n        var /** @type {?} */ offsetX = this._getOffset(position, 'x');\n        var /** @type {?} */ offsetY = this._getOffset(position, 'y');\n        if (offsetX) {\n            transformString += \"translateX(\" + offsetX + \"px) \";\n        }\n        if (offsetY) {\n            transformString += \"translateY(\" + offsetY + \"px)\";\n        }\n        styles.transform = transformString.trim();\n        // If a maxWidth or maxHeight is specified on the overlay, we remove them. We do this because\n        // we need these values to both be set to \"100%\" for the automatic flexible sizing to work.\n        // The maxHeight and maxWidth are set on the boundingBox in order to enforce the constraint.\n        if (this._hasFlexibleDimensions && this._overlayRef.getConfig().maxHeight) {\n            styles.maxHeight = '';\n        }\n        if (this._hasFlexibleDimensions && this._overlayRef.getConfig().maxWidth) {\n            styles.maxWidth = '';\n        }\n        extendStyles(this._pane.style, styles);\n    };\n    /**\n     * Gets the exact top/bottom for the overlay when not using flexible sizing or when pushing.\n     * @param {?} position\n     * @param {?} originPoint\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype._getExactOverlayY = /**\n     * Gets the exact top/bottom for the overlay when not using flexible sizing or when pushing.\n     * @param {?} position\n     * @param {?} originPoint\n     * @return {?}\n     */\n    function (position, originPoint) {\n        // Reset any existing styles. This is necessary in case the\n        // preferred position has changed since the last `apply`.\n        var /** @type {?} */ styles = /** @type {?} */ ({ top: null, bottom: null });\n        var /** @type {?} */ overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n        if (this._isPushed) {\n            overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect);\n        }\n        // We want to set either `top` or `bottom` based on whether the overlay wants to appear\n        // above or below the origin and the direction in which the element will expand.\n        if (position.overlayY === 'bottom') {\n            // When using `bottom`, we adjust the y position such that it is the distance\n            // from the bottom of the viewport rather than the top.\n            var /** @type {?} */ documentHeight = this._document.documentElement.clientHeight;\n            styles.bottom = documentHeight - (overlayPoint.y + this._overlayRect.height) + \"px\";\n        }\n        else {\n            styles.top = coerceCssPixelValue(overlayPoint.y);\n        }\n        return styles;\n    };\n    /**\n     * Gets the exact left/right for the overlay when not using flexible sizing or when pushing.\n     * @param {?} position\n     * @param {?} originPoint\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype._getExactOverlayX = /**\n     * Gets the exact left/right for the overlay when not using flexible sizing or when pushing.\n     * @param {?} position\n     * @param {?} originPoint\n     * @return {?}\n     */\n    function (position, originPoint) {\n        // Reset any existing styles. This is necessary in case the preferred position has\n        // changed since the last `apply`.\n        var /** @type {?} */ styles = /** @type {?} */ ({ left: null, right: null });\n        var /** @type {?} */ overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n        if (this._isPushed) {\n            overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect);\n        }\n        // We want to set either `left` or `right` based on whether the overlay wants to appear \"before\"\n        // or \"after\" the origin, which determines the direction in which the element will expand.\n        // For the horizontal axis, the meaning of \"before\" and \"after\" change based on whether the\n        // page is in RTL or LTR.\n        var /** @type {?} */ horizontalStyleProperty;\n        if (this._isRtl()) {\n            horizontalStyleProperty = position.overlayX === 'end' ? 'left' : 'right';\n        }\n        else {\n            horizontalStyleProperty = position.overlayX === 'end' ? 'right' : 'left';\n        }\n        // When we're setting `right`, we adjust the x position such that it is the distance\n        // from the right edge of the viewport rather than the left edge.\n        if (horizontalStyleProperty === 'right') {\n            var /** @type {?} */ documentWidth = this._document.documentElement.clientWidth;\n            styles.right = documentWidth - (overlayPoint.x + this._overlayRect.width) + \"px\";\n        }\n        else {\n            styles.left = coerceCssPixelValue(overlayPoint.x);\n        }\n        return styles;\n    };\n    /**\n     * Gets the view properties of the trigger and overlay, including whether they are clipped\n     * or completely outside the view of any of the strategy's scrollables.\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype._getScrollVisibility = /**\n     * Gets the view properties of the trigger and overlay, including whether they are clipped\n     * or completely outside the view of any of the strategy's scrollables.\n     * @return {?}\n     */\n    function () {\n        // Note: needs fresh rects since the position could've changed.\n        var /** @type {?} */ originBounds = this._origin.getBoundingClientRect();\n        var /** @type {?} */ overlayBounds = this._pane.getBoundingClientRect();\n        // TODO(jelbourn): instead of needing all of the client rects for these scrolling containers\n        // every time, we should be able to use the scrollTop of the containers if the size of those\n        // containers hasn't changed.\n        var /** @type {?} */ scrollContainerBounds = this.scrollables.map(function (scrollable) {\n            return scrollable.getElementRef().nativeElement.getBoundingClientRect();\n        });\n        return {\n            isOriginClipped: isElementClippedByScrolling(originBounds, scrollContainerBounds),\n            isOriginOutsideView: isElementScrolledOutsideView(originBounds, scrollContainerBounds),\n            isOverlayClipped: isElementClippedByScrolling(overlayBounds, scrollContainerBounds),\n            isOverlayOutsideView: isElementScrolledOutsideView(overlayBounds, scrollContainerBounds),\n        };\n    };\n    /**\n     * Subtracts the amount that an element is overflowing on an axis from it's length.\n     * @param {?} length\n     * @param {...?} overflows\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype._subtractOverflows = /**\n     * Subtracts the amount that an element is overflowing on an axis from it's length.\n     * @param {?} length\n     * @param {...?} overflows\n     * @return {?}\n     */\n    function (length) {\n        var overflows = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            overflows[_i - 1] = arguments[_i];\n        }\n        return overflows.reduce(function (currentValue, currentOverflow) {\n            return currentValue - Math.max(currentOverflow, 0);\n        }, length);\n    };\n    /**\n     * Narrows the given viewport rect by the current _viewportMargin.\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype._getNarrowedViewportRect = /**\n     * Narrows the given viewport rect by the current _viewportMargin.\n     * @return {?}\n     */\n    function () {\n        // We recalculate the viewport rect here ourselves, rather than using the ViewportRuler,\n        // because we want to use the `clientWidth` and `clientHeight` as the base. The difference\n        // being that the client properties don't include the scrollbar, as opposed to `innerWidth`\n        // and `innerHeight` that do. This is necessary, because the overlay container uses\n        // 100% `width` and `height` which don't include the scrollbar either.\n        var /** @type {?} */ width = this._document.documentElement.clientWidth;\n        var /** @type {?} */ height = this._document.documentElement.clientHeight;\n        var /** @type {?} */ scrollPosition = this._viewportRuler.getViewportScrollPosition();\n        return {\n            top: scrollPosition.top + this._viewportMargin,\n            left: scrollPosition.left + this._viewportMargin,\n            right: scrollPosition.left + width - this._viewportMargin,\n            bottom: scrollPosition.top + height - this._viewportMargin,\n            width: width - (2 * this._viewportMargin),\n            height: height - (2 * this._viewportMargin),\n        };\n    };\n    /**\n     * Whether the we're dealing with an RTL context\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype._isRtl = /**\n     * Whether the we're dealing with an RTL context\n     * @return {?}\n     */\n    function () {\n        return this._overlayRef.getDirection() === 'rtl';\n    };\n    /**\n     * Determines whether the overlay uses exact or flexible positioning.\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype._hasExactPosition = /**\n     * Determines whether the overlay uses exact or flexible positioning.\n     * @return {?}\n     */\n    function () {\n        return !this._hasFlexibleDimensions || this._isPushed;\n    };\n    /**\n     * Retrieves the offset of a position along the x or y axis.\n     * @param {?} position\n     * @param {?} axis\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype._getOffset = /**\n     * Retrieves the offset of a position along the x or y axis.\n     * @param {?} position\n     * @param {?} axis\n     * @return {?}\n     */\n    function (position, axis) {\n        if (axis === 'x') {\n            // We don't do something like `position['offset' + axis]` in\n            // order to avoid breking minifiers that rename properties.\n            return position.offsetX == null ? this._offsetX : position.offsetX;\n        }\n        return position.offsetY == null ? this._offsetY : position.offsetY;\n    };\n    /**\n     * Validates that the current position match the expected values.\n     * @return {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype._validatePositions = /**\n     * Validates that the current position match the expected values.\n     * @return {?}\n     */\n    function () {\n        if (!this._preferredPositions.length) {\n            throw Error('FlexibleConnectedPositionStrategy: At least one position is required.');\n        }\n        // TODO(crisbeto): remove these once Angular's template type\n        // checking is advanced enough to catch these cases.\n        this._preferredPositions.forEach(function (pair) {\n            validateHorizontalPosition('originX', pair.originX);\n            validateVerticalPosition('originY', pair.originY);\n            validateHorizontalPosition('overlayX', pair.overlayX);\n            validateVerticalPosition('overlayY', pair.overlayY);\n        });\n    };\n    return FlexibleConnectedPositionStrategy;\n}());\n/**\n * Shallow-extends a stylesheet object with another stylesheet object.\n * @param {?} dest\n * @param {?} source\n * @return {?}\n */\nfunction extendStyles(dest, source) {\n    for (var /** @type {?} */ key in source) {\n        if (source.hasOwnProperty(key)) {\n            dest[key] = source[key];\n        }\n    }\n    return dest;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative to some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n * @deprecated Use `FlexibleConnectedPositionStrategy` instead.\n * \\@deletion-target 7.0.0\n */\nvar  /**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative to some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n * @deprecated Use `FlexibleConnectedPositionStrategy` instead.\n * \\@deletion-target 7.0.0\n */\nConnectedPositionStrategy = /** @class */ (function () {\n    function ConnectedPositionStrategy(originPos, overlayPos, connectedTo, viewportRuler, document, \n    // @deletion-target 7.0.0 `platform` parameter to be made required.\n    // @deletion-target 7.0.0 `platform` parameter to be made required.\n    platform) {\n        /**\n         * Ordered list of preferred positions, from most to least desirable.\n         */\n        this._preferredPositions = [];\n        // Since the `ConnectedPositionStrategy` is deprecated and we don't want to maintain\n        // the extra logic, we create an instance of the positioning strategy that has some\n        // defaults that make it behave as the old position strategy and to which we'll\n        // proxy all of the API calls.\n        this._positionStrategy =\n            new FlexibleConnectedPositionStrategy(connectedTo, viewportRuler, document, platform)\n                .withFlexibleDimensions(false)\n                .withPush(false)\n                .withViewportMargin(0);\n        this.withFallbackPosition(originPos, overlayPos);\n    }\n    Object.defineProperty(ConnectedPositionStrategy.prototype, \"_isRtl\", {\n        /** Whether the we're dealing with an RTL context */\n        get: /**\n         * Whether the we're dealing with an RTL context\n         * @return {?}\n         */\n        function () {\n            return this._overlayRef.getDirection() === 'rtl';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ConnectedPositionStrategy.prototype, \"onPositionChange\", {\n        /** Emits an event when the connection point changes. */\n        get: /**\n         * Emits an event when the connection point changes.\n         * @return {?}\n         */\n        function () {\n            return this._positionStrategy.positionChanges;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ConnectedPositionStrategy.prototype, \"positions\", {\n        /** Ordered list of preferred positions, from most to least desirable. */\n        get: /**\n         * Ordered list of preferred positions, from most to least desirable.\n         * @return {?}\n         */\n        function () {\n            return this._preferredPositions;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** Attach this position strategy to an overlay. */\n    /**\n     * Attach this position strategy to an overlay.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype.attach = /**\n     * Attach this position strategy to an overlay.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    function (overlayRef) {\n        this._overlayRef = overlayRef;\n        this._positionStrategy.attach(overlayRef);\n        if (this._direction) {\n            overlayRef.setDirection(this._direction);\n            this._direction = null;\n        }\n    };\n    /** Disposes all resources used by the position strategy. */\n    /**\n     * Disposes all resources used by the position strategy.\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype.dispose = /**\n     * Disposes all resources used by the position strategy.\n     * @return {?}\n     */\n    function () {\n        this._positionStrategy.dispose();\n    };\n    /** @docs-private */\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype.detach = /**\n     * \\@docs-private\n     * @return {?}\n     */\n    function () {\n        this._positionStrategy.detach();\n    };\n    /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin fits on-screen.\n     * @docs-private\n     */\n    /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin fits on-screen.\n     * \\@docs-private\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype.apply = /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin fits on-screen.\n     * \\@docs-private\n     * @return {?}\n     */\n    function () {\n        this._positionStrategy.apply();\n    };\n    /**\n     * Re-positions the overlay element with the trigger in its last calculated position,\n     * even if a position higher in the \"preferred positions\" list would now fit. This\n     * allows one to re-align the panel without changing the orientation of the panel.\n     */\n    /**\n     * Re-positions the overlay element with the trigger in its last calculated position,\n     * even if a position higher in the \"preferred positions\" list would now fit. This\n     * allows one to re-align the panel without changing the orientation of the panel.\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype.recalculateLastPosition = /**\n     * Re-positions the overlay element with the trigger in its last calculated position,\n     * even if a position higher in the \"preferred positions\" list would now fit. This\n     * allows one to re-align the panel without changing the orientation of the panel.\n     * @return {?}\n     */\n    function () {\n        this._positionStrategy.reapplyLastPosition();\n    };\n    /**\n     * Sets the list of Scrollable containers that host the origin element so that\n     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n     * Scrollable must be an ancestor element of the strategy's origin element.\n     */\n    /**\n     * Sets the list of Scrollable containers that host the origin element so that\n     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n     * Scrollable must be an ancestor element of the strategy's origin element.\n     * @param {?} scrollables\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype.withScrollableContainers = /**\n     * Sets the list of Scrollable containers that host the origin element so that\n     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n     * Scrollable must be an ancestor element of the strategy's origin element.\n     * @param {?} scrollables\n     * @return {?}\n     */\n    function (scrollables) {\n        this._positionStrategy.withScrollableContainers(scrollables);\n    };\n    /**\n     * Adds a new preferred fallback position.\n     * @param originPos\n     * @param overlayPos\n     */\n    /**\n     * Adds a new preferred fallback position.\n     * @param {?} originPos\n     * @param {?} overlayPos\n     * @param {?=} offsetX\n     * @param {?=} offsetY\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype.withFallbackPosition = /**\n     * Adds a new preferred fallback position.\n     * @param {?} originPos\n     * @param {?} overlayPos\n     * @param {?=} offsetX\n     * @param {?=} offsetY\n     * @return {?}\n     */\n    function (originPos, overlayPos, offsetX, offsetY) {\n        var /** @type {?} */ position = new ConnectionPositionPair(originPos, overlayPos, offsetX, offsetY);\n        this._preferredPositions.push(position);\n        this._positionStrategy.withPositions(this._preferredPositions);\n        return this;\n    };\n    /**\n     * Sets the layout direction so the overlay's position can be adjusted to match.\n     * @param dir New layout direction.\n     */\n    /**\n     * Sets the layout direction so the overlay's position can be adjusted to match.\n     * @param {?} dir New layout direction.\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype.withDirection = /**\n     * Sets the layout direction so the overlay's position can be adjusted to match.\n     * @param {?} dir New layout direction.\n     * @return {?}\n     */\n    function (dir) {\n        // Since the direction might be declared before the strategy is attached,\n        // we save the value in a temporary property and we'll transfer it to the\n        // overlay ref on attachment.\n        if (this._overlayRef) {\n            this._overlayRef.setDirection(dir);\n        }\n        else {\n            this._direction = dir;\n        }\n        return this;\n    };\n    /**\n     * Sets an offset for the overlay's connection point on the x-axis\n     * @param offset New offset in the X axis.\n     */\n    /**\n     * Sets an offset for the overlay's connection point on the x-axis\n     * @param {?} offset New offset in the X axis.\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype.withOffsetX = /**\n     * Sets an offset for the overlay's connection point on the x-axis\n     * @param {?} offset New offset in the X axis.\n     * @return {?}\n     */\n    function (offset) {\n        this._positionStrategy.withDefaultOffsetX(offset);\n        return this;\n    };\n    /**\n     * Sets an offset for the overlay's connection point on the y-axis\n     * @param  offset New offset in the Y axis.\n     */\n    /**\n     * Sets an offset for the overlay's connection point on the y-axis\n     * @param {?} offset New offset in the Y axis.\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype.withOffsetY = /**\n     * Sets an offset for the overlay's connection point on the y-axis\n     * @param {?} offset New offset in the Y axis.\n     * @return {?}\n     */\n    function (offset) {\n        this._positionStrategy.withDefaultOffsetY(offset);\n        return this;\n    };\n    /**\n     * Sets whether the overlay's position should be locked in after it is positioned\n     * initially. When an overlay is locked in, it won't attempt to reposition itself\n     * when the position is re-applied (e.g. when the user scrolls away).\n     * @param isLocked Whether the overlay should locked in.\n     */\n    /**\n     * Sets whether the overlay's position should be locked in after it is positioned\n     * initially. When an overlay is locked in, it won't attempt to reposition itself\n     * when the position is re-applied (e.g. when the user scrolls away).\n     * @param {?} isLocked Whether the overlay should locked in.\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype.withLockedPosition = /**\n     * Sets whether the overlay's position should be locked in after it is positioned\n     * initially. When an overlay is locked in, it won't attempt to reposition itself\n     * when the position is re-applied (e.g. when the user scrolls away).\n     * @param {?} isLocked Whether the overlay should locked in.\n     * @return {?}\n     */\n    function (isLocked) {\n        this._positionStrategy.withLockedPosition(isLocked);\n        return this;\n    };\n    /**\n     * Overwrites the current set of positions with an array of new ones.\n     * @param positions Position pairs to be set on the strategy.\n     */\n    /**\n     * Overwrites the current set of positions with an array of new ones.\n     * @param {?} positions Position pairs to be set on the strategy.\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype.withPositions = /**\n     * Overwrites the current set of positions with an array of new ones.\n     * @param {?} positions Position pairs to be set on the strategy.\n     * @return {?}\n     */\n    function (positions) {\n        this._preferredPositions = positions.slice();\n        this._positionStrategy.withPositions(this._preferredPositions);\n        return this;\n    };\n    /**\n     * Sets the origin element, relative to which to position the overlay.\n     * @param origin Reference to the new origin element.\n     */\n    /**\n     * Sets the origin element, relative to which to position the overlay.\n     * @param {?} origin Reference to the new origin element.\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype.setOrigin = /**\n     * Sets the origin element, relative to which to position the overlay.\n     * @param {?} origin Reference to the new origin element.\n     * @return {?}\n     */\n    function (origin) {\n        this._positionStrategy.setOrigin(origin);\n        return this;\n    };\n    return ConnectedPositionStrategy;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * explicit position relative to the browser's viewport. We use flexbox, instead of\n * transforms, in order to avoid issues with subpixel rendering which can cause the\n * element to become blurry.\n */\nvar  /**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * explicit position relative to the browser's viewport. We use flexbox, instead of\n * transforms, in order to avoid issues with subpixel rendering which can cause the\n * element to become blurry.\n */\nGlobalPositionStrategy = /** @class */ (function () {\n    function GlobalPositionStrategy() {\n        this._cssPosition = 'static';\n        this._topOffset = '';\n        this._bottomOffset = '';\n        this._leftOffset = '';\n        this._rightOffset = '';\n        this._alignItems = '';\n        this._justifyContent = '';\n        this._width = '';\n        this._height = '';\n    }\n    /**\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    GlobalPositionStrategy.prototype.attach = /**\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    function (overlayRef) {\n        var /** @type {?} */ config = overlayRef.getConfig();\n        this._overlayRef = overlayRef;\n        if (this._width && !config.width) {\n            overlayRef.updateSize({ width: this._width });\n        }\n        if (this._height && !config.height) {\n            overlayRef.updateSize({ height: this._height });\n        }\n        overlayRef.hostElement.classList.add('cdk-global-overlay-wrapper');\n    };\n    /**\n     * Sets the top position of the overlay. Clears any previously set vertical position.\n     * @param value New top offset.\n     */\n    /**\n     * Sets the top position of the overlay. Clears any previously set vertical position.\n     * @param {?=} value New top offset.\n     * @return {?}\n     */\n    GlobalPositionStrategy.prototype.top = /**\n     * Sets the top position of the overlay. Clears any previously set vertical position.\n     * @param {?=} value New top offset.\n     * @return {?}\n     */\n    function (value) {\n        if (value === void 0) { value = ''; }\n        this._bottomOffset = '';\n        this._topOffset = value;\n        this._alignItems = 'flex-start';\n        return this;\n    };\n    /**\n     * Sets the left position of the overlay. Clears any previously set horizontal position.\n     * @param value New left offset.\n     */\n    /**\n     * Sets the left position of the overlay. Clears any previously set horizontal position.\n     * @param {?=} value New left offset.\n     * @return {?}\n     */\n    GlobalPositionStrategy.prototype.left = /**\n     * Sets the left position of the overlay. Clears any previously set horizontal position.\n     * @param {?=} value New left offset.\n     * @return {?}\n     */\n    function (value) {\n        if (value === void 0) { value = ''; }\n        this._rightOffset = '';\n        this._leftOffset = value;\n        this._justifyContent = 'flex-start';\n        return this;\n    };\n    /**\n     * Sets the bottom position of the overlay. Clears any previously set vertical position.\n     * @param value New bottom offset.\n     */\n    /**\n     * Sets the bottom position of the overlay. Clears any previously set vertical position.\n     * @param {?=} value New bottom offset.\n     * @return {?}\n     */\n    GlobalPositionStrategy.prototype.bottom = /**\n     * Sets the bottom position of the overlay. Clears any previously set vertical position.\n     * @param {?=} value New bottom offset.\n     * @return {?}\n     */\n    function (value) {\n        if (value === void 0) { value = ''; }\n        this._topOffset = '';\n        this._bottomOffset = value;\n        this._alignItems = 'flex-end';\n        return this;\n    };\n    /**\n     * Sets the right position of the overlay. Clears any previously set horizontal position.\n     * @param value New right offset.\n     */\n    /**\n     * Sets the right position of the overlay. Clears any previously set horizontal position.\n     * @param {?=} value New right offset.\n     * @return {?}\n     */\n    GlobalPositionStrategy.prototype.right = /**\n     * Sets the right position of the overlay. Clears any previously set horizontal position.\n     * @param {?=} value New right offset.\n     * @return {?}\n     */\n    function (value) {\n        if (value === void 0) { value = ''; }\n        this._leftOffset = '';\n        this._rightOffset = value;\n        this._justifyContent = 'flex-end';\n        return this;\n    };\n    /**\n     * Sets the overlay width and clears any previously set width.\n     * @param value New width for the overlay\n     * @deprecated Pass the `width` through the `OverlayConfig`.\n     * @deletion-target 7.0.0\n     */\n    /**\n     * Sets the overlay width and clears any previously set width.\n     * @deprecated Pass the `width` through the `OverlayConfig`.\n     * \\@deletion-target 7.0.0\n     * @param {?=} value New width for the overlay\n     * @return {?}\n     */\n    GlobalPositionStrategy.prototype.width = /**\n     * Sets the overlay width and clears any previously set width.\n     * @deprecated Pass the `width` through the `OverlayConfig`.\n     * \\@deletion-target 7.0.0\n     * @param {?=} value New width for the overlay\n     * @return {?}\n     */\n    function (value) {\n        if (value === void 0) { value = ''; }\n        if (this._overlayRef) {\n            this._overlayRef.updateSize({ width: value });\n        }\n        else {\n            this._width = value;\n        }\n        return this;\n    };\n    /**\n     * Sets the overlay height and clears any previously set height.\n     * @param value New height for the overlay\n     * @deprecated Pass the `height` through the `OverlayConfig`.\n     * @deletion-target 7.0.0\n     */\n    /**\n     * Sets the overlay height and clears any previously set height.\n     * @deprecated Pass the `height` through the `OverlayConfig`.\n     * \\@deletion-target 7.0.0\n     * @param {?=} value New height for the overlay\n     * @return {?}\n     */\n    GlobalPositionStrategy.prototype.height = /**\n     * Sets the overlay height and clears any previously set height.\n     * @deprecated Pass the `height` through the `OverlayConfig`.\n     * \\@deletion-target 7.0.0\n     * @param {?=} value New height for the overlay\n     * @return {?}\n     */\n    function (value) {\n        if (value === void 0) { value = ''; }\n        if (this._overlayRef) {\n            this._overlayRef.updateSize({ height: value });\n        }\n        else {\n            this._height = value;\n        }\n        return this;\n    };\n    /**\n     * Centers the overlay horizontally with an optional offset.\n     * Clears any previously set horizontal position.\n     *\n     * @param offset Overlay offset from the horizontal center.\n     */\n    /**\n     * Centers the overlay horizontally with an optional offset.\n     * Clears any previously set horizontal position.\n     *\n     * @param {?=} offset Overlay offset from the horizontal center.\n     * @return {?}\n     */\n    GlobalPositionStrategy.prototype.centerHorizontally = /**\n     * Centers the overlay horizontally with an optional offset.\n     * Clears any previously set horizontal position.\n     *\n     * @param {?=} offset Overlay offset from the horizontal center.\n     * @return {?}\n     */\n    function (offset) {\n        if (offset === void 0) { offset = ''; }\n        this.left(offset);\n        this._justifyContent = 'center';\n        return this;\n    };\n    /**\n     * Centers the overlay vertically with an optional offset.\n     * Clears any previously set vertical position.\n     *\n     * @param offset Overlay offset from the vertical center.\n     */\n    /**\n     * Centers the overlay vertically with an optional offset.\n     * Clears any previously set vertical position.\n     *\n     * @param {?=} offset Overlay offset from the vertical center.\n     * @return {?}\n     */\n    GlobalPositionStrategy.prototype.centerVertically = /**\n     * Centers the overlay vertically with an optional offset.\n     * Clears any previously set vertical position.\n     *\n     * @param {?=} offset Overlay offset from the vertical center.\n     * @return {?}\n     */\n    function (offset) {\n        if (offset === void 0) { offset = ''; }\n        this.top(offset);\n        this._alignItems = 'center';\n        return this;\n    };\n    /**\n     * Apply the position to the element.\n     * @docs-private\n     */\n    /**\n     * Apply the position to the element.\n     * \\@docs-private\n     * @return {?}\n     */\n    GlobalPositionStrategy.prototype.apply = /**\n     * Apply the position to the element.\n     * \\@docs-private\n     * @return {?}\n     */\n    function () {\n        // Since the overlay ref applies the strategy asynchronously, it could\n        // have been disposed before it ends up being applied. If that is the\n        // case, we shouldn't do anything.\n        if (!this._overlayRef.hasAttached()) {\n            return;\n        }\n        var /** @type {?} */ styles = this._overlayRef.overlayElement.style;\n        var /** @type {?} */ parentStyles = this._overlayRef.hostElement.style;\n        var /** @type {?} */ config = this._overlayRef.getConfig();\n        styles.position = this._cssPosition;\n        styles.marginLeft = config.width === '100%' ? '0' : this._leftOffset;\n        styles.marginTop = config.height === '100%' ? '0' : this._topOffset;\n        styles.marginBottom = this._bottomOffset;\n        styles.marginRight = this._rightOffset;\n        if (config.width === '100%') {\n            parentStyles.justifyContent = 'flex-start';\n        }\n        else if (this._justifyContent === 'center') {\n            parentStyles.justifyContent = 'center';\n        }\n        else if (this._overlayRef.getConfig().direction === 'rtl') {\n            // In RTL the browser will invert `flex-start` and `flex-end` automatically, but we\n            // don't want that because our positioning is explicitly `left` and `right`, hence\n            // why we do another inversion to ensure that the overlay stays in the same position.\n            // TODO: reconsider this if we add `start` and `end` methods.\n            if (this._justifyContent === 'flex-start') {\n                parentStyles.justifyContent = 'flex-end';\n            }\n            else if (this._justifyContent === 'flex-end') {\n                parentStyles.justifyContent = 'flex-start';\n            }\n        }\n        else {\n            parentStyles.justifyContent = this._justifyContent;\n        }\n        parentStyles.alignItems = config.height === '100%' ? 'flex-start' : this._alignItems;\n    };\n    /**\n     * Noop implemented as a part of the PositionStrategy interface.\n     * @docs-private\n     */\n    /**\n     * Noop implemented as a part of the PositionStrategy interface.\n     * \\@docs-private\n     * @return {?}\n     */\n    GlobalPositionStrategy.prototype.dispose = /**\n     * Noop implemented as a part of the PositionStrategy interface.\n     * \\@docs-private\n     * @return {?}\n     */\n    function () { };\n    return GlobalPositionStrategy;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Builder for overlay position strategy.\n */\nvar OverlayPositionBuilder = /** @class */ (function () {\n    function OverlayPositionBuilder(_viewportRuler, _document, \n    // @deletion-target 7.0.0 `_platform` parameter to be made required.\n    _platform) {\n        this._viewportRuler = _viewportRuler;\n        this._document = _document;\n        this._platform = _platform;\n    }\n    /**\n     * Creates a global position strategy.\n     */\n    /**\n     * Creates a global position strategy.\n     * @return {?}\n     */\n    OverlayPositionBuilder.prototype.global = /**\n     * Creates a global position strategy.\n     * @return {?}\n     */\n    function () {\n        return new GlobalPositionStrategy();\n    };\n    /**\n     * Creates a relative position strategy.\n     * @param elementRef\n     * @param originPos\n     * @param overlayPos\n     * @deprecated Use `flexibleConnectedTo` instead.\n     * @deletion-target 7.0.0\n     */\n    /**\n     * Creates a relative position strategy.\n     * @deprecated Use `flexibleConnectedTo` instead.\n     * \\@deletion-target 7.0.0\n     * @param {?} elementRef\n     * @param {?} originPos\n     * @param {?} overlayPos\n     * @return {?}\n     */\n    OverlayPositionBuilder.prototype.connectedTo = /**\n     * Creates a relative position strategy.\n     * @deprecated Use `flexibleConnectedTo` instead.\n     * \\@deletion-target 7.0.0\n     * @param {?} elementRef\n     * @param {?} originPos\n     * @param {?} overlayPos\n     * @return {?}\n     */\n    function (elementRef, originPos, overlayPos) {\n        return new ConnectedPositionStrategy(originPos, overlayPos, elementRef, this._viewportRuler, this._document);\n    };\n    /**\n     * Creates a flexible position strategy.\n     * @param elementRef\n     */\n    /**\n     * Creates a flexible position strategy.\n     * @param {?} elementRef\n     * @return {?}\n     */\n    OverlayPositionBuilder.prototype.flexibleConnectedTo = /**\n     * Creates a flexible position strategy.\n     * @param {?} elementRef\n     * @return {?}\n     */\n    function (elementRef) {\n        return new FlexibleConnectedPositionStrategy(elementRef, this._viewportRuler, this._document, this._platform);\n    };\n    OverlayPositionBuilder.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */\n    OverlayPositionBuilder.ctorParameters = function () { return [\n        { type: ViewportRuler, },\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] },] },\n        { type: Platform, decorators: [{ type: Optional },] },\n    ]; };\n    /** @nocollapse */ OverlayPositionBuilder.ngInjectableDef = defineInjectable({ factory: function OverlayPositionBuilder_Factory() { return new OverlayPositionBuilder(inject(ViewportRuler), inject(DOCUMENT), inject(Platform, 8)); }, token: OverlayPositionBuilder, providedIn: \"root\" });\n    return OverlayPositionBuilder;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Next overlay unique ID.\n */\nvar /** @type {?} */ nextUniqueId = 0;\n/**\n * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\n * used as a low-level building block for other components. Dialogs, tooltips, menus,\n * selects, etc. can all be built using overlays. The service should primarily be used by authors\n * of re-usable components rather than developers building end-user applications.\n *\n * An overlay *is* a PortalOutlet, so any kind of Portal can be loaded into one.\n */\nvar Overlay = /** @class */ (function () {\n    function Overlay(scrollStrategies, _overlayContainer, _componentFactoryResolver, _positionBuilder, _keyboardDispatcher, _injector, _ngZone, _document, _directionality) {\n        this.scrollStrategies = scrollStrategies;\n        this._overlayContainer = _overlayContainer;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._positionBuilder = _positionBuilder;\n        this._keyboardDispatcher = _keyboardDispatcher;\n        this._injector = _injector;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._directionality = _directionality;\n    }\n    /**\n     * Creates an overlay.\n     * @param config Configuration applied to the overlay.\n     * @returns Reference to the created overlay.\n     */\n    /**\n     * Creates an overlay.\n     * @param {?=} config Configuration applied to the overlay.\n     * @return {?} Reference to the created overlay.\n     */\n    Overlay.prototype.create = /**\n     * Creates an overlay.\n     * @param {?=} config Configuration applied to the overlay.\n     * @return {?} Reference to the created overlay.\n     */\n    function (config) {\n        var /** @type {?} */ host = this._createHostElement();\n        var /** @type {?} */ pane = this._createPaneElement(host);\n        var /** @type {?} */ portalOutlet = this._createPortalOutlet(pane);\n        var /** @type {?} */ overlayConfig = new OverlayConfig(config);\n        overlayConfig.direction = overlayConfig.direction || this._directionality.value;\n        return new OverlayRef(portalOutlet, host, pane, overlayConfig, this._ngZone, this._keyboardDispatcher, this._document);\n    };\n    /**\n     * Gets a position builder that can be used, via fluent API,\n     * to construct and configure a position strategy.\n     * @returns An overlay position builder.\n     */\n    /**\n     * Gets a position builder that can be used, via fluent API,\n     * to construct and configure a position strategy.\n     * @return {?} An overlay position builder.\n     */\n    Overlay.prototype.position = /**\n     * Gets a position builder that can be used, via fluent API,\n     * to construct and configure a position strategy.\n     * @return {?} An overlay position builder.\n     */\n    function () {\n        return this._positionBuilder;\n    };\n    /**\n     * Creates the DOM element for an overlay and appends it to the overlay container.\n     * @param {?} host\n     * @return {?} Newly-created pane element\n     */\n    Overlay.prototype._createPaneElement = /**\n     * Creates the DOM element for an overlay and appends it to the overlay container.\n     * @param {?} host\n     * @return {?} Newly-created pane element\n     */\n    function (host) {\n        var /** @type {?} */ pane = this._document.createElement('div');\n        pane.id = \"cdk-overlay-\" + nextUniqueId++;\n        pane.classList.add('cdk-overlay-pane');\n        host.appendChild(pane);\n        return pane;\n    };\n    /**\n     * Creates the host element that wraps around an overlay\n     * and can be used for advanced positioning.\n     * @return {?} Newly-create host element.\n     */\n    Overlay.prototype._createHostElement = /**\n     * Creates the host element that wraps around an overlay\n     * and can be used for advanced positioning.\n     * @return {?} Newly-create host element.\n     */\n    function () {\n        var /** @type {?} */ host = this._document.createElement('div');\n        this._overlayContainer.getContainerElement().appendChild(host);\n        return host;\n    };\n    /**\n     * Create a DomPortalOutlet into which the overlay content can be loaded.\n     * @param {?} pane The DOM element to turn into a portal outlet.\n     * @return {?} A portal outlet for the given DOM element.\n     */\n    Overlay.prototype._createPortalOutlet = /**\n     * Create a DomPortalOutlet into which the overlay content can be loaded.\n     * @param {?} pane The DOM element to turn into a portal outlet.\n     * @return {?} A portal outlet for the given DOM element.\n     */\n    function (pane) {\n        // We have to resolve the ApplicationRef later in order to allow people\n        // to use overlay-based providers during app initialization.\n        if (!this._appRef) {\n            this._appRef = this._injector.get(ApplicationRef);\n        }\n        return new DomPortalOutlet(pane, this._componentFactoryResolver, this._appRef, this._injector);\n    };\n    Overlay.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    Overlay.ctorParameters = function () { return [\n        { type: ScrollStrategyOptions, },\n        { type: OverlayContainer, },\n        { type: ComponentFactoryResolver, },\n        { type: OverlayPositionBuilder, },\n        { type: OverlayKeyboardDispatcher, },\n        { type: Injector, },\n        { type: NgZone, },\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] },] },\n        { type: Directionality, },\n    ]; };\n    return Overlay;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Default set of positions for the overlay. Follows the behavior of a dropdown.\n */\nvar /** @type {?} */ defaultPositionList = [\n    {\n        originX: 'start',\n        originY: 'bottom',\n        overlayX: 'start',\n        overlayY: 'top'\n    },\n    {\n        originX: 'start',\n        originY: 'top',\n        overlayX: 'start',\n        overlayY: 'bottom'\n    },\n    {\n        originX: 'end',\n        originY: 'top',\n        overlayX: 'end',\n        overlayY: 'bottom'\n    },\n    {\n        originX: 'end',\n        originY: 'bottom',\n        overlayX: 'end',\n        overlayY: 'top'\n    }\n];\n/**\n * Injection token that determines the scroll handling while the connected overlay is open.\n */\nvar /** @type {?} */ CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY = new InjectionToken('cdk-connected-overlay-scroll-strategy');\n/**\n * Directive applied to an element to make it usable as an origin for an Overlay using a\n * ConnectedPositionStrategy.\n */\nvar CdkOverlayOrigin = /** @class */ (function () {\n    function CdkOverlayOrigin(elementRef) {\n        this.elementRef = elementRef;\n    }\n    CdkOverlayOrigin.decorators = [\n        { type: Directive, args: [{\n                    selector: '[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]',\n                    exportAs: 'cdkOverlayOrigin',\n                },] },\n    ];\n    /** @nocollapse */\n    CdkOverlayOrigin.ctorParameters = function () { return [\n        { type: ElementRef, },\n    ]; };\n    return CdkOverlayOrigin;\n}());\n/**\n * Directive to facilitate declarative creation of an\n * Overlay using a FlexibleConnectedPositionStrategy.\n */\nvar CdkConnectedOverlay = /** @class */ (function () {\n    // TODO(jelbourn): inputs for size, scroll behavior, animation, etc.\n    function CdkConnectedOverlay(_overlay, templateRef, viewContainerRef, _scrollStrategy, _dir) {\n        this._overlay = _overlay;\n        this._scrollStrategy = _scrollStrategy;\n        this._dir = _dir;\n        this._hasBackdrop = false;\n        this._lockPosition = false;\n        this._growAfterOpen = false;\n        this._flexibleDimensions = false;\n        this._push = false;\n        this._backdropSubscription = Subscription.EMPTY;\n        /**\n         * Margin between the overlay and the viewport edges.\n         */\n        this.viewportMargin = 0;\n        /**\n         * Strategy to be used when handling scroll events while the overlay is open.\n         */\n        this.scrollStrategy = this._scrollStrategy();\n        /**\n         * Whether the overlay is open.\n         */\n        this.open = false;\n        /**\n         * Event emitted when the backdrop is clicked.\n         */\n        this.backdropClick = new EventEmitter();\n        /**\n         * Event emitted when the position has changed.\n         */\n        this.positionChange = new EventEmitter();\n        /**\n         * Event emitted when the overlay has been attached.\n         */\n        this.attach = new EventEmitter();\n        /**\n         * Event emitted when the overlay has been detached.\n         */\n        this.detach = new EventEmitter();\n        this._templatePortal = new TemplatePortal(templateRef, viewContainerRef);\n    }\n    Object.defineProperty(CdkConnectedOverlay.prototype, \"offsetX\", {\n        get: /**\n         * The offset in pixels for the overlay connection point on the x-axis\n         * @return {?}\n         */\n        function () { return this._offsetX; },\n        set: /**\n         * @param {?} offsetX\n         * @return {?}\n         */\n        function (offsetX) {\n            this._offsetX = offsetX;\n            if (this._position) {\n                this._setPositions(this._position);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkConnectedOverlay.prototype, \"offsetY\", {\n        get: /**\n         * The offset in pixels for the overlay connection point on the y-axis\n         * @return {?}\n         */\n        function () { return this._offsetY; },\n        set: /**\n         * @param {?} offsetY\n         * @return {?}\n         */\n        function (offsetY) {\n            this._offsetY = offsetY;\n            if (this._position) {\n                this._setPositions(this._position);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkConnectedOverlay.prototype, \"hasBackdrop\", {\n        get: /**\n         * Whether or not the overlay should attach a backdrop.\n         * @return {?}\n         */\n        function () { return this._hasBackdrop; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this._hasBackdrop = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkConnectedOverlay.prototype, \"lockPosition\", {\n        get: /**\n         * Whether or not the overlay should be locked when scrolling.\n         * @return {?}\n         */\n        function () { return this._lockPosition; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this._lockPosition = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkConnectedOverlay.prototype, \"flexibleDiemsions\", {\n        get: /**\n         * Whether the overlay's width and height can be constrained to fit within the viewport.\n         * @return {?}\n         */\n        function () { return this._flexibleDimensions; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this._flexibleDimensions = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkConnectedOverlay.prototype, \"growAfterOpen\", {\n        get: /**\n         * Whether the overlay can grow after the initial open when flexible positioning is turned on.\n         * @return {?}\n         */\n        function () { return this._growAfterOpen; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this._growAfterOpen = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkConnectedOverlay.prototype, \"push\", {\n        get: /**\n         * Whether the overlay can be pushed on-screen if none of the provided positions fit.\n         * @return {?}\n         */\n        function () { return this._push; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this._push = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkConnectedOverlay.prototype, \"overlayRef\", {\n        /** The associated overlay reference. */\n        get: /**\n         * The associated overlay reference.\n         * @return {?}\n         */\n        function () {\n            return this._overlayRef;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkConnectedOverlay.prototype, \"dir\", {\n        /** The element's layout direction. */\n        get: /**\n         * The element's layout direction.\n         * @return {?}\n         */\n        function () {\n            return this._dir ? this._dir.value : 'ltr';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    CdkConnectedOverlay.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._destroyOverlay();\n    };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    CdkConnectedOverlay.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        if (this._position) {\n            if (changes['positions']) {\n                this._position.withPositions(this.positions);\n            }\n            if (changes['lockPosition']) {\n                this._position.withLockedPosition(this.lockPosition);\n            }\n            if (changes['origin']) {\n                this._position.setOrigin(this.origin.elementRef);\n                if (this.open) {\n                    this._position.apply();\n                }\n            }\n        }\n        if (changes['open']) {\n            this.open ? this._attachOverlay() : this._detachOverlay();\n        }\n    };\n    /**\n     * Creates an overlay\n     * @return {?}\n     */\n    CdkConnectedOverlay.prototype._createOverlay = /**\n     * Creates an overlay\n     * @return {?}\n     */\n    function () {\n        if (!this.positions || !this.positions.length) {\n            this.positions = defaultPositionList;\n        }\n        this._overlayRef = this._overlay.create(this._buildConfig());\n    };\n    /**\n     * Builds the overlay config based on the directive's inputs\n     * @return {?}\n     */\n    CdkConnectedOverlay.prototype._buildConfig = /**\n     * Builds the overlay config based on the directive's inputs\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ positionStrategy = this._position = this._createPositionStrategy();\n        var /** @type {?} */ overlayConfig = new OverlayConfig({\n            direction: this._dir,\n            positionStrategy: positionStrategy,\n            scrollStrategy: this.scrollStrategy,\n            hasBackdrop: this.hasBackdrop\n        });\n        if (this.width || this.width === 0) {\n            overlayConfig.width = this.width;\n        }\n        if (this.height || this.height === 0) {\n            overlayConfig.height = this.height;\n        }\n        if (this.minWidth || this.minWidth === 0) {\n            overlayConfig.minWidth = this.minWidth;\n        }\n        if (this.minHeight || this.minHeight === 0) {\n            overlayConfig.minHeight = this.minHeight;\n        }\n        if (this.backdropClass) {\n            overlayConfig.backdropClass = this.backdropClass;\n        }\n        return overlayConfig;\n    };\n    /**\n     * Returns the position strategy of the overlay to be set on the overlay config\n     * @return {?}\n     */\n    CdkConnectedOverlay.prototype._createPositionStrategy = /**\n     * Returns the position strategy of the overlay to be set on the overlay config\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ strategy = this._overlay.position()\n            .flexibleConnectedTo(this.origin.elementRef)\n            .withFlexibleDimensions(this.flexibleDiemsions)\n            .withPush(this.push)\n            .withGrowAfterOpen(this.growAfterOpen)\n            .withViewportMargin(this.viewportMargin)\n            .withLockedPosition(this.lockPosition);\n        this._setPositions(strategy);\n        strategy.positionChanges.subscribe(function (p) { return _this.positionChange.emit(p); });\n        return strategy;\n    };\n    /**\n     * Sets the primary and fallback positions of a positions strategy,\n     * based on the current directive inputs.\n     * @param {?} positionStrategy\n     * @return {?}\n     */\n    CdkConnectedOverlay.prototype._setPositions = /**\n     * Sets the primary and fallback positions of a positions strategy,\n     * based on the current directive inputs.\n     * @param {?} positionStrategy\n     * @return {?}\n     */\n    function (positionStrategy) {\n        var _this = this;\n        var /** @type {?} */ positions = this.positions.map(function (pos) {\n            return ({\n                originX: pos.originX,\n                originY: pos.originY,\n                overlayX: pos.overlayX,\n                overlayY: pos.overlayY,\n                offsetX: pos.offsetX || _this.offsetX,\n                offsetY: pos.offsetY || _this.offsetY\n            });\n        });\n        positionStrategy.withPositions(positions);\n    };\n    /**\n     * Attaches the overlay and subscribes to backdrop clicks if backdrop exists\n     * @return {?}\n     */\n    CdkConnectedOverlay.prototype._attachOverlay = /**\n     * Attaches the overlay and subscribes to backdrop clicks if backdrop exists\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (!this._overlayRef) {\n            this._createOverlay(); /** @type {?} */\n            ((this._overlayRef)).keydownEvents().subscribe(function (event) {\n                if (event.keyCode === ESCAPE) {\n                    _this._detachOverlay();\n                }\n            });\n        }\n        else {\n            // Update the overlay size, in case the directive's inputs have changed\n            this._overlayRef.updateSize({\n                width: this.width,\n                minWidth: this.minWidth,\n                height: this.height,\n                minHeight: this.minHeight,\n            });\n        }\n        if (!this._overlayRef.hasAttached()) {\n            this._overlayRef.attach(this._templatePortal);\n            this.attach.emit();\n        }\n        if (this.hasBackdrop) {\n            this._backdropSubscription = this._overlayRef.backdropClick().subscribe(function (event) {\n                _this.backdropClick.emit(event);\n            });\n        }\n    };\n    /**\n     * Detaches the overlay and unsubscribes to backdrop clicks if backdrop exists\n     * @return {?}\n     */\n    CdkConnectedOverlay.prototype._detachOverlay = /**\n     * Detaches the overlay and unsubscribes to backdrop clicks if backdrop exists\n     * @return {?}\n     */\n    function () {\n        if (this._overlayRef) {\n            this._overlayRef.detach();\n            this.detach.emit();\n        }\n        this._backdropSubscription.unsubscribe();\n    };\n    /**\n     * Destroys the overlay created by this directive.\n     * @return {?}\n     */\n    CdkConnectedOverlay.prototype._destroyOverlay = /**\n     * Destroys the overlay created by this directive.\n     * @return {?}\n     */\n    function () {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n        }\n        this._backdropSubscription.unsubscribe();\n    };\n    CdkConnectedOverlay.decorators = [\n        { type: Directive, args: [{\n                    selector: '[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]',\n                    exportAs: 'cdkConnectedOverlay'\n                },] },\n    ];\n    /** @nocollapse */\n    CdkConnectedOverlay.ctorParameters = function () { return [\n        { type: Overlay, },\n        { type: TemplateRef, },\n        { type: ViewContainerRef, },\n        { type: undefined, decorators: [{ type: Inject, args: [CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY,] },] },\n        { type: Directionality, decorators: [{ type: Optional },] },\n    ]; };\n    CdkConnectedOverlay.propDecorators = {\n        \"origin\": [{ type: Input, args: ['cdkConnectedOverlayOrigin',] },],\n        \"positions\": [{ type: Input, args: ['cdkConnectedOverlayPositions',] },],\n        \"offsetX\": [{ type: Input, args: ['cdkConnectedOverlayOffsetX',] },],\n        \"offsetY\": [{ type: Input, args: ['cdkConnectedOverlayOffsetY',] },],\n        \"width\": [{ type: Input, args: ['cdkConnectedOverlayWidth',] },],\n        \"height\": [{ type: Input, args: ['cdkConnectedOverlayHeight',] },],\n        \"minWidth\": [{ type: Input, args: ['cdkConnectedOverlayMinWidth',] },],\n        \"minHeight\": [{ type: Input, args: ['cdkConnectedOverlayMinHeight',] },],\n        \"backdropClass\": [{ type: Input, args: ['cdkConnectedOverlayBackdropClass',] },],\n        \"viewportMargin\": [{ type: Input, args: ['cdkConnectedOverlayViewportMargin',] },],\n        \"scrollStrategy\": [{ type: Input, args: ['cdkConnectedOverlayScrollStrategy',] },],\n        \"open\": [{ type: Input, args: ['cdkConnectedOverlayOpen',] },],\n        \"hasBackdrop\": [{ type: Input, args: ['cdkConnectedOverlayHasBackdrop',] },],\n        \"lockPosition\": [{ type: Input, args: ['cdkConnectedOverlayLockPosition',] },],\n        \"flexibleDiemsions\": [{ type: Input, args: ['cdkConnectedOverlayFlexibleDimensions',] },],\n        \"growAfterOpen\": [{ type: Input, args: ['cdkConnectedOverlayGrowAfterOpen',] },],\n        \"push\": [{ type: Input, args: ['cdkConnectedOverlayPush',] },],\n        \"backdropClick\": [{ type: Output },],\n        \"positionChange\": [{ type: Output },],\n        \"attach\": [{ type: Output },],\n        \"detach\": [{ type: Output },],\n    };\n    return CdkConnectedOverlay;\n}());\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return function () { return overlay.scrollStrategies.reposition(); };\n}\n/**\n * \\@docs-private\n */\nvar /** @type {?} */ CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER = {\n    provide: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar OverlayModule = /** @class */ (function () {\n    function OverlayModule() {\n    }\n    OverlayModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [BidiModule, PortalModule, ScrollDispatchModule],\n                    exports: [CdkConnectedOverlay, CdkOverlayOrigin, ScrollDispatchModule],\n                    declarations: [CdkConnectedOverlay, CdkOverlayOrigin],\n                    providers: [\n                        Overlay,\n                        CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER,\n                    ],\n                },] },\n    ];\n    return OverlayModule;\n}());\n/**\n * @deprecated Use `OverlayModule` instead.\n * \\@deletion-target 7.0.0\n */\nvar /** @type {?} */ OVERLAY_PROVIDERS = [\n    Overlay,\n    OverlayPositionBuilder,\n    OVERLAY_KEYBOARD_DISPATCHER_PROVIDER,\n    VIEWPORT_RULER_PROVIDER,\n    OVERLAY_CONTAINER_PROVIDER,\n    CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER,\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Alternative to OverlayContainer that supports correct displaying of overlay elements in\n * Fullscreen mode\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullScreen\n *\n * Should be provided in the root component.\n */\nvar FullscreenOverlayContainer = /** @class */ (function (_super) {\n    __extends(FullscreenOverlayContainer, _super);\n    function FullscreenOverlayContainer(_document) {\n        return _super.call(this, _document) || this;\n    }\n    /**\n     * @return {?}\n     */\n    FullscreenOverlayContainer.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        _super.prototype.ngOnDestroy.call(this);\n        if (this._fullScreenEventName && this._fullScreenListener) {\n            this._document.removeEventListener(this._fullScreenEventName, this._fullScreenListener);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    FullscreenOverlayContainer.prototype._createContainer = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        _super.prototype._createContainer.call(this);\n        this._adjustParentForFullscreenChange();\n        this._addFullscreenChangeListener(function () { return _this._adjustParentForFullscreenChange(); });\n    };\n    /**\n     * @return {?}\n     */\n    FullscreenOverlayContainer.prototype._adjustParentForFullscreenChange = /**\n     * @return {?}\n     */\n    function () {\n        if (!this._containerElement) {\n            return;\n        }\n        var /** @type {?} */ fullscreenElement = this.getFullscreenElement();\n        var /** @type {?} */ parent = fullscreenElement || this._document.body;\n        parent.appendChild(this._containerElement);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    FullscreenOverlayContainer.prototype._addFullscreenChangeListener = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ eventName = this._getEventName();\n        if (eventName) {\n            if (this._fullScreenListener) {\n                this._document.removeEventListener(eventName, this._fullScreenListener);\n            }\n            this._document.addEventListener(eventName, fn);\n            this._fullScreenListener = fn;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    FullscreenOverlayContainer.prototype._getEventName = /**\n     * @return {?}\n     */\n    function () {\n        if (!this._fullScreenEventName) {\n            if (this._document.fullscreenEnabled) {\n                this._fullScreenEventName = 'fullscreenchange';\n            }\n            else if (this._document.webkitFullscreenEnabled) {\n                this._fullScreenEventName = 'webkitfullscreenchange';\n            }\n            else if ((/** @type {?} */ (this._document)).mozFullScreenEnabled) {\n                this._fullScreenEventName = 'mozfullscreenchange';\n            }\n            else if ((/** @type {?} */ (this._document)).msFullscreenEnabled) {\n                this._fullScreenEventName = 'MSFullscreenChange';\n            }\n        }\n        return this._fullScreenEventName;\n    };\n    /**\n     * When the page is put into fullscreen mode, a specific element is specified.\n     * Only that element and its children are visible when in fullscreen mode.\n     */\n    /**\n     * When the page is put into fullscreen mode, a specific element is specified.\n     * Only that element and its children are visible when in fullscreen mode.\n     * @return {?}\n     */\n    FullscreenOverlayContainer.prototype.getFullscreenElement = /**\n     * When the page is put into fullscreen mode, a specific element is specified.\n     * Only that element and its children are visible when in fullscreen mode.\n     * @return {?}\n     */\n    function () {\n        return this._document.fullscreenElement ||\n            this._document.webkitFullscreenElement ||\n            (/** @type {?} */ (this._document)).mozFullScreenElement ||\n            (/** @type {?} */ (this._document)).msFullscreenElement ||\n            null;\n    };\n    FullscreenOverlayContainer.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    FullscreenOverlayContainer.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] },] },\n    ]; };\n    return FullscreenOverlayContainer;\n}(OverlayContainer));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nexport { Overlay, OverlayContainer, CdkOverlayOrigin, CdkConnectedOverlay, FullscreenOverlayContainer, OverlayRef, OverlayKeyboardDispatcher, OverlayPositionBuilder, GlobalPositionStrategy, ConnectedPositionStrategy, FlexibleConnectedPositionStrategy, OverlayConfig, ConnectionPositionPair, ScrollingVisibility, ConnectedOverlayPositionChange, validateVerticalPosition, validateHorizontalPosition, ScrollStrategyOptions, RepositionScrollStrategy, CloseScrollStrategy, NoopScrollStrategy, BlockScrollStrategy, OverlayModule, OVERLAY_PROVIDERS, OVERLAY_KEYBOARD_DISPATCHER_PROVIDER as ɵg, OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY as ɵf, OVERLAY_CONTAINER_PROVIDER as ɵb, OVERLAY_CONTAINER_PROVIDER_FACTORY as ɵa, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY as ɵc, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER as ɵe, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY as ɵd };\n//# sourceMappingURL=overlay.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Inject, Injectable, Optional, PLATFORM_ID, NgModule, defineInjectable, inject } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n// Whether the current platform supports the V8 Break Iterator. The V8 check\n// is necessary to detect all Blink based browsers.\nvar /** @type {?} */ hasV8BreakIterator = (typeof Intl !== 'undefined' && (/** @type {?} */ (Intl)).v8BreakIterator);\n/**\n * Service to detect the current platform by comparing the userAgent strings and\n * checking browser-specific global properties.\n */\nvar Platform = /** @class */ (function () {\n    /**\n     * @deletion-target v7.0.0 remove optional decorator\n     */\n    function Platform(_platformId) {\n        this._platformId = _platformId;\n        /**\n         * Whether the Angular application is being rendered in the browser.\n         * We want to use the Angular platform check because if the Document is shimmed\n         * without the navigator, the following checks will fail. This is preferred because\n         * sometimes the Document may be shimmed without the user's knowledge or intention\n         */\n        this.isBrowser = this._platformId ?\n            isPlatformBrowser(this._platformId) : typeof document === 'object' && !!document;\n        /**\n         * Whether the current browser is Microsoft Edge.\n         */\n        this.EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent);\n        /**\n         * Whether the current rendering engine is Microsoft Trident.\n         */\n        this.TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent);\n        /**\n         * Whether the current rendering engine is Blink.\n         */\n        this.BLINK = this.isBrowser && (!!((/** @type {?} */ (window)).chrome || hasV8BreakIterator) &&\n            typeof CSS !== 'undefined' && !this.EDGE && !this.TRIDENT);\n        /**\n         * Whether the current rendering engine is WebKit.\n         */\n        this.WEBKIT = this.isBrowser &&\n            /AppleWebKit/i.test(navigator.userAgent) && !this.BLINK && !this.EDGE && !this.TRIDENT;\n        /**\n         * Whether the current platform is Apple iOS.\n         */\n        this.IOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) &&\n            !(/** @type {?} */ (window)).MSStream;\n        /**\n         * Whether the current browser is Firefox.\n         */\n        this.FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);\n        /**\n         * Whether the current platform is Android.\n         */\n        this.ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT;\n        /**\n         * Whether the current browser is Safari.\n         */\n        this.SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;\n    }\n    Platform.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */\n    Platform.ctorParameters = function () { return [\n        { type: Object, decorators: [{ type: Optional }, { type: Inject, args: [PLATFORM_ID,] },] },\n    ]; };\n    /** @nocollapse */ Platform.ngInjectableDef = defineInjectable({ factory: function Platform_Factory() { return new Platform(inject(PLATFORM_ID, 8)); }, token: Platform, providedIn: \"root\" });\n    return Platform;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Cached result of whether the user's browser supports passive event listeners.\n */\nvar /** @type {?} */ supportsPassiveEvents;\n/**\n * Checks whether the user's browser supports passive event listeners.\n * See: https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n * @return {?}\n */\nfunction supportsPassiveEventListeners() {\n    if (supportsPassiveEvents == null && typeof window !== 'undefined') {\n        try {\n            window.addEventListener('test', /** @type {?} */ ((null)), Object.defineProperty({}, 'passive', {\n                get: function () { return supportsPassiveEvents = true; }\n            }));\n        }\n        finally {\n            supportsPassiveEvents = supportsPassiveEvents || false;\n        }\n    }\n    return supportsPassiveEvents;\n}\n/**\n * Cached result Set of input types support by the current browser.\n */\nvar /** @type {?} */ supportedInputTypes;\n/**\n * Types of `<input>` that *might* be supported.\n */\nvar /** @type {?} */ candidateInputTypes = [\n    'color',\n    'button',\n    'checkbox',\n    'date',\n    'datetime-local',\n    'email',\n    'file',\n    'hidden',\n    'image',\n    'month',\n    'number',\n    'password',\n    'radio',\n    'range',\n    'reset',\n    'search',\n    'submit',\n    'tel',\n    'text',\n    'time',\n    'url',\n    'week',\n];\n/**\n * @return {?} The input types supported by this browser.\n */\nfunction getSupportedInputTypes() {\n    // Result is cached.\n    if (supportedInputTypes) {\n        return supportedInputTypes;\n    }\n    // We can't check if an input type is not supported until we're on the browser, so say that\n    // everything is supported when not on the browser. We don't use `Platform` here since it's\n    // just a helper function and can't inject it.\n    if (typeof document !== 'object' || !document) {\n        supportedInputTypes = new Set(candidateInputTypes);\n        return supportedInputTypes;\n    }\n    var /** @type {?} */ featureTestInput = document.createElement('input');\n    supportedInputTypes = new Set(candidateInputTypes.filter(function (value) {\n        featureTestInput.setAttribute('type', value);\n        return featureTestInput.type === value;\n    }));\n    return supportedInputTypes;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar PlatformModule = /** @class */ (function () {\n    function PlatformModule() {\n    }\n    PlatformModule.decorators = [\n        { type: NgModule },\n    ];\n    return PlatformModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nexport { Platform, supportsPassiveEventListeners, getSupportedInputTypes, PlatformModule };\n//# sourceMappingURL=platform.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { __extends } from 'tslib';\nimport { ComponentFactoryResolver, Directive, EventEmitter, NgModule, Output, TemplateRef, ViewContainerRef } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Throws an exception when attempting to attach a null portal to a host.\n * \\@docs-private\n * @return {?}\n */\nfunction throwNullPortalError() {\n    throw Error('Must provide a portal to attach');\n}\n/**\n * Throws an exception when attempting to attach a portal to a host that is already attached.\n * \\@docs-private\n * @return {?}\n */\nfunction throwPortalAlreadyAttachedError() {\n    throw Error('Host already has a portal attached');\n}\n/**\n * Throws an exception when attempting to attach a portal to an already-disposed host.\n * \\@docs-private\n * @return {?}\n */\nfunction throwPortalOutletAlreadyDisposedError() {\n    throw Error('This PortalOutlet has already been disposed');\n}\n/**\n * Throws an exception when attempting to attach an unknown portal type.\n * \\@docs-private\n * @return {?}\n */\nfunction throwUnknownPortalTypeError() {\n    throw Error('Attempting to attach an unknown Portal type. BasePortalOutlet accepts either ' +\n        'a ComponentPortal or a TemplatePortal.');\n}\n/**\n * Throws an exception when attempting to attach a portal to a null host.\n * \\@docs-private\n * @return {?}\n */\nfunction throwNullPortalOutletError() {\n    throw Error('Attempting to attach a portal to a null PortalOutlet');\n}\n/**\n * Throws an exception when attempting to detach a portal that is not attached.\n * \\@docs-private\n * @return {?}\n */\nfunction throwNoPortalAttachedError() {\n    throw Error('Attempting to detach a portal that is not attached to a host');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * A `Portal` is something that you want to render somewhere else.\n * It can be attach to / detached from a `PortalOutlet`.\n * @abstract\n * @template T\n */\nvar  /**\n * A `Portal` is something that you want to render somewhere else.\n * It can be attach to / detached from a `PortalOutlet`.\n * @abstract\n * @template T\n */\nPortal = /** @class */ (function () {\n    function Portal() {\n    }\n    /** Attach this portal to a host. */\n    /**\n     * Attach this portal to a host.\n     * @param {?} host\n     * @return {?}\n     */\n    Portal.prototype.attach = /**\n     * Attach this portal to a host.\n     * @param {?} host\n     * @return {?}\n     */\n    function (host) {\n        if (host == null) {\n            throwNullPortalOutletError();\n        }\n        if (host.hasAttached()) {\n            throwPortalAlreadyAttachedError();\n        }\n        this._attachedHost = host;\n        return /** @type {?} */ (host.attach(this));\n    };\n    /** Detach this portal from its host */\n    /**\n     * Detach this portal from its host\n     * @return {?}\n     */\n    Portal.prototype.detach = /**\n     * Detach this portal from its host\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ host = this._attachedHost;\n        if (host == null) {\n            throwNoPortalAttachedError();\n        }\n        else {\n            this._attachedHost = null;\n            host.detach();\n        }\n    };\n    Object.defineProperty(Portal.prototype, \"isAttached\", {\n        /** Whether this portal is attached to a host. */\n        get: /**\n         * Whether this portal is attached to a host.\n         * @return {?}\n         */\n        function () {\n            return this._attachedHost != null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the PortalOutlet reference without performing `attach()`. This is used directly by\n     * the PortalOutlet when it is performing an `attach()` or `detach()`.\n     */\n    /**\n     * Sets the PortalOutlet reference without performing `attach()`. This is used directly by\n     * the PortalOutlet when it is performing an `attach()` or `detach()`.\n     * @param {?} host\n     * @return {?}\n     */\n    Portal.prototype.setAttachedHost = /**\n     * Sets the PortalOutlet reference without performing `attach()`. This is used directly by\n     * the PortalOutlet when it is performing an `attach()` or `detach()`.\n     * @param {?} host\n     * @return {?}\n     */\n    function (host) {\n        this._attachedHost = host;\n    };\n    return Portal;\n}());\n/**\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\n * @template T\n */\nvar  /**\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\n * @template T\n */\nComponentPortal = /** @class */ (function (_super) {\n    __extends(ComponentPortal, _super);\n    function ComponentPortal(component, viewContainerRef, injector) {\n        var _this = _super.call(this) || this;\n        _this.component = component;\n        _this.viewContainerRef = viewContainerRef;\n        _this.injector = injector;\n        return _this;\n    }\n    return ComponentPortal;\n}(Portal));\n/**\n * A `TemplatePortal` is a portal that represents some embedded template (TemplateRef).\n * @template C\n */\nvar  /**\n * A `TemplatePortal` is a portal that represents some embedded template (TemplateRef).\n * @template C\n */\nTemplatePortal = /** @class */ (function (_super) {\n    __extends(TemplatePortal, _super);\n    function TemplatePortal(template, viewContainerRef, context) {\n        var _this = _super.call(this) || this;\n        _this.templateRef = template;\n        _this.viewContainerRef = viewContainerRef;\n        _this.context = context;\n        return _this;\n    }\n    Object.defineProperty(TemplatePortal.prototype, \"origin\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.templateRef.elementRef;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Attach the the portal to the provided `PortalOutlet`.\n     * When a context is provided it will override the `context` property of the `TemplatePortal`\n     * instance.\n     */\n    /**\n     * Attach the the portal to the provided `PortalOutlet`.\n     * When a context is provided it will override the `context` property of the `TemplatePortal`\n     * instance.\n     * @param {?} host\n     * @param {?=} context\n     * @return {?}\n     */\n    TemplatePortal.prototype.attach = /**\n     * Attach the the portal to the provided `PortalOutlet`.\n     * When a context is provided it will override the `context` property of the `TemplatePortal`\n     * instance.\n     * @param {?} host\n     * @param {?=} context\n     * @return {?}\n     */\n    function (host, context) {\n        if (context === void 0) { context = this.context; }\n        this.context = context;\n        return _super.prototype.attach.call(this, host);\n    };\n    /**\n     * @return {?}\n     */\n    TemplatePortal.prototype.detach = /**\n     * @return {?}\n     */\n    function () {\n        this.context = undefined;\n        return _super.prototype.detach.call(this);\n    };\n    return TemplatePortal;\n}(Portal));\n/**\n * Partial implementation of PortalOutlet that handles attaching\n * ComponentPortal and TemplatePortal.\n * @abstract\n */\nvar  /**\n * Partial implementation of PortalOutlet that handles attaching\n * ComponentPortal and TemplatePortal.\n * @abstract\n */\nBasePortalOutlet = /** @class */ (function () {\n    function BasePortalOutlet() {\n        /**\n         * Whether this host has already been permanently disposed.\n         */\n        this._isDisposed = false;\n    }\n    /** Whether this host has an attached portal. */\n    /**\n     * Whether this host has an attached portal.\n     * @return {?}\n     */\n    BasePortalOutlet.prototype.hasAttached = /**\n     * Whether this host has an attached portal.\n     * @return {?}\n     */\n    function () {\n        return !!this._attachedPortal;\n    };\n    /** Attaches a portal. */\n    /**\n     * Attaches a portal.\n     * @param {?} portal\n     * @return {?}\n     */\n    BasePortalOutlet.prototype.attach = /**\n     * Attaches a portal.\n     * @param {?} portal\n     * @return {?}\n     */\n    function (portal) {\n        if (!portal) {\n            throwNullPortalError();\n        }\n        if (this.hasAttached()) {\n            throwPortalAlreadyAttachedError();\n        }\n        if (this._isDisposed) {\n            throwPortalOutletAlreadyDisposedError();\n        }\n        if (portal instanceof ComponentPortal) {\n            this._attachedPortal = portal;\n            return this.attachComponentPortal(portal);\n        }\n        else if (portal instanceof TemplatePortal) {\n            this._attachedPortal = portal;\n            return this.attachTemplatePortal(portal);\n        }\n        throwUnknownPortalTypeError();\n    };\n    /** Detaches a previously attached portal. */\n    /**\n     * Detaches a previously attached portal.\n     * @return {?}\n     */\n    BasePortalOutlet.prototype.detach = /**\n     * Detaches a previously attached portal.\n     * @return {?}\n     */\n    function () {\n        if (this._attachedPortal) {\n            this._attachedPortal.setAttachedHost(null);\n            this._attachedPortal = null;\n        }\n        this._invokeDisposeFn();\n    };\n    /** Permanently dispose of this portal host. */\n    /**\n     * Permanently dispose of this portal host.\n     * @return {?}\n     */\n    BasePortalOutlet.prototype.dispose = /**\n     * Permanently dispose of this portal host.\n     * @return {?}\n     */\n    function () {\n        if (this.hasAttached()) {\n            this.detach();\n        }\n        this._invokeDisposeFn();\n        this._isDisposed = true;\n    };\n    /** @docs-private */\n    /**\n     * \\@docs-private\n     * @param {?} fn\n     * @return {?}\n     */\n    BasePortalOutlet.prototype.setDisposeFn = /**\n     * \\@docs-private\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        this._disposeFn = fn;\n    };\n    /**\n     * @return {?}\n     */\n    BasePortalOutlet.prototype._invokeDisposeFn = /**\n     * @return {?}\n     */\n    function () {\n        if (this._disposeFn) {\n            this._disposeFn();\n            this._disposeFn = null;\n        }\n    };\n    return BasePortalOutlet;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * A PortalOutlet for attaching portals to an arbitrary DOM element outside of the Angular\n * application context.\n */\nvar  /**\n * A PortalOutlet for attaching portals to an arbitrary DOM element outside of the Angular\n * application context.\n */\nDomPortalOutlet = /** @class */ (function (_super) {\n    __extends(DomPortalOutlet, _super);\n    function DomPortalOutlet(outletElement, _componentFactoryResolver, _appRef, _defaultInjector) {\n        var _this = _super.call(this) || this;\n        _this.outletElement = outletElement;\n        _this._componentFactoryResolver = _componentFactoryResolver;\n        _this._appRef = _appRef;\n        _this._defaultInjector = _defaultInjector;\n        return _this;\n    }\n    /**\n     * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\n     * @param portal Portal to be attached\n     * @returns Reference to the created component.\n     */\n    /**\n     * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\n     * @template T\n     * @param {?} portal Portal to be attached\n     * @return {?} Reference to the created component.\n     */\n    DomPortalOutlet.prototype.attachComponentPortal = /**\n     * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\n     * @template T\n     * @param {?} portal Portal to be attached\n     * @return {?} Reference to the created component.\n     */\n    function (portal) {\n        var _this = this;\n        var /** @type {?} */ componentFactory = this._componentFactoryResolver.resolveComponentFactory(portal.component);\n        var /** @type {?} */ componentRef;\n        // If the portal specifies a ViewContainerRef, we will use that as the attachment point\n        // for the component (in terms of Angular's component tree, not rendering).\n        // When the ViewContainerRef is missing, we use the factory to create the component directly\n        // and then manually attach the view to the application.\n        if (portal.viewContainerRef) {\n            componentRef = portal.viewContainerRef.createComponent(componentFactory, portal.viewContainerRef.length, portal.injector || portal.viewContainerRef.parentInjector);\n            this.setDisposeFn(function () { return componentRef.destroy(); });\n        }\n        else {\n            componentRef = componentFactory.create(portal.injector || this._defaultInjector);\n            this._appRef.attachView(componentRef.hostView);\n            this.setDisposeFn(function () {\n                _this._appRef.detachView(componentRef.hostView);\n                componentRef.destroy();\n            });\n        }\n        // At this point the component has been instantiated, so we move it to the location in the DOM\n        // where we want it to be rendered.\n        this.outletElement.appendChild(this._getComponentRootNode(componentRef));\n        return componentRef;\n    };\n    /**\n     * Attaches a template portal to the DOM as an embedded view.\n     * @param portal Portal to be attached.\n     * @returns Reference to the created embedded view.\n     */\n    /**\n     * Attaches a template portal to the DOM as an embedded view.\n     * @template C\n     * @param {?} portal Portal to be attached.\n     * @return {?} Reference to the created embedded view.\n     */\n    DomPortalOutlet.prototype.attachTemplatePortal = /**\n     * Attaches a template portal to the DOM as an embedded view.\n     * @template C\n     * @param {?} portal Portal to be attached.\n     * @return {?} Reference to the created embedded view.\n     */\n    function (portal) {\n        var _this = this;\n        var /** @type {?} */ viewContainer = portal.viewContainerRef;\n        var /** @type {?} */ viewRef = viewContainer.createEmbeddedView(portal.templateRef, portal.context);\n        viewRef.detectChanges();\n        // The method `createEmbeddedView` will add the view as a child of the viewContainer.\n        // But for the DomPortalOutlet the view can be added everywhere in the DOM\n        // (e.g Overlay Container) To move the view to the specified host element. We just\n        // re-append the existing root nodes.\n        viewRef.rootNodes.forEach(function (rootNode) { return _this.outletElement.appendChild(rootNode); });\n        this.setDisposeFn((function () {\n            var /** @type {?} */ index = viewContainer.indexOf(viewRef);\n            if (index !== -1) {\n                viewContainer.remove(index);\n            }\n        }));\n        // TODO(jelbourn): Return locals from view.\n        return viewRef;\n    };\n    /**\n     * Clears out a portal from the DOM.\n     */\n    /**\n     * Clears out a portal from the DOM.\n     * @return {?}\n     */\n    DomPortalOutlet.prototype.dispose = /**\n     * Clears out a portal from the DOM.\n     * @return {?}\n     */\n    function () {\n        _super.prototype.dispose.call(this);\n        if (this.outletElement.parentNode != null) {\n            this.outletElement.parentNode.removeChild(this.outletElement);\n        }\n    };\n    /**\n     * Gets the root HTMLElement for an instantiated component.\n     * @param {?} componentRef\n     * @return {?}\n     */\n    DomPortalOutlet.prototype._getComponentRootNode = /**\n     * Gets the root HTMLElement for an instantiated component.\n     * @param {?} componentRef\n     * @return {?}\n     */\n    function (componentRef) {\n        return /** @type {?} */ ((/** @type {?} */ (componentRef.hostView)).rootNodes[0]);\n    };\n    return DomPortalOutlet;\n}(BasePortalOutlet));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Directive version of a `TemplatePortal`. Because the directive *is* a TemplatePortal,\n * the directive instance itself can be attached to a host, enabling declarative use of portals.\n */\nvar CdkPortal = /** @class */ (function (_super) {\n    __extends(CdkPortal, _super);\n    function CdkPortal(templateRef, viewContainerRef) {\n        return _super.call(this, templateRef, viewContainerRef) || this;\n    }\n    CdkPortal.decorators = [\n        { type: Directive, args: [{\n                    selector: '[cdk-portal], [cdkPortal], [portal]',\n                    exportAs: 'cdkPortal',\n                },] },\n    ];\n    /** @nocollapse */\n    CdkPortal.ctorParameters = function () { return [\n        { type: TemplateRef, },\n        { type: ViewContainerRef, },\n    ]; };\n    return CdkPortal;\n}(TemplatePortal));\n/**\n * Directive version of a PortalOutlet. Because the directive *is* a PortalOutlet, portals can be\n * directly attached to it, enabling declarative use.\n *\n * Usage:\n * `<ng-template [cdkPortalOutlet]=\"greeting\"></ng-template>`\n */\nvar CdkPortalOutlet = /** @class */ (function (_super) {\n    __extends(CdkPortalOutlet, _super);\n    function CdkPortalOutlet(_componentFactoryResolver, _viewContainerRef) {\n        var _this = _super.call(this) || this;\n        _this._componentFactoryResolver = _componentFactoryResolver;\n        _this._viewContainerRef = _viewContainerRef;\n        /**\n         * Whether the portal component is initialized.\n         */\n        _this._isInitialized = false;\n        _this.attached = new EventEmitter();\n        return _this;\n    }\n    Object.defineProperty(CdkPortalOutlet.prototype, \"portal\", {\n        /** Portal associated with the Portal outlet. */\n        get: /**\n         * Portal associated with the Portal outlet.\n         * @return {?}\n         */\n        function () {\n            return this._attachedPortal;\n        },\n        set: /**\n         * @param {?} portal\n         * @return {?}\n         */\n        function (portal) {\n            // Ignore the cases where the `portal` is set to a falsy value before the lifecycle hooks have\n            // run. This handles the cases where the user might do something like `<div cdkPortalOutlet>`\n            // and attach a portal programmatically in the parent component. When Angular does the first CD\n            // round, it will fire the setter with empty string, causing the user's content to be cleared.\n            if (this.hasAttached() && !portal && !this._isInitialized) {\n                return;\n            }\n            if (this.hasAttached()) {\n                _super.prototype.detach.call(this);\n            }\n            if (portal) {\n                _super.prototype.attach.call(this, portal);\n            }\n            this._attachedPortal = portal;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkPortalOutlet.prototype, \"attachedRef\", {\n        /** Component or view reference that is attached to the portal. */\n        get: /**\n         * Component or view reference that is attached to the portal.\n         * @return {?}\n         */\n        function () {\n            return this._attachedRef;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    CdkPortalOutlet.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        this._isInitialized = true;\n    };\n    /**\n     * @return {?}\n     */\n    CdkPortalOutlet.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        _super.prototype.dispose.call(this);\n        this._attachedPortal = null;\n        this._attachedRef = null;\n    };\n    /**\n     * Attach the given ComponentPortal to this PortalOutlet using the ComponentFactoryResolver.\n     *\n     * @param portal Portal to be attached to the portal outlet.\n     * @returns Reference to the created component.\n     */\n    /**\n     * Attach the given ComponentPortal to this PortalOutlet using the ComponentFactoryResolver.\n     *\n     * @template T\n     * @param {?} portal Portal to be attached to the portal outlet.\n     * @return {?} Reference to the created component.\n     */\n    CdkPortalOutlet.prototype.attachComponentPortal = /**\n     * Attach the given ComponentPortal to this PortalOutlet using the ComponentFactoryResolver.\n     *\n     * @template T\n     * @param {?} portal Portal to be attached to the portal outlet.\n     * @return {?} Reference to the created component.\n     */\n    function (portal) {\n        portal.setAttachedHost(this);\n        // If the portal specifies an origin, use that as the logical location of the component\n        // in the application tree. Otherwise use the location of this PortalOutlet.\n        var /** @type {?} */ viewContainerRef = portal.viewContainerRef != null ?\n            portal.viewContainerRef :\n            this._viewContainerRef;\n        var /** @type {?} */ componentFactory = this._componentFactoryResolver.resolveComponentFactory(portal.component);\n        var /** @type {?} */ ref = viewContainerRef.createComponent(componentFactory, viewContainerRef.length, portal.injector || viewContainerRef.parentInjector);\n        _super.prototype.setDisposeFn.call(this, function () { return ref.destroy(); });\n        this._attachedPortal = portal;\n        this._attachedRef = ref;\n        this.attached.emit(ref);\n        return ref;\n    };\n    /**\n     * Attach the given TemplatePortal to this PortlHost as an embedded View.\n     * @param portal Portal to be attached.\n     * @returns Reference to the created embedded view.\n     */\n    /**\n     * Attach the given TemplatePortal to this PortlHost as an embedded View.\n     * @template C\n     * @param {?} portal Portal to be attached.\n     * @return {?} Reference to the created embedded view.\n     */\n    CdkPortalOutlet.prototype.attachTemplatePortal = /**\n     * Attach the given TemplatePortal to this PortlHost as an embedded View.\n     * @template C\n     * @param {?} portal Portal to be attached.\n     * @return {?} Reference to the created embedded view.\n     */\n    function (portal) {\n        var _this = this;\n        portal.setAttachedHost(this);\n        var /** @type {?} */ viewRef = this._viewContainerRef.createEmbeddedView(portal.templateRef, portal.context);\n        _super.prototype.setDisposeFn.call(this, function () { return _this._viewContainerRef.clear(); });\n        this._attachedPortal = portal;\n        this._attachedRef = viewRef;\n        this.attached.emit(viewRef);\n        return viewRef;\n    };\n    CdkPortalOutlet.decorators = [\n        { type: Directive, args: [{\n                    selector: '[cdkPortalOutlet], [cdkPortalHost], [portalHost]',\n                    exportAs: 'cdkPortalOutlet, cdkPortalHost',\n                    inputs: ['portal: cdkPortalOutlet']\n                },] },\n    ];\n    /** @nocollapse */\n    CdkPortalOutlet.ctorParameters = function () { return [\n        { type: ComponentFactoryResolver, },\n        { type: ViewContainerRef, },\n    ]; };\n    CdkPortalOutlet.propDecorators = {\n        \"attached\": [{ type: Output },],\n    };\n    return CdkPortalOutlet;\n}(BasePortalOutlet));\nvar PortalModule = /** @class */ (function () {\n    function PortalModule() {\n    }\n    PortalModule.decorators = [\n        { type: NgModule, args: [{\n                    exports: [CdkPortal, CdkPortalOutlet],\n                    declarations: [CdkPortal, CdkPortalOutlet],\n                },] },\n    ];\n    return PortalModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Custom injector to be used when providing custom\n * injection tokens to components inside a portal.\n * \\@docs-private\n */\nvar  /**\n * Custom injector to be used when providing custom\n * injection tokens to components inside a portal.\n * \\@docs-private\n */\nPortalInjector = /** @class */ (function () {\n    function PortalInjector(_parentInjector, _customTokens) {\n        this._parentInjector = _parentInjector;\n        this._customTokens = _customTokens;\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    PortalInjector.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        var /** @type {?} */ value = this._customTokens.get(token);\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n        return this._parentInjector.get(token, notFoundValue);\n    };\n    return PortalInjector;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nexport { DomPortalOutlet as DomPortalHost, CdkPortalOutlet as PortalHostDirective, CdkPortal as TemplatePortalDirective, BasePortalOutlet as BasePortalHost, Portal, ComponentPortal, TemplatePortal, BasePortalOutlet, DomPortalOutlet, CdkPortal, CdkPortalOutlet, PortalModule, PortalInjector };\n//# sourceMappingURL=portal.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Platform, PlatformModule } from '@angular/cdk/platform';\nimport { Injectable, NgZone, Optional, SkipSelf, Directive, ElementRef, NgModule, defineInjectable, inject } from '@angular/core';\nimport { fromEvent, of, Subject, Observable, merge } from 'rxjs';\nimport { auditTime, filter } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Time in ms to throttle the scrolling events by default.\n */\nvar /** @type {?} */ DEFAULT_SCROLL_TIME = 20;\n/**\n * Service contained all registered Scrollable references and emits an event when any one of the\n * Scrollable references emit a scrolled event.\n */\nvar ScrollDispatcher = /** @class */ (function () {\n    function ScrollDispatcher(_ngZone, _platform) {\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        /**\n         * Subject for notifying that a registered scrollable reference element has been scrolled.\n         */\n        this._scrolled = new Subject();\n        /**\n         * Keeps track of the global `scroll` and `resize` subscriptions.\n         */\n        this._globalSubscription = null;\n        /**\n         * Keeps track of the amount of subscriptions to `scrolled`. Used for cleaning up afterwards.\n         */\n        this._scrolledCount = 0;\n        /**\n         * Map of all the scrollable references that are registered with the service and their\n         * scroll event subscriptions.\n         */\n        this.scrollContainers = new Map();\n    }\n    /**\n     * Registers a scrollable instance with the service and listens for its scrolled events. When the\n     * scrollable is scrolled, the service emits the event to its scrolled observable.\n     * @param scrollable Scrollable instance to be registered.\n     */\n    /**\n     * Registers a scrollable instance with the service and listens for its scrolled events. When the\n     * scrollable is scrolled, the service emits the event to its scrolled observable.\n     * @param {?} scrollable Scrollable instance to be registered.\n     * @return {?}\n     */\n    ScrollDispatcher.prototype.register = /**\n     * Registers a scrollable instance with the service and listens for its scrolled events. When the\n     * scrollable is scrolled, the service emits the event to its scrolled observable.\n     * @param {?} scrollable Scrollable instance to be registered.\n     * @return {?}\n     */\n    function (scrollable) {\n        var _this = this;\n        var /** @type {?} */ scrollSubscription = scrollable.elementScrolled()\n            .subscribe(function () { return _this._scrolled.next(scrollable); });\n        this.scrollContainers.set(scrollable, scrollSubscription);\n    };\n    /**\n     * Deregisters a Scrollable reference and unsubscribes from its scroll event observable.\n     * @param scrollable Scrollable instance to be deregistered.\n     */\n    /**\n     * Deregisters a Scrollable reference and unsubscribes from its scroll event observable.\n     * @param {?} scrollable Scrollable instance to be deregistered.\n     * @return {?}\n     */\n    ScrollDispatcher.prototype.deregister = /**\n     * Deregisters a Scrollable reference and unsubscribes from its scroll event observable.\n     * @param {?} scrollable Scrollable instance to be deregistered.\n     * @return {?}\n     */\n    function (scrollable) {\n        var /** @type {?} */ scrollableReference = this.scrollContainers.get(scrollable);\n        if (scrollableReference) {\n            scrollableReference.unsubscribe();\n            this.scrollContainers.delete(scrollable);\n        }\n    };\n    /**\n     * Returns an observable that emits an event whenever any of the registered Scrollable\n     * references (or window, document, or body) fire a scrolled event. Can provide a time in ms\n     * to override the default \"throttle\" time.\n     *\n     * **Note:** in order to avoid hitting change detection for every scroll event,\n     * all of the events emitted from this stream will be run outside the Angular zone.\n     * If you need to update any data bindings as a result of a scroll event, you have\n     * to run the callback using `NgZone.run`.\n     */\n    /**\n     * Returns an observable that emits an event whenever any of the registered Scrollable\n     * references (or window, document, or body) fire a scrolled event. Can provide a time in ms\n     * to override the default \"throttle\" time.\n     *\n     * **Note:** in order to avoid hitting change detection for every scroll event,\n     * all of the events emitted from this stream will be run outside the Angular zone.\n     * If you need to update any data bindings as a result of a scroll event, you have\n     * to run the callback using `NgZone.run`.\n     * @param {?=} auditTimeInMs\n     * @return {?}\n     */\n    ScrollDispatcher.prototype.scrolled = /**\n     * Returns an observable that emits an event whenever any of the registered Scrollable\n     * references (or window, document, or body) fire a scrolled event. Can provide a time in ms\n     * to override the default \"throttle\" time.\n     *\n     * **Note:** in order to avoid hitting change detection for every scroll event,\n     * all of the events emitted from this stream will be run outside the Angular zone.\n     * If you need to update any data bindings as a result of a scroll event, you have\n     * to run the callback using `NgZone.run`.\n     * @param {?=} auditTimeInMs\n     * @return {?}\n     */\n    function (auditTimeInMs) {\n        var _this = this;\n        if (auditTimeInMs === void 0) { auditTimeInMs = DEFAULT_SCROLL_TIME; }\n        return this._platform.isBrowser ? Observable.create(function (observer) {\n            if (!_this._globalSubscription) {\n                _this._addGlobalListener();\n            }\n            // In the case of a 0ms delay, use an observable without auditTime\n            // since it does add a perceptible delay in processing overhead.\n            var /** @type {?} */ subscription = auditTimeInMs > 0 ?\n                _this._scrolled.pipe(auditTime(auditTimeInMs)).subscribe(observer) :\n                _this._scrolled.subscribe(observer);\n            _this._scrolledCount++;\n            return function () {\n                subscription.unsubscribe();\n                _this._scrolledCount--;\n                if (!_this._scrolledCount) {\n                    _this._removeGlobalListener();\n                }\n            };\n        }) : of();\n    };\n    /**\n     * @return {?}\n     */\n    ScrollDispatcher.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._removeGlobalListener();\n        this.scrollContainers.forEach(function (_, container) { return _this.deregister(container); });\n        this._scrolled.complete();\n    };\n    /**\n     * Returns an observable that emits whenever any of the\n     * scrollable ancestors of an element are scrolled.\n     * @param elementRef Element whose ancestors to listen for.\n     * @param auditTimeInMs Time to throttle the scroll events.\n     */\n    /**\n     * Returns an observable that emits whenever any of the\n     * scrollable ancestors of an element are scrolled.\n     * @param {?} elementRef Element whose ancestors to listen for.\n     * @param {?=} auditTimeInMs Time to throttle the scroll events.\n     * @return {?}\n     */\n    ScrollDispatcher.prototype.ancestorScrolled = /**\n     * Returns an observable that emits whenever any of the\n     * scrollable ancestors of an element are scrolled.\n     * @param {?} elementRef Element whose ancestors to listen for.\n     * @param {?=} auditTimeInMs Time to throttle the scroll events.\n     * @return {?}\n     */\n    function (elementRef, auditTimeInMs) {\n        var /** @type {?} */ ancestors = this.getAncestorScrollContainers(elementRef);\n        return this.scrolled(auditTimeInMs).pipe(filter(function (target) {\n            return !target || ancestors.indexOf(target) > -1;\n        }));\n    };\n    /** Returns all registered Scrollables that contain the provided element. */\n    /**\n     * Returns all registered Scrollables that contain the provided element.\n     * @param {?} elementRef\n     * @return {?}\n     */\n    ScrollDispatcher.prototype.getAncestorScrollContainers = /**\n     * Returns all registered Scrollables that contain the provided element.\n     * @param {?} elementRef\n     * @return {?}\n     */\n    function (elementRef) {\n        var _this = this;\n        var /** @type {?} */ scrollingContainers = [];\n        this.scrollContainers.forEach(function (_subscription, scrollable) {\n            if (_this._scrollableContainsElement(scrollable, elementRef)) {\n                scrollingContainers.push(scrollable);\n            }\n        });\n        return scrollingContainers;\n    };\n    /**\n     * Returns true if the element is contained within the provided Scrollable.\n     * @param {?} scrollable\n     * @param {?} elementRef\n     * @return {?}\n     */\n    ScrollDispatcher.prototype._scrollableContainsElement = /**\n     * Returns true if the element is contained within the provided Scrollable.\n     * @param {?} scrollable\n     * @param {?} elementRef\n     * @return {?}\n     */\n    function (scrollable, elementRef) {\n        var /** @type {?} */ element = elementRef.nativeElement;\n        var /** @type {?} */ scrollableElement = scrollable.getElementRef().nativeElement;\n        // Traverse through the element parents until we reach null, checking if any of the elements\n        // are the scrollable's element.\n        do {\n            if (element == scrollableElement) {\n                return true;\n            }\n        } while (element = element.parentElement);\n        return false;\n    };\n    /**\n     * Sets up the global scroll listeners.\n     * @return {?}\n     */\n    ScrollDispatcher.prototype._addGlobalListener = /**\n     * Sets up the global scroll listeners.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._globalSubscription = this._ngZone.runOutsideAngular(function () {\n            return fromEvent(window.document, 'scroll').subscribe(function () { return _this._scrolled.next(); });\n        });\n    };\n    /**\n     * Cleans up the global scroll listener.\n     * @return {?}\n     */\n    ScrollDispatcher.prototype._removeGlobalListener = /**\n     * Cleans up the global scroll listener.\n     * @return {?}\n     */\n    function () {\n        if (this._globalSubscription) {\n            this._globalSubscription.unsubscribe();\n            this._globalSubscription = null;\n        }\n    };\n    ScrollDispatcher.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */\n    ScrollDispatcher.ctorParameters = function () { return [\n        { type: NgZone, },\n        { type: Platform, },\n    ]; };\n    /** @nocollapse */ ScrollDispatcher.ngInjectableDef = defineInjectable({ factory: function ScrollDispatcher_Factory() { return new ScrollDispatcher(inject(NgZone), inject(Platform)); }, token: ScrollDispatcher, providedIn: \"root\" });\n    return ScrollDispatcher;\n}());\n/**\n * \\@docs-private \\@deprecated \\@deletion-target 7.0.0\n * @param {?} parentDispatcher\n * @param {?} ngZone\n * @param {?} platform\n * @return {?}\n */\nfunction SCROLL_DISPATCHER_PROVIDER_FACTORY(parentDispatcher, ngZone, platform) {\n    return parentDispatcher || new ScrollDispatcher(ngZone, platform);\n}\n/**\n * \\@docs-private \\@deprecated \\@deletion-target 7.0.0\n */\nvar /** @type {?} */ SCROLL_DISPATCHER_PROVIDER = {\n    // If there is already a ScrollDispatcher available, use that. Otherwise, provide a new one.\n    provide: ScrollDispatcher,\n    deps: [[new Optional(), new SkipSelf(), ScrollDispatcher], NgZone, Platform],\n    useFactory: SCROLL_DISPATCHER_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Sends an event when the directive's element is scrolled. Registers itself with the\n * ScrollDispatcher service to include itself as part of its collection of scrolling events that it\n * can be listened to through the service.\n */\nvar CdkScrollable = /** @class */ (function () {\n    function CdkScrollable(_elementRef, _scroll, _ngZone) {\n        var _this = this;\n        this._elementRef = _elementRef;\n        this._scroll = _scroll;\n        this._ngZone = _ngZone;\n        this._elementScrolled = new Subject();\n        this._scrollListener = function (event) { return _this._elementScrolled.next(event); };\n    }\n    /**\n     * @return {?}\n     */\n    CdkScrollable.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._ngZone.runOutsideAngular(function () {\n            _this.getElementRef().nativeElement.addEventListener('scroll', _this._scrollListener);\n        });\n        this._scroll.register(this);\n    };\n    /**\n     * @return {?}\n     */\n    CdkScrollable.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._scroll.deregister(this);\n        if (this._scrollListener) {\n            this.getElementRef().nativeElement.removeEventListener('scroll', this._scrollListener);\n        }\n        this._elementScrolled.complete();\n    };\n    /**\n     * Returns observable that emits when a scroll event is fired on the host element.\n     */\n    /**\n     * Returns observable that emits when a scroll event is fired on the host element.\n     * @return {?}\n     */\n    CdkScrollable.prototype.elementScrolled = /**\n     * Returns observable that emits when a scroll event is fired on the host element.\n     * @return {?}\n     */\n    function () {\n        return this._elementScrolled.asObservable();\n    };\n    /**\n     * @return {?}\n     */\n    CdkScrollable.prototype.getElementRef = /**\n     * @return {?}\n     */\n    function () {\n        return this._elementRef;\n    };\n    CdkScrollable.decorators = [\n        { type: Directive, args: [{\n                    selector: '[cdk-scrollable], [cdkScrollable]'\n                },] },\n    ];\n    /** @nocollapse */\n    CdkScrollable.ctorParameters = function () { return [\n        { type: ElementRef, },\n        { type: ScrollDispatcher, },\n        { type: NgZone, },\n    ]; };\n    return CdkScrollable;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Time in ms to throttle the resize events by default.\n */\nvar /** @type {?} */ DEFAULT_RESIZE_TIME = 20;\n/**\n * Simple utility for getting the bounds of the browser viewport.\n * \\@docs-private\n */\nvar ViewportRuler = /** @class */ (function () {\n    function ViewportRuler(_platform, ngZone) {\n        var _this = this;\n        this._platform = _platform;\n        this._change = _platform.isBrowser ? ngZone.runOutsideAngular(function () {\n            return merge(fromEvent(window, 'resize'), fromEvent(window, 'orientationchange'));\n        }) : of();\n        this._invalidateCache = this.change().subscribe(function () { return _this._updateViewportSize(); });\n    }\n    /**\n     * @return {?}\n     */\n    ViewportRuler.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._invalidateCache.unsubscribe();\n    };\n    /** Returns the viewport's width and height. */\n    /**\n     * Returns the viewport's width and height.\n     * @return {?}\n     */\n    ViewportRuler.prototype.getViewportSize = /**\n     * Returns the viewport's width and height.\n     * @return {?}\n     */\n    function () {\n        if (!this._viewportSize) {\n            this._updateViewportSize();\n        }\n        var /** @type {?} */ output = { width: this._viewportSize.width, height: this._viewportSize.height };\n        // If we're not on a browser, don't cache the size since it'll be mocked out anyway.\n        if (!this._platform.isBrowser) {\n            this._viewportSize = /** @type {?} */ ((null));\n        }\n        return output;\n    };\n    /** Gets a ClientRect for the viewport's bounds. */\n    /**\n     * Gets a ClientRect for the viewport's bounds.\n     * @return {?}\n     */\n    ViewportRuler.prototype.getViewportRect = /**\n     * Gets a ClientRect for the viewport's bounds.\n     * @return {?}\n     */\n    function () {\n        // Use the document element's bounding rect rather than the window scroll properties\n        // (e.g. pageYOffset, scrollY) due to in issue in Chrome and IE where window scroll\n        // properties and client coordinates (boundingClientRect, clientX/Y, etc.) are in different\n        // conceptual viewports. Under most circumstances these viewports are equivalent, but they\n        // can disagree when the page is pinch-zoomed (on devices that support touch).\n        // See https://bugs.chromium.org/p/chromium/issues/detail?id=489206#c4\n        // We use the documentElement instead of the body because, by default (without a css reset)\n        // browsers typically give the document body an 8px margin, which is not included in\n        // getBoundingClientRect().\n        var /** @type {?} */ scrollPosition = this.getViewportScrollPosition();\n        var _a = this.getViewportSize(), width = _a.width, height = _a.height;\n        return {\n            top: scrollPosition.top,\n            left: scrollPosition.left,\n            bottom: scrollPosition.top + height,\n            right: scrollPosition.left + width,\n            height: height,\n            width: width,\n        };\n    };\n    /** Gets the (top, left) scroll position of the viewport. */\n    /**\n     * Gets the (top, left) scroll position of the viewport.\n     * @return {?}\n     */\n    ViewportRuler.prototype.getViewportScrollPosition = /**\n     * Gets the (top, left) scroll position of the viewport.\n     * @return {?}\n     */\n    function () {\n        // While we can get a reference to the fake document\n        // during SSR, it doesn't have getBoundingClientRect.\n        if (!this._platform.isBrowser) {\n            return { top: 0, left: 0 };\n        }\n        // The top-left-corner of the viewport is determined by the scroll position of the document\n        // body, normally just (scrollLeft, scrollTop). However, Chrome and Firefox disagree about\n        // whether `document.body` or `document.documentElement` is the scrolled element, so reading\n        // `scrollTop` and `scrollLeft` is inconsistent. However, using the bounding rect of\n        // `document.documentElement` works consistently, where the `top` and `left` values will\n        // equal negative the scroll position.\n        var /** @type {?} */ documentRect = document.documentElement.getBoundingClientRect();\n        var /** @type {?} */ top = -documentRect.top || document.body.scrollTop || window.scrollY ||\n            document.documentElement.scrollTop || 0;\n        var /** @type {?} */ left = -documentRect.left || document.body.scrollLeft || window.scrollX ||\n            document.documentElement.scrollLeft || 0;\n        return { top: top, left: left };\n    };\n    /**\n     * Returns a stream that emits whenever the size of the viewport changes.\n     * @param throttleTime Time in milliseconds to throttle the stream.\n     */\n    /**\n     * Returns a stream that emits whenever the size of the viewport changes.\n     * @param {?=} throttleTime Time in milliseconds to throttle the stream.\n     * @return {?}\n     */\n    ViewportRuler.prototype.change = /**\n     * Returns a stream that emits whenever the size of the viewport changes.\n     * @param {?=} throttleTime Time in milliseconds to throttle the stream.\n     * @return {?}\n     */\n    function (throttleTime) {\n        if (throttleTime === void 0) { throttleTime = DEFAULT_RESIZE_TIME; }\n        return throttleTime > 0 ? this._change.pipe(auditTime(throttleTime)) : this._change;\n    };\n    /**\n     * Updates the cached viewport size.\n     * @return {?}\n     */\n    ViewportRuler.prototype._updateViewportSize = /**\n     * Updates the cached viewport size.\n     * @return {?}\n     */\n    function () {\n        this._viewportSize = this._platform.isBrowser ?\n            { width: window.innerWidth, height: window.innerHeight } :\n            { width: 0, height: 0 };\n    };\n    ViewportRuler.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */\n    ViewportRuler.ctorParameters = function () { return [\n        { type: Platform, },\n        { type: NgZone, },\n    ]; };\n    /** @nocollapse */ ViewportRuler.ngInjectableDef = defineInjectable({ factory: function ViewportRuler_Factory() { return new ViewportRuler(inject(Platform), inject(NgZone)); }, token: ViewportRuler, providedIn: \"root\" });\n    return ViewportRuler;\n}());\n/**\n * \\@docs-private \\@deprecated \\@deletion-target 7.0.0\n * @param {?} parentRuler\n * @param {?} platform\n * @param {?} ngZone\n * @return {?}\n */\nfunction VIEWPORT_RULER_PROVIDER_FACTORY(parentRuler, platform, ngZone) {\n    return parentRuler || new ViewportRuler(platform, ngZone);\n}\n/**\n * \\@docs-private \\@deprecated \\@deletion-target 7.0.0\n */\nvar /** @type {?} */ VIEWPORT_RULER_PROVIDER = {\n    // If there is already a ViewportRuler available, use that. Otherwise, provide a new one.\n    provide: ViewportRuler,\n    deps: [[new Optional(), new SkipSelf(), ViewportRuler], Platform, NgZone],\n    useFactory: VIEWPORT_RULER_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar ScrollDispatchModule = /** @class */ (function () {\n    function ScrollDispatchModule() {\n    }\n    ScrollDispatchModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [PlatformModule],\n                    exports: [CdkScrollable],\n                    declarations: [CdkScrollable],\n                },] },\n    ];\n    return ScrollDispatchModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nexport { DEFAULT_SCROLL_TIME, ScrollDispatcher, SCROLL_DISPATCHER_PROVIDER_FACTORY, SCROLL_DISPATCHER_PROVIDER, CdkScrollable, DEFAULT_RESIZE_TIME, ViewportRuler, VIEWPORT_RULER_PROVIDER_FACTORY, VIEWPORT_RULER_PROVIDER, ScrollDispatchModule };\n//# sourceMappingURL=scrolling.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { APP_BOOTSTRAP_LISTENER, PLATFORM_ID, InjectionToken, inject, Injectable, Inject, NgModule, NgZone, Optional, SkipSelf, SimpleChange, defineInjectable } from '@angular/core';\nimport { DOCUMENT, isPlatformBrowser, isPlatformServer } from '@angular/common';\nimport { BehaviorSubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { __extends } from 'tslib';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Find all of the server-generated stylings, if any, and remove them\n * This will be in the form of inline classes and the style block in the\n * head of the DOM\n * @param {?} _document\n * @param {?} platformId\n * @return {?}\n */\nfunction removeStyles(_document, platformId) {\n    return function () {\n        if (isPlatformBrowser(platformId)) {\n            var /** @type {?} */ elements = Array.from(_document.querySelectorAll(\"[class*=\" + CLASS_NAME + \"]\"));\n            // RegExp constructor should only be used if passing a variable to the constructor.\n            // When using static regular expression it is more performant to use reg exp literal.\n            // This is also needed to provide Safari 9 compatibility, please see\n            // https://stackoverflow.com/questions/37919802 for more discussion.\n            var /** @type {?} */ classRegex_1 = /\\bflex-layout-.+?\\b/g;\n            elements.forEach(function (el) {\n                el.classList.contains(CLASS_NAME + \"ssr\") && el.parentNode ?\n                    el.parentNode.removeChild(el) : el.className.replace(classRegex_1, '');\n            });\n        }\n    };\n}\n/**\n *  Provider to remove SSR styles on the browser\n */\nvar /** @type {?} */ BROWSER_PROVIDER = {\n    provide: /** @type {?} */ (APP_BOOTSTRAP_LISTENER),\n    useFactory: removeStyles,\n    deps: [DOCUMENT, PLATFORM_ID],\n    multi: true\n};\nvar /** @type {?} */ CLASS_NAME = 'flex-layout-';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar /** @type {?} */ BREAKPOINT = new InjectionToken('Flex Layout token, collect all breakpoints into one provider', {\n    providedIn: 'root',\n    factory: function () { return null; }\n});\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar /** @type {?} */ RESPONSIVE_ALIASES = [\n    'xs', 'gt-xs', 'sm', 'gt-sm', 'md', 'gt-md', 'lg', 'gt-lg', 'xl'\n];\nvar /** @type {?} */ DEFAULT_BREAKPOINTS = [\n    {\n        alias: 'xs',\n        mediaQuery: '(min-width: 0px) and (max-width: 599px)'\n    },\n    {\n        alias: 'gt-xs',\n        overlapping: true,\n        mediaQuery: '(min-width: 600px)'\n    },\n    {\n        alias: 'lt-sm',\n        overlapping: true,\n        mediaQuery: '(max-width: 599px)'\n    },\n    {\n        alias: 'sm',\n        mediaQuery: '(min-width: 600px) and (max-width: 959px)'\n    },\n    {\n        alias: 'gt-sm',\n        overlapping: true,\n        mediaQuery: '(min-width: 960px)'\n    },\n    {\n        alias: 'lt-md',\n        overlapping: true,\n        mediaQuery: '(max-width: 959px)'\n    },\n    {\n        alias: 'md',\n        mediaQuery: '(min-width: 960px) and (max-width: 1279px)'\n    },\n    {\n        alias: 'gt-md',\n        overlapping: true,\n        mediaQuery: '(min-width: 1280px)'\n    },\n    {\n        alias: 'lt-lg',\n        overlapping: true,\n        mediaQuery: '(max-width: 1279px)'\n    },\n    {\n        alias: 'lg',\n        mediaQuery: '(min-width: 1280px) and (max-width: 1919px)'\n    },\n    {\n        alias: 'gt-lg',\n        overlapping: true,\n        mediaQuery: '(min-width: 1920px)'\n    },\n    {\n        alias: 'lt-xl',\n        overlapping: true,\n        mediaQuery: '(max-width: 1920px)'\n    },\n    {\n        alias: 'xl',\n        mediaQuery: '(min-width: 1920px) and (max-width: 5000px)'\n    }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/* tslint:disable */\nvar /** @type {?} */ HANDSET_PORTRAIT = '(orientation: portrait) and (max-width: 599px)';\nvar /** @type {?} */ HANDSET_LANDSCAPE = '(orientation: landscape) and (max-width: 959px)';\nvar /** @type {?} */ TABLET_LANDSCAPE = '(orientation: landscape) and (min-width: 960px) and (max-width: 1279px)';\nvar /** @type {?} */ TABLET_PORTRAIT = '(orientation: portrait) and (min-width: 600px) and (max-width: 839px)';\nvar /** @type {?} */ WEB_PORTRAIT = '(orientation: portrait) and (min-width: 840px)';\nvar /** @type {?} */ WEB_LANDSCAPE = '(orientation: landscape) and (min-width: 1280px)';\nvar /** @type {?} */ ScreenTypes = {\n    'HANDSET': HANDSET_PORTRAIT + \", \" + HANDSET_LANDSCAPE,\n    'TABLET': TABLET_PORTRAIT + \" , \" + TABLET_LANDSCAPE,\n    'WEB': WEB_PORTRAIT + \", \" + WEB_LANDSCAPE + \" \",\n    'HANDSET_PORTRAIT': \"\" + HANDSET_PORTRAIT,\n    'TABLET_PORTRAIT': TABLET_PORTRAIT + \" \",\n    'WEB_PORTRAIT': \"\" + WEB_PORTRAIT,\n    'HANDSET_LANDSCAPE': HANDSET_LANDSCAPE + \"]\",\n    'TABLET_LANDSCAPE': \"\" + TABLET_LANDSCAPE,\n    'WEB_LANDSCAPE': \"\" + WEB_LANDSCAPE\n};\n/**\n * Extended Breakpoints for handset/tablets with landscape or portrait orientations\n */\nvar /** @type {?} */ ORIENTATION_BREAKPOINTS = [\n    { 'alias': 'handset', 'mediaQuery': ScreenTypes.HANDSET },\n    { 'alias': 'handset.landscape', 'mediaQuery': ScreenTypes.HANDSET_LANDSCAPE },\n    { 'alias': 'handset.portrait', 'mediaQuery': ScreenTypes.HANDSET_PORTRAIT },\n    { 'alias': 'tablet', 'mediaQuery': ScreenTypes.TABLET },\n    { 'alias': 'tablet.landscape', 'mediaQuery': ScreenTypes.TABLET },\n    { 'alias': 'tablet.portrait', 'mediaQuery': ScreenTypes.TABLET_PORTRAIT },\n    { 'alias': 'web', 'mediaQuery': ScreenTypes.WEB, overlapping: true },\n    { 'alias': 'web.landscape', 'mediaQuery': ScreenTypes.WEB_LANDSCAPE, overlapping: true },\n    { 'alias': 'web.portrait', 'mediaQuery': ScreenTypes.WEB_PORTRAIT, overlapping: true }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\n * similar to Object.assign.\n *\n * @param {?} dest The object which will have properties copied to it.\n * @param {...?} sources The source objects from which properties will be copied.\n * @return {?}\n */\nfunction extendObject(dest) {\n    var sources = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        sources[_i - 1] = arguments[_i];\n    }\n    if (dest == null) {\n        throw TypeError('Cannot convert undefined or null to object');\n    }\n    for (var _a = 0, sources_1 = sources; _a < sources_1.length; _a++) {\n        var source = sources_1[_a];\n        if (source != null) {\n            for (var /** @type {?} */ key in source) {\n                if (source.hasOwnProperty(key)) {\n                    dest[key] = source[key];\n                }\n            }\n        }\n    }\n    return dest;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar /** @type {?} */ ALIAS_DELIMITERS = /(\\.|-|_)/g;\n/**\n * @param {?} part\n * @return {?}\n */\nfunction firstUpperCase(part) {\n    var /** @type {?} */ first = part.length > 0 ? part.charAt(0) : '';\n    var /** @type {?} */ remainder = (part.length > 1) ? part.slice(1) : '';\n    return first.toUpperCase() + remainder;\n}\n/**\n * Converts snake-case to SnakeCase.\n * @param {?} name Text to UpperCamelCase\n * @return {?}\n */\nfunction camelCase(name) {\n    return name\n        .replace(ALIAS_DELIMITERS, '|')\n        .split('|')\n        .map(firstUpperCase)\n        .join('');\n}\n/**\n * For each breakpoint, ensure that a Suffix is defined;\n * fallback to UpperCamelCase the unique Alias value\n * @param {?} list\n * @return {?}\n */\nfunction validateSuffixes(list) {\n    list.forEach(function (bp) {\n        if (!bp.suffix) {\n            bp.suffix = camelCase(bp.alias); // create Suffix value based on alias\n            bp.overlapping = !!bp.overlapping; // ensure default value\n        }\n    });\n    return list;\n}\n/**\n * Merge a custom breakpoint list with the default list based on unique alias values\n *  - Items are added if the alias is not in the default list\n *  - Items are merged with the custom override if the alias exists in the default list\n * @param {?} defaults\n * @param {?=} custom\n * @return {?}\n */\nfunction mergeByAlias(defaults, custom) {\n    if (custom === void 0) { custom = []; }\n    var /** @type {?} */ dict = {};\n    defaults.forEach(function (bp) {\n        dict[bp.alias] = bp;\n    });\n    // Merge custom breakpoints\n    custom.forEach(function (bp) {\n        if (dict[bp.alias]) {\n            extendObject(dict[bp.alias], bp);\n        }\n        else {\n            dict[bp.alias] = bp;\n        }\n    });\n    return validateSuffixes(Object.keys(dict).map(function (k) { return dict[k]; }));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar /** @type {?} */ DEFAULT_CONFIG = {\n    addFlexToParent: true,\n    addOrientationBps: false,\n    disableDefaultBps: false,\n    disableVendorPrefixes: false,\n    serverLoaded: false,\n    useColumnBasisZero: true,\n};\nvar /** @type {?} */ LAYOUT_CONFIG = new InjectionToken('Flex Layout token, config options for the library', {\n    providedIn: 'root',\n    factory: function () { return DEFAULT_CONFIG; }\n});\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n *  Injection token unique to the flex-layout library.\n *  Use this token when build a custom provider (see below).\n */\nvar /** @type {?} */ BREAKPOINTS = new InjectionToken('Token (@angular/flex-layout) Breakpoints', {\n    providedIn: 'root',\n    factory: function () {\n        var /** @type {?} */ breakpoints = inject(BREAKPOINT);\n        var /** @type {?} */ layoutConfig = inject(LAYOUT_CONFIG);\n        var /** @type {?} */ bpFlattenArray = [].concat.apply([], (breakpoints || [])\n            .map(function (v) { return Array.isArray(v) ? v : [v]; }));\n        var /** @type {?} */ builtIns = (layoutConfig.disableDefaultBps ? [] : DEFAULT_BREAKPOINTS)\n            .concat(layoutConfig.addOrientationBps ? ORIENTATION_BREAKPOINTS : []);\n        return mergeByAlias(builtIns, bpFlattenArray);\n    }\n});\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Registry of 1..n MediaQuery breakpoint ranges\n * This is published as a provider and may be overridden from custom, application-specific ranges\n *\n */\nvar BreakPointRegistry = /** @class */ (function () {\n    function BreakPointRegistry(_registry) {\n        this._registry = _registry;\n    }\n    Object.defineProperty(BreakPointRegistry.prototype, \"items\", {\n        /**\n         * Accessor to raw list\n         */\n        get: /**\n         * Accessor to raw list\n         * @return {?}\n         */\n        function () {\n            return this._registry.slice();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BreakPointRegistry.prototype, \"sortedItems\", {\n        /**\n         * Accessor to sorted list used for registration with matchMedia API\n         *\n         * NOTE: During breakpoint registration, we want to register the overlaps FIRST\n         *       so the non-overlaps will trigger the MatchMedia:BehaviorSubject last!\n         *       And the largest, non-overlap, matching breakpoint should be the lastReplay value\n         */\n        get: /**\n         * Accessor to sorted list used for registration with matchMedia API\n         *\n         * NOTE: During breakpoint registration, we want to register the overlaps FIRST\n         *       so the non-overlaps will trigger the MatchMedia:BehaviorSubject last!\n         *       And the largest, non-overlap, matching breakpoint should be the lastReplay value\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ overlaps = this._registry.filter(function (it) { return it.overlapping === true; });\n            var /** @type {?} */ nonOverlaps = this._registry.filter(function (it) { return it.overlapping !== true; });\n            return overlaps.concat(nonOverlaps);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Search breakpoints by alias (e.g. gt-xs)\n     */\n    /**\n     * Search breakpoints by alias (e.g. gt-xs)\n     * @param {?} alias\n     * @return {?}\n     */\n    BreakPointRegistry.prototype.findByAlias = /**\n     * Search breakpoints by alias (e.g. gt-xs)\n     * @param {?} alias\n     * @return {?}\n     */\n    function (alias) {\n        return this._registry.find(function (bp) { return bp.alias == alias; }) || null;\n    };\n    /**\n     * @param {?} query\n     * @return {?}\n     */\n    BreakPointRegistry.prototype.findByQuery = /**\n     * @param {?} query\n     * @return {?}\n     */\n    function (query) {\n        return this._registry.find(function (bp) { return bp.mediaQuery == query; }) || null;\n    };\n    Object.defineProperty(BreakPointRegistry.prototype, \"overlappings\", {\n        /**\n         * Get all the breakpoints whose ranges could overlapping `normal` ranges;\n         * e.g. gt-sm overlaps md, lg, and xl\n         */\n        get: /**\n         * Get all the breakpoints whose ranges could overlapping `normal` ranges;\n         * e.g. gt-sm overlaps md, lg, and xl\n         * @return {?}\n         */\n        function () {\n            return this._registry.filter(function (it) { return it.overlapping == true; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BreakPointRegistry.prototype, \"aliases\", {\n        /**\n         * Get list of all registered (non-empty) breakpoint aliases\n         */\n        get: /**\n         * Get list of all registered (non-empty) breakpoint aliases\n         * @return {?}\n         */\n        function () {\n            return this._registry.map(function (it) { return it.alias; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BreakPointRegistry.prototype, \"suffixes\", {\n        /**\n         * Aliases are mapped to properties using suffixes\n         * e.g.  'gt-sm' for property 'layout'  uses suffix 'GtSm'\n         * for property layoutGtSM.\n         */\n        get: /**\n         * Aliases are mapped to properties using suffixes\n         * e.g.  'gt-sm' for property 'layout'  uses suffix 'GtSm'\n         * for property layoutGtSM.\n         * @return {?}\n         */\n        function () {\n            return this._registry.map(function (it) { return !!it.suffix ? it.suffix : ''; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BreakPointRegistry.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */\n    BreakPointRegistry.ctorParameters = function () { return [\n        { type: Array, decorators: [{ type: Inject, args: [BREAKPOINTS,] },] },\n    ]; };\n    /** @nocollapse */ BreakPointRegistry.ngInjectableDef = defineInjectable({ factory: function BreakPointRegistry_Factory() { return new BreakPointRegistry(inject(BREAKPOINTS)); }, token: BreakPointRegistry, providedIn: \"root\" });\n    return BreakPointRegistry;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Class instances emitted [to observers] for each mql notification\n */\nvar  /**\n * Class instances emitted [to observers] for each mql notification\n */\nMediaChange = /** @class */ (function () {\n    function MediaChange(matches, mediaQuery, mqAlias, suffix // e.g.   GtSM, Md, GtLg\n    ) {\n        if (matches === void 0) { matches = false; }\n        if (mediaQuery === void 0) { mediaQuery = 'all'; }\n        if (mqAlias === void 0) { mqAlias = ''; }\n        if (suffix === void 0) { suffix = ''; }\n        this.matches = matches;\n        this.mediaQuery = mediaQuery;\n        this.mqAlias = mqAlias;\n        this.suffix = suffix;\n    }\n    /**\n     * @return {?}\n     */\n    MediaChange.prototype.clone = /**\n     * @return {?}\n     */\n    function () {\n        return new MediaChange(this.matches, this.mediaQuery, this.mqAlias, this.suffix);\n    };\n    return MediaChange;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * MediaMonitor configures listeners to mediaQuery changes and publishes an Observable facade to\n * convert mediaQuery change callbacks to subscriber notifications. These notifications will be\n * performed within the ng Zone to trigger change detections and component updates.\n *\n * NOTE: both mediaQuery activations and de-activations are announced in notifications\n */\nvar MatchMedia = /** @class */ (function () {\n    function MatchMedia(_zone, _platformId, _document) {\n        this._zone = _zone;\n        this._platformId = _platformId;\n        this._document = _document;\n        this._registry = new Map();\n        this._source = new BehaviorSubject(new MediaChange(true));\n        this._observable$ = this._source.asObservable();\n    }\n    /**\n     * For the specified mediaQuery?\n     */\n    /**\n     * For the specified mediaQuery?\n     * @param {?} mediaQuery\n     * @return {?}\n     */\n    MatchMedia.prototype.isActive = /**\n     * For the specified mediaQuery?\n     * @param {?} mediaQuery\n     * @return {?}\n     */\n    function (mediaQuery) {\n        var /** @type {?} */ mql = this._registry.get(mediaQuery);\n        return !!mql ? mql.matches : false;\n    };\n    /**\n     * External observers can watch for all (or a specific) mql changes.\n     * Typically used by the MediaQueryAdaptor; optionally available to components\n     * who wish to use the MediaMonitor as mediaMonitor$ observable service.\n     *\n     * NOTE: if a mediaQuery is not specified, then ALL mediaQuery activations will\n     *       be announced.\n     */\n    /**\n     * External observers can watch for all (or a specific) mql changes.\n     * Typically used by the MediaQueryAdaptor; optionally available to components\n     * who wish to use the MediaMonitor as mediaMonitor$ observable service.\n     *\n     * NOTE: if a mediaQuery is not specified, then ALL mediaQuery activations will\n     *       be announced.\n     * @param {?=} mediaQuery\n     * @return {?}\n     */\n    MatchMedia.prototype.observe = /**\n     * External observers can watch for all (or a specific) mql changes.\n     * Typically used by the MediaQueryAdaptor; optionally available to components\n     * who wish to use the MediaMonitor as mediaMonitor$ observable service.\n     *\n     * NOTE: if a mediaQuery is not specified, then ALL mediaQuery activations will\n     *       be announced.\n     * @param {?=} mediaQuery\n     * @return {?}\n     */\n    function (mediaQuery) {\n        if (mediaQuery) {\n            this.registerQuery(mediaQuery);\n        }\n        return this._observable$.pipe(filter(function (change) {\n            return mediaQuery ? (change.mediaQuery === mediaQuery) : true;\n        }));\n    };\n    /**\n     * Based on the BreakPointRegistry provider, register internal listeners for each unique\n     * mediaQuery. Each listener emits specific MediaChange data to observers\n     */\n    /**\n     * Based on the BreakPointRegistry provider, register internal listeners for each unique\n     * mediaQuery. Each listener emits specific MediaChange data to observers\n     * @param {?} mediaQuery\n     * @return {?}\n     */\n    MatchMedia.prototype.registerQuery = /**\n     * Based on the BreakPointRegistry provider, register internal listeners for each unique\n     * mediaQuery. Each listener emits specific MediaChange data to observers\n     * @param {?} mediaQuery\n     * @return {?}\n     */\n    function (mediaQuery) {\n        var _this = this;\n        var /** @type {?} */ list = normalizeQuery(mediaQuery);\n        if (list.length > 0) {\n            this._prepareQueryCSS(list, this._document);\n            list.forEach(function (query) {\n                var /** @type {?} */ mql = _this._registry.get(query);\n                var /** @type {?} */ onMQLEvent = function (e) {\n                    _this._zone.run(function () {\n                        var /** @type {?} */ change = new MediaChange(e.matches, query);\n                        _this._source.next(change);\n                    });\n                };\n                if (!mql) {\n                    mql = _this._buildMQL(query);\n                    mql.addListener(onMQLEvent);\n                    _this._registry.set(query, mql);\n                }\n                if (mql.matches) {\n                    onMQLEvent(mql); // Announce activate range for initial subscribers\n                }\n            });\n        }\n    };\n    /**\n     * Call window.matchMedia() to build a MediaQueryList; which\n     * supports 0..n listeners for activation/deactivation\n     */\n    /**\n     * Call window.matchMedia() to build a MediaQueryList; which\n     * supports 0..n listeners for activation/deactivation\n     * @param {?} query\n     * @return {?}\n     */\n    MatchMedia.prototype._buildMQL = /**\n     * Call window.matchMedia() to build a MediaQueryList; which\n     * supports 0..n listeners for activation/deactivation\n     * @param {?} query\n     * @return {?}\n     */\n    function (query) {\n        var /** @type {?} */ canListen = isPlatformBrowser(this._platformId) &&\n            !!(/** @type {?} */ (window)).matchMedia('all').addListener;\n        return canListen ? (/** @type {?} */ (window)).matchMedia(query) : /** @type {?} */ ({\n            matches: query === 'all' || query === '',\n            media: query,\n            addListener: function () {\n            },\n            removeListener: function () {\n            }\n        });\n    };\n    /**\n     * For Webkit engines that only trigger the MediaQueryList Listener\n     * when there is at least one CSS selector for the respective media query.\n     *\n     * @param query string The mediaQuery used to create a faux CSS selector\n     *\n     */\n    /**\n     * For Webkit engines that only trigger the MediaQueryList Listener\n     * when there is at least one CSS selector for the respective media query.\n     *\n     * @param {?} mediaQueries\n     * @param {?} _document\n     * @return {?}\n     */\n    MatchMedia.prototype._prepareQueryCSS = /**\n     * For Webkit engines that only trigger the MediaQueryList Listener\n     * when there is at least one CSS selector for the respective media query.\n     *\n     * @param {?} mediaQueries\n     * @param {?} _document\n     * @return {?}\n     */\n    function (mediaQueries, _document) {\n        var /** @type {?} */ list = mediaQueries.filter(function (it) { return !ALL_STYLES[it]; });\n        if (list.length > 0) {\n            var /** @type {?} */ query = list.join(', ');\n            try {\n                var /** @type {?} */ styleEl_1 = _document.createElement('style');\n                styleEl_1.setAttribute('type', 'text/css');\n                if (!styleEl_1['styleSheet']) {\n                    var /** @type {?} */ cssText = \"\\n/*\\n  @angular/flex-layout - workaround for possible browser quirk with mediaQuery listeners\\n  see http://bit.ly/2sd4HMP\\n*/\\n@media \" + query + \" {.fx-query-test{ }}\\n\";\n                    styleEl_1.appendChild(_document.createTextNode(cssText));\n                }\n                _document.head.appendChild(styleEl_1);\n                // Store in private global registry\n                list.forEach(function (mq) { return ALL_STYLES[mq] = styleEl_1; });\n            }\n            catch (/** @type {?} */ e) {\n                console.error(e);\n            }\n        }\n    };\n    MatchMedia.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */\n    MatchMedia.ctorParameters = function () { return [\n        { type: NgZone, },\n        { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] },] },\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] },] },\n    ]; };\n    /** @nocollapse */ MatchMedia.ngInjectableDef = defineInjectable({ factory: function MatchMedia_Factory() { return new MatchMedia(inject(NgZone), inject(PLATFORM_ID), inject(DOCUMENT)); }, token: MatchMedia, providedIn: \"root\" });\n    return MatchMedia;\n}());\n/**\n * Private global registry for all dynamically-created, injected style tags\n * @see prepare(query)\n */\nvar /** @type {?} */ ALL_STYLES = {};\n/**\n * Always convert to unique list of queries; for iteration in ::registerQuery()\n * @param {?} mediaQuery\n * @return {?}\n */\nfunction normalizeQuery(mediaQuery) {\n    return (typeof mediaQuery === 'undefined') ? [] :\n        (typeof mediaQuery === 'string') ? [mediaQuery] : unique(/** @type {?} */ (mediaQuery));\n}\n/**\n * Filter duplicate mediaQueries in the list\n * @param {?} list\n * @return {?}\n */\nfunction unique(list) {\n    var /** @type {?} */ seen = {};\n    return list.filter(function (item) {\n        return seen.hasOwnProperty(item) ? false : (seen[item] = true);\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * For the specified MediaChange, make sure it contains the breakpoint alias\n * and suffix (if available).\n * @param {?} dest\n * @param {?} source\n * @return {?}\n */\nfunction mergeAlias(dest, source) {\n    return extendObject(dest, source ? {\n        mqAlias: source.alias,\n        suffix: source.suffix\n    } : {});\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Base class for MediaService and pseudo-token for\n * @abstract\n */\nvar  /**\n * Base class for MediaService and pseudo-token for\n * @abstract\n */\nObservableMedia = /** @class */ (function () {\n    function ObservableMedia() {\n    }\n    return ObservableMedia;\n}());\n/**\n * Class internalizes a MatchMedia service and exposes an Subscribable and Observable interface.\n * This an Observable with that exposes a feature to subscribe to mediaQuery\n * changes and a validator method (`isActive(<alias>)`) to test if a mediaQuery (or alias) is\n * currently active.\n *\n * !! Only mediaChange activations (not de-activations) are announced by the ObservableMedia\n *\n * This class uses the BreakPoint Registry to inject alias information into the raw MediaChange\n * notification. For custom mediaQuery notifications, alias information will not be injected and\n * those fields will be ''.\n *\n * !! This is not an actual Observable. It is a wrapper of an Observable used to publish additional\n * methods like `isActive(<alias>). To access the Observable and use RxJS operators, use\n * `.asObservable()` with syntax like media.asObservable().map(....).\n *\n *  \\@usage\n *\n *  // RxJS\n *  import {filter} from 'rxjs/operators/filter';\n *  import { ObservableMedia } from '\\@angular/flex-layout';\n *\n *  \\@Component({ ... })\n *  export class AppComponent {\n *    status : string = '';\n *\n *    constructor(  media:ObservableMedia ) {\n *      let onChange = (change:MediaChange) => {\n *        this.status = change ? `'${change.mqAlias}' = (${change.mediaQuery})` : '';\n *      };\n *\n *      // Subscribe directly or access observable to use filter/map operators\n *      // e.g.\n *      //      media.subscribe(onChange);\n *\n *      media.asObservable()\n *        .pipe(\n *          filter((change:MediaChange) => true)   // silly noop filter\n *        ).subscribe(onChange);\n *    }\n *  }\n */\nvar MediaService = /** @class */ (function () {\n    function MediaService(breakpoints, mediaWatcher) {\n        this.breakpoints = breakpoints;\n        this.mediaWatcher = mediaWatcher;\n        /**\n         * Should we announce gt-<xxx> breakpoint activations ?\n         */\n        this.filterOverlaps = true;\n        this._registerBreakPoints();\n        this.observable$ = this._buildObservable();\n    }\n    /**\n     * Test if specified query/alias is active.\n     */\n    /**\n     * Test if specified query/alias is active.\n     * @param {?} alias\n     * @return {?}\n     */\n    MediaService.prototype.isActive = /**\n     * Test if specified query/alias is active.\n     * @param {?} alias\n     * @return {?}\n     */\n    function (alias) {\n        var /** @type {?} */ query = this._toMediaQuery(alias);\n        return this.mediaWatcher.isActive(query);\n    };\n    /**\n     * Proxy to the Observable subscribe method\n     */\n    /**\n     * Proxy to the Observable subscribe method\n     * @param {?=} next\n     * @param {?=} error\n     * @param {?=} complete\n     * @return {?}\n     */\n    MediaService.prototype.subscribe = /**\n     * Proxy to the Observable subscribe method\n     * @param {?=} next\n     * @param {?=} error\n     * @param {?=} complete\n     * @return {?}\n     */\n    function (next, error, complete) {\n        return this.observable$.subscribe(next, error, complete);\n    };\n    /**\n     * Access to observable for use with operators like\n     * .filter(), .map(), etc.\n     */\n    /**\n     * Access to observable for use with operators like\n     * .filter(), .map(), etc.\n     * @return {?}\n     */\n    MediaService.prototype.asObservable = /**\n     * Access to observable for use with operators like\n     * .filter(), .map(), etc.\n     * @return {?}\n     */\n    function () {\n        return this.observable$;\n    };\n    /**\n     * Register all the mediaQueries registered in the BreakPointRegistry\n     * This is needed so subscribers can be auto-notified of all standard, registered\n     * mediaQuery activations\n     * @return {?}\n     */\n    MediaService.prototype._registerBreakPoints = /**\n     * Register all the mediaQueries registered in the BreakPointRegistry\n     * This is needed so subscribers can be auto-notified of all standard, registered\n     * mediaQuery activations\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ queries = this.breakpoints.sortedItems.map(function (bp) { return bp.mediaQuery; });\n        this.mediaWatcher.registerQuery(queries);\n    };\n    /**\n     * Prepare internal observable\n     *\n     * NOTE: the raw MediaChange events [from MatchMedia] do not\n     *       contain important alias information; as such this info\n     *       must be injected into the MediaChange\n     * @return {?}\n     */\n    MediaService.prototype._buildObservable = /**\n     * Prepare internal observable\n     *\n     * NOTE: the raw MediaChange events [from MatchMedia] do not\n     *       contain important alias information; as such this info\n     *       must be injected into the MediaChange\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ self = this;\n        var /** @type {?} */ media$ = this.mediaWatcher.observe();\n        var /** @type {?} */ activationsOnly = function (change) {\n            return change.matches === true;\n        };\n        var /** @type {?} */ addAliasInformation = function (change) {\n            return mergeAlias(change, _this._findByQuery(change.mediaQuery));\n        };\n        var /** @type {?} */ excludeOverlaps = function (change) {\n            var /** @type {?} */ bp = _this.breakpoints.findByQuery(change.mediaQuery);\n            return !bp ? true : !(self.filterOverlaps && bp.overlapping);\n        };\n        /**\n             * Only pass/announce activations (not de-activations)\n             * Inject associated (if any) alias information into the MediaChange event\n             * Exclude mediaQuery activations for overlapping mQs. List bounded mQ ranges only\n             */\n        return media$.pipe(filter(activationsOnly), filter(excludeOverlaps), map(addAliasInformation));\n    };\n    /**\n     * Breakpoint locator by alias\n     * @param {?} alias\n     * @return {?}\n     */\n    MediaService.prototype._findByAlias = /**\n     * Breakpoint locator by alias\n     * @param {?} alias\n     * @return {?}\n     */\n    function (alias) {\n        return this.breakpoints.findByAlias(alias);\n    };\n    /**\n     * Breakpoint locator by mediaQuery\n     * @param {?} query\n     * @return {?}\n     */\n    MediaService.prototype._findByQuery = /**\n     * Breakpoint locator by mediaQuery\n     * @param {?} query\n     * @return {?}\n     */\n    function (query) {\n        return this.breakpoints.findByQuery(query);\n    };\n    /**\n     * Find associated breakpoint (if any)\n     * @param {?} query\n     * @return {?}\n     */\n    MediaService.prototype._toMediaQuery = /**\n     * Find associated breakpoint (if any)\n     * @param {?} query\n     * @return {?}\n     */\n    function (query) {\n        var /** @type {?} */ bp = this._findByAlias(query) || this._findByQuery(query);\n        return bp ? bp.mediaQuery : query;\n    };\n    MediaService.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */\n    MediaService.ctorParameters = function () { return [\n        { type: BreakPointRegistry, },\n        { type: MatchMedia, },\n    ]; };\n    /** @nocollapse */ MediaService.ngInjectableDef = defineInjectable({ factory: function MediaService_Factory() { return new MediaService(inject(BreakPointRegistry), inject(MatchMedia)); }, token: MediaService, providedIn: \"root\" });\n    return MediaService;\n}());\nvar /** @type {?} */ ObservableMediaProvider = {\n    // tslint:disable-line:variable-name\n    provide: ObservableMedia,\n    useClass: MediaService\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * *****************************************************************\n * Define module for the MediaQuery API\n * *****************************************************************\n */\nvar CoreModule = /** @class */ (function () {\n    function CoreModule() {\n    }\n    CoreModule.decorators = [\n        { type: NgModule, args: [{\n                    providers: [ObservableMediaProvider, BROWSER_PROVIDER]\n                },] },\n    ];\n    /** @nocollapse */\n    CoreModule.ctorParameters = function () { return []; };\n    return CoreModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Utility to emulate a CSS stylesheet\n *\n * This utility class stores all of the styles for a given HTML element\n * as a readonly `stylesheet` map.\n */\nvar StylesheetMap = /** @class */ (function () {\n    function StylesheetMap() {\n        this.stylesheet = new Map();\n    }\n    /**\n     * Add an individual style to an HTML element\n     */\n    /**\n     * Add an individual style to an HTML element\n     * @param {?} element\n     * @param {?} style\n     * @param {?} value\n     * @return {?}\n     */\n    StylesheetMap.prototype.addStyleToElement = /**\n     * Add an individual style to an HTML element\n     * @param {?} element\n     * @param {?} style\n     * @param {?} value\n     * @return {?}\n     */\n    function (element, style, value) {\n        var /** @type {?} */ stylesheet = this.stylesheet.get(element);\n        if (stylesheet) {\n            stylesheet.set(style, value);\n        }\n        else {\n            this.stylesheet.set(element, new Map([[style, value]]));\n        }\n    };\n    /**\n     * Clear the virtual stylesheet\n     */\n    /**\n     * Clear the virtual stylesheet\n     * @return {?}\n     */\n    StylesheetMap.prototype.clearStyles = /**\n     * Clear the virtual stylesheet\n     * @return {?}\n     */\n    function () {\n        this.stylesheet.clear();\n    };\n    /**\n     * Retrieve a given style for an HTML element\n     */\n    /**\n     * Retrieve a given style for an HTML element\n     * @param {?} el\n     * @param {?} styleName\n     * @return {?}\n     */\n    StylesheetMap.prototype.getStyleForElement = /**\n     * Retrieve a given style for an HTML element\n     * @param {?} el\n     * @param {?} styleName\n     * @return {?}\n     */\n    function (el, styleName) {\n        var /** @type {?} */ styles = this.stylesheet.get(el);\n        var /** @type {?} */ value = '';\n        if (styles) {\n            var /** @type {?} */ style = styles.get(styleName);\n            if (typeof style === 'number' || typeof style === 'string') {\n                value = style + '';\n            }\n        }\n        return value;\n    };\n    StylesheetMap.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */\n    StylesheetMap.ctorParameters = function () { return []; };\n    /** @nocollapse */ StylesheetMap.ngInjectableDef = defineInjectable({ factory: function StylesheetMap_Factory() { return new StylesheetMap(); }, token: StylesheetMap, providedIn: \"root\" });\n    return StylesheetMap;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Ensure a single global service provider\n * @deprecated\n * \\@deletion-target v6.0.0-beta.16\n * @param {?} parentSheet\n * @return {?}\n */\nfunction STYLESHEET_MAP_PROVIDER_FACTORY(parentSheet) {\n    return parentSheet || new StylesheetMap();\n}\n/**\n * Export provider that uses a global service factory (above)\n * @deprecated\n * \\@deletion-target v6.0.0-beta.16\n */\nvar /** @type {?} */ STYLESHEET_MAP_PROVIDER = {\n    provide: StylesheetMap,\n    deps: [\n        [new Optional(), new SkipSelf(), StylesheetMap],\n    ],\n    useFactory: STYLESHEET_MAP_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Token that is provided to tell whether the FlexLayoutServerModule\n * has been included in the bundle\n *\n * NOTE: This can be manually provided to disable styles when using SSR\n */\nvar /** @type {?} */ SERVER_TOKEN = new InjectionToken('FlexLayoutServerLoaded', {\n    providedIn: 'root',\n    factory: function () { return false; }\n});\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nvar /** @type {?} */ INLINE = 'inline';\nvar /** @type {?} */ LAYOUT_VALUES = ['row', 'column', 'row-reverse', 'column-reverse'];\n/**\n * Validate the direction|'direction wrap' value and then update the host's inline flexbox styles\n * @param {?} value\n * @return {?}\n */\nfunction buildLayoutCSS(value) {\n    var _a = validateValue(value), direction = _a[0], wrap = _a[1], isInline = _a[2];\n    return buildCSS(direction, wrap, isInline);\n}\n/**\n * Validate the value to be one of the acceptable value options\n * Use default fallback of 'row'\n * @param {?} value\n * @return {?}\n */\nfunction validateValue(value) {\n    value = value ? value.toLowerCase() : '';\n    var _a = value.split(' '), direction = _a[0], wrap = _a[1], inline = _a[2];\n    // First value must be the `flex-direction`\n    if (!LAYOUT_VALUES.find(function (x) { return x === direction; })) {\n        direction = LAYOUT_VALUES[0];\n    }\n    if (wrap === INLINE) {\n        wrap = (inline !== INLINE) ? inline : '';\n        inline = INLINE;\n    }\n    return [direction, validateWrapValue(wrap), !!inline];\n}\n/**\n * Convert layout-wrap='<value>' to expected flex-wrap style\n * @param {?} value\n * @return {?}\n */\nfunction validateWrapValue(value) {\n    if (!!value) {\n        switch (value.toLowerCase()) {\n            case 'reverse':\n            case 'wrap-reverse':\n            case 'reverse-wrap':\n                value = 'wrap-reverse';\n                break;\n            case 'no':\n            case 'none':\n            case 'nowrap':\n                value = 'nowrap';\n                break;\n            // All other values fallback to 'wrap'\n            default:\n                value = 'wrap';\n                break;\n        }\n    }\n    return value;\n}\n/**\n * Build the CSS that should be assigned to the element instance\n * BUG:\n *   1) min-height on a column flex container won’t apply to its flex item children in IE 10-11.\n *      Use height instead if possible; height : <xxx>vh;\n *\n *  This way any padding or border specified on the child elements are\n *  laid out and drawn inside that element's specified width and height.\n * @param {?} direction\n * @param {?=} wrap\n * @param {?=} inline\n * @return {?}\n */\nfunction buildCSS(direction, wrap, inline) {\n    if (wrap === void 0) { wrap = null; }\n    if (inline === void 0) { inline = false; }\n    return {\n        'display': inline ? 'inline-flex' : 'flex',\n        'box-sizing': 'border-box',\n        'flex-direction': direction,\n        'flex-wrap': !!wrap ? wrap : null\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar KeyOptions = /** @class */ (function () {\n    function KeyOptions(baseKey, defaultValue, inputKeys) {\n        this.baseKey = baseKey;\n        this.defaultValue = defaultValue;\n        this.inputKeys = inputKeys;\n    }\n    return KeyOptions;\n}());\n/**\n * ResponsiveActivation acts as a proxy between the MonitorMedia service (which emits mediaQuery\n * changes) and the fx API directives. The MQA proxies mediaQuery change events and notifies the\n * directive via the specified callback.\n *\n * - The MQA also determines which directive property should be used to determine the\n *   current change 'value'... BEFORE the original `onMediaQueryChanges()` method is called.\n * - The `ngOnDestroy()` method is also head-hooked to enable auto-unsubscribe from the\n *   MediaQueryServices.\n *\n * NOTE: these interceptions enables the logic in the fx API directives to remain terse and clean.\n */\nvar  /**\n * ResponsiveActivation acts as a proxy between the MonitorMedia service (which emits mediaQuery\n * changes) and the fx API directives. The MQA proxies mediaQuery change events and notifies the\n * directive via the specified callback.\n *\n * - The MQA also determines which directive property should be used to determine the\n *   current change 'value'... BEFORE the original `onMediaQueryChanges()` method is called.\n * - The `ngOnDestroy()` method is also head-hooked to enable auto-unsubscribe from the\n *   MediaQueryServices.\n *\n * NOTE: these interceptions enables the logic in the fx API directives to remain terse and clean.\n */\nResponsiveActivation = /** @class */ (function () {\n    /**\n     * Constructor\n     */\n    function ResponsiveActivation(_options, _mediaMonitor, _onMediaChanges) {\n        this._options = _options;\n        this._mediaMonitor = _mediaMonitor;\n        this._onMediaChanges = _onMediaChanges;\n        this._subscribers = [];\n        this._registryMap = this._buildRegistryMap();\n        this._subscribers = this._configureChangeObservers();\n    }\n    Object.defineProperty(ResponsiveActivation.prototype, \"registryFromLargest\", {\n        /**\n         * Get a readonly sorted list of the breakpoints corresponding to the directive properties\n         * defined in the HTML markup: the sorting is done from largest to smallest. The order is\n         * important when several media queries are 'registered' and from which, the browser uses the\n         * first matching media query.\n         */\n        get: /**\n         * Get a readonly sorted list of the breakpoints corresponding to the directive properties\n         * defined in the HTML markup: the sorting is done from largest to smallest. The order is\n         * important when several media queries are 'registered' and from which, the browser uses the\n         * first matching media query.\n         * @return {?}\n         */\n        function () {\n            return this._registryMap.slice().reverse();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ResponsiveActivation.prototype, \"mediaMonitor\", {\n        /**\n         * Accessor to the DI'ed directive property\n         * Each directive instance has a reference to the MediaMonitor which is\n         * used HERE to subscribe to mediaQuery change notifications.\n         */\n        get: /**\n         * Accessor to the DI'ed directive property\n         * Each directive instance has a reference to the MediaMonitor which is\n         * used HERE to subscribe to mediaQuery change notifications.\n         * @return {?}\n         */\n        function () {\n            return this._mediaMonitor;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ResponsiveActivation.prototype, \"activatedInputKey\", {\n        /**\n         * Determine which directive @Input() property is currently active (for the viewport size):\n         * The key must be defined (in use) or fallback to the 'closest' overlapping property key\n         * that is defined; otherwise the default property key will be used.\n         * e.g.\n         *      if `<div fxHide fxHide.gt-sm=\"false\">` is used but the current activated mediaQuery alias\n         *      key is `.md` then `.gt-sm` should be used instead\n         */\n        get: /**\n         * Determine which directive \\@Input() property is currently active (for the viewport size):\n         * The key must be defined (in use) or fallback to the 'closest' overlapping property key\n         * that is defined; otherwise the default property key will be used.\n         * e.g.\n         *      if `<div fxHide fxHide.gt-sm=\"false\">` is used but the current activated mediaQuery alias\n         *      key is `.md` then `.gt-sm` should be used instead\n         * @return {?}\n         */\n        function () {\n            return this._activatedInputKey || this._options.baseKey;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ResponsiveActivation.prototype, \"activatedInput\", {\n        /**\n         * Get the currently activated @Input value or the fallback default @Input value\n         */\n        get: /**\n         * Get the currently activated \\@Input value or the fallback default \\@Input value\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ key = this.activatedInputKey;\n            return this.hasKeyValue(key) ? this._lookupKeyValue(key) : this._options.defaultValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Fast validator for presence of attribute on the host element\n     */\n    /**\n     * Fast validator for presence of attribute on the host element\n     * @param {?} key\n     * @return {?}\n     */\n    ResponsiveActivation.prototype.hasKeyValue = /**\n     * Fast validator for presence of attribute on the host element\n     * @param {?} key\n     * @return {?}\n     */\n    function (key) {\n        var /** @type {?} */ value = this._options.inputKeys[key];\n        return typeof value !== 'undefined';\n    };\n    /**\n     * Remove interceptors, restore original functions, and forward the onDestroy() call\n     */\n    /**\n     * Remove interceptors, restore original functions, and forward the onDestroy() call\n     * @return {?}\n     */\n    ResponsiveActivation.prototype.destroy = /**\n     * Remove interceptors, restore original functions, and forward the onDestroy() call\n     * @return {?}\n     */\n    function () {\n        this._subscribers.forEach(function (link) {\n            link.unsubscribe();\n        });\n        this._subscribers = [];\n    };\n    /**\n     * For each *defined* API property, register a callback to `_onMonitorEvents( )`\n     * Cache 1..n subscriptions for internal auto-unsubscribes when the the directive destructs\n     * @return {?}\n     */\n    ResponsiveActivation.prototype._configureChangeObservers = /**\n     * For each *defined* API property, register a callback to `_onMonitorEvents( )`\n     * Cache 1..n subscriptions for internal auto-unsubscribes when the the directive destructs\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ subscriptions = [];\n        this._registryMap.forEach(function (bp) {\n            if (_this._keyInUse(bp.key)) {\n                // Inject directive default property key name: to let onMediaChange() calls\n                // know which property is being triggered...\n                var /** @type {?} */ buildChanges = function (change) {\n                    change = change.clone();\n                    change.property = _this._options.baseKey;\n                    return change;\n                };\n                subscriptions.push(_this.mediaMonitor\n                    .observe(bp.alias)\n                    .pipe(map(buildChanges))\n                    .subscribe(function (change) {\n                    _this._onMonitorEvents(change);\n                }));\n            }\n        });\n        return subscriptions;\n    };\n    /**\n     * Build mediaQuery key-hashmap; only for the directive properties that are actually defined/used\n     * in the HTML markup\n     * @return {?}\n     */\n    ResponsiveActivation.prototype._buildRegistryMap = /**\n     * Build mediaQuery key-hashmap; only for the directive properties that are actually defined/used\n     * in the HTML markup\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        return this.mediaMonitor.breakpoints\n            .map(function (bp) {\n            return /** @type {?} */ (extendObject({}, bp, {\n                baseKey: _this._options.baseKey,\n                // e.g. layout, hide, self-align, flex-wrap\n                key: _this._options.baseKey + bp.suffix // e.g.  layoutGtSm, layoutMd, layoutGtLg\n            }));\n        })\n            .filter(function (bp) { return _this._keyInUse(bp.key); });\n    };\n    /**\n     * Synchronizes change notifications with the current mq-activated @Input and calculates the\n     * mq-activated input value or the default value\n     */\n    /**\n     * Synchronizes change notifications with the current mq-activated \\@Input and calculates the\n     * mq-activated input value or the default value\n     * @param {?} change\n     * @return {?}\n     */\n    ResponsiveActivation.prototype._onMonitorEvents = /**\n     * Synchronizes change notifications with the current mq-activated \\@Input and calculates the\n     * mq-activated input value or the default value\n     * @param {?} change\n     * @return {?}\n     */\n    function (change) {\n        if (change.property == this._options.baseKey) {\n            change.value = this._calculateActivatedValue(change);\n            this._onMediaChanges(change);\n        }\n    };\n    /**\n     * Has the key been specified in the HTML markup and thus is intended\n     * to participate in activation processes.\n     * @param {?} key\n     * @return {?}\n     */\n    ResponsiveActivation.prototype._keyInUse = /**\n     * Has the key been specified in the HTML markup and thus is intended\n     * to participate in activation processes.\n     * @param {?} key\n     * @return {?}\n     */\n    function (key) {\n        return this._lookupKeyValue(key) !== undefined;\n    };\n    /**\n     *  Map input key associated with mediaQuery activation to closest defined input key\n     *  then return the values associated with the targeted input property\n     *\n     *  !! change events may arrive out-of-order (activate before deactivate)\n     *     so make sure the deactivate is used ONLY when the keys match\n     *     (since a different activate may be in use)\n     * @param {?} current\n     * @return {?}\n     */\n    ResponsiveActivation.prototype._calculateActivatedValue = /**\n     *  Map input key associated with mediaQuery activation to closest defined input key\n     *  then return the values associated with the targeted input property\n     *\n     *  !! change events may arrive out-of-order (activate before deactivate)\n     *     so make sure the deactivate is used ONLY when the keys match\n     *     (since a different activate may be in use)\n     * @param {?} current\n     * @return {?}\n     */\n    function (current) {\n        var /** @type {?} */ currentKey = this._options.baseKey + current.suffix; // e.g. suffix == 'GtSm',\n        var /** @type {?} */ newKey = this._activatedInputKey; // e.g. newKey == hideGtSm\n        newKey = current.matches ? currentKey : ((newKey == currentKey) ? '' : newKey);\n        this._activatedInputKey = this._validateInputKey(newKey);\n        return this.activatedInput;\n    };\n    /**\n     * For the specified input property key, validate it is defined (used in the markup)\n     * If not see if a overlapping mediaQuery-related input key fallback has been defined\n     *\n     * NOTE: scans in the order defined by activeOverLaps (largest viewport ranges -> smallest ranges)\n     * @param {?} inputKey\n     * @return {?}\n     */\n    ResponsiveActivation.prototype._validateInputKey = /**\n     * For the specified input property key, validate it is defined (used in the markup)\n     * If not see if a overlapping mediaQuery-related input key fallback has been defined\n     *\n     * NOTE: scans in the order defined by activeOverLaps (largest viewport ranges -> smallest ranges)\n     * @param {?} inputKey\n     * @return {?}\n     */\n    function (inputKey) {\n        var _this = this;\n        var /** @type {?} */ isMissingKey = function (key) { return !_this._keyInUse(key); };\n        if (isMissingKey(inputKey)) {\n            this.mediaMonitor.activeOverlaps.some(function (bp) {\n                var /** @type {?} */ key = _this._options.baseKey + bp.suffix;\n                if (!isMissingKey(key)) {\n                    inputKey = key;\n                    return true; // exit .some()\n                }\n                return false;\n            });\n        }\n        return inputKey;\n    };\n    /**\n     * Get the value (if any) for the directive instances \\@Input property (aka key)\n     * @param {?} key\n     * @return {?}\n     */\n    ResponsiveActivation.prototype._lookupKeyValue = /**\n     * Get the value (if any) for the directive instances \\@Input property (aka key)\n     * @param {?} key\n     * @return {?}\n     */\n    function (key) {\n        return this._options.inputKeys[key];\n    };\n    return ResponsiveActivation;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Abstract base class for the Layout API styling directives.\n * @abstract\n */\nvar  /**\n * Abstract base class for the Layout API styling directives.\n * @abstract\n */\nBaseDirective = /** @class */ (function () {\n    /**\n     * Constructor\n     */\n    function BaseDirective(_mediaMonitor, _elementRef, _styler) {\n        this._mediaMonitor = _mediaMonitor;\n        this._elementRef = _elementRef;\n        this._styler = _styler;\n        /**\n         *  Dictionary of input keys with associated values\n         */\n        this._inputMap = {};\n        /**\n         * Has the `ngOnInit()` method fired\n         *\n         * Used to allow *ngFor tasks to finish and support queries like\n         * getComputedStyle() during ngOnInit().\n         */\n        this._hasInitialized = false;\n    }\n    Object.defineProperty(BaseDirective.prototype, \"hasMediaQueryListener\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return !!this._mqActivation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BaseDirective.prototype, \"activatedValue\", {\n        /**\n         * Imperatively determine the current activated [input] value;\n         * if called before ngOnInit() this will return `undefined`\n         */\n        get: /**\n         * Imperatively determine the current activated [input] value;\n         * if called before ngOnInit() this will return `undefined`\n         * @return {?}\n         */\n        function () {\n            return this._mqActivation ? this._mqActivation.activatedInput : undefined;\n        },\n        /**\n         * Change the currently activated input value and force-update\n         * the injected CSS (by-passing change detection).\n         *\n         * NOTE: Only the currently activated input value will be modified;\n         *       other input values will NOT be affected.\n         */\n        set: /**\n         * Change the currently activated input value and force-update\n         * the injected CSS (by-passing change detection).\n         *\n         * NOTE: Only the currently activated input value will be modified;\n         *       other input values will NOT be affected.\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            var /** @type {?} */ key = 'baseKey', /** @type {?} */ previousVal;\n            if (this._mqActivation) {\n                key = this._mqActivation.activatedInputKey;\n                previousVal = this._inputMap[key];\n                this._inputMap[key] = value;\n            }\n            var /** @type {?} */ change = new SimpleChange(previousVal, value, false);\n            this.ngOnChanges(/** @type {?} */ (_a = {}, _a[key] = change, _a));\n            var _a;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BaseDirective.prototype, \"parentElement\", {\n        // *********************************************\n        // Accessor Methods\n        // *********************************************\n        /**\n         * Access to host element's parent DOM node\n         */\n        get: /**\n         * Access to host element's parent DOM node\n         * @return {?}\n         */\n        function () {\n            return this._elementRef.nativeElement.parentNode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BaseDirective.prototype, \"nativeElement\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._elementRef.nativeElement;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Access the current value (if any) of the @Input property.\n     */\n    /**\n     * Access the current value (if any) of the \\@Input property.\n     * @param {?} key\n     * @return {?}\n     */\n    BaseDirective.prototype._queryInput = /**\n     * Access the current value (if any) of the \\@Input property.\n     * @param {?} key\n     * @return {?}\n     */\n    function (key) {\n        return this._inputMap[key];\n    };\n    // *********************************************\n    // Lifecycle Methods\n    // *********************************************\n    /**\n     * Use post-component-initialization event to perform extra\n     * querying such as computed Display style\n     */\n    /**\n     * Use post-component-initialization event to perform extra\n     * querying such as computed Display style\n     * @return {?}\n     */\n    BaseDirective.prototype.ngOnInit = /**\n     * Use post-component-initialization event to perform extra\n     * querying such as computed Display style\n     * @return {?}\n     */\n    function () {\n        this._display = this._getDisplayStyle();\n        this._hasInitialized = true;\n    };\n    /**\n     * @param {?} change\n     * @return {?}\n     */\n    BaseDirective.prototype.ngOnChanges = /**\n     * @param {?} change\n     * @return {?}\n     */\n    function (change) {\n        throw new Error(\"BaseDirective::ngOnChanges should be overridden in subclass: \" + change);\n    };\n    /**\n     * @return {?}\n     */\n    BaseDirective.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this._mqActivation) {\n            this._mqActivation.destroy();\n        }\n        delete this._mediaMonitor;\n    };\n    // *********************************************\n    // Protected Methods\n    // *********************************************\n    /**\n     * Was the directive's default selector used ?\n     * If not, use the fallback value!\n     */\n    /**\n     * Was the directive's default selector used ?\n     * If not, use the fallback value!\n     * @param {?} key\n     * @param {?} fallbackVal\n     * @return {?}\n     */\n    BaseDirective.prototype._getDefaultVal = /**\n     * Was the directive's default selector used ?\n     * If not, use the fallback value!\n     * @param {?} key\n     * @param {?} fallbackVal\n     * @return {?}\n     */\n    function (key, fallbackVal) {\n        var /** @type {?} */ val = this._queryInput(key);\n        var /** @type {?} */ hasDefaultVal = (val !== undefined && val !== null);\n        return (hasDefaultVal && val !== '') ? val : fallbackVal;\n    };\n    /**\n     * Quick accessor to the current HTMLElement's `display` style\n     * Note: this allows us to preserve the original style\n     * and optional restore it when the mediaQueries deactivate\n     */\n    /**\n     * Quick accessor to the current HTMLElement's `display` style\n     * Note: this allows us to preserve the original style\n     * and optional restore it when the mediaQueries deactivate\n     * @param {?=} source\n     * @return {?}\n     */\n    BaseDirective.prototype._getDisplayStyle = /**\n     * Quick accessor to the current HTMLElement's `display` style\n     * Note: this allows us to preserve the original style\n     * and optional restore it when the mediaQueries deactivate\n     * @param {?=} source\n     * @return {?}\n     */\n    function (source) {\n        if (source === void 0) { source = this.nativeElement; }\n        var /** @type {?} */ query = 'display';\n        return this._styler.lookupStyle(source, query);\n    };\n    /**\n     * Quick accessor to raw attribute value on the target DOM element\n     */\n    /**\n     * Quick accessor to raw attribute value on the target DOM element\n     * @param {?} attribute\n     * @param {?=} source\n     * @return {?}\n     */\n    BaseDirective.prototype._getAttributeValue = /**\n     * Quick accessor to raw attribute value on the target DOM element\n     * @param {?} attribute\n     * @param {?=} source\n     * @return {?}\n     */\n    function (attribute, source) {\n        if (source === void 0) { source = this.nativeElement; }\n        return this._styler.lookupAttributeValue(source, attribute);\n    };\n    /**\n     * Determine the DOM element's Flexbox flow (flex-direction).\n     *\n     * Check inline style first then check computed (stylesheet) style.\n     * And optionally add the flow value to element's inline style.\n     */\n    /**\n     * Determine the DOM element's Flexbox flow (flex-direction).\n     *\n     * Check inline style first then check computed (stylesheet) style.\n     * And optionally add the flow value to element's inline style.\n     * @param {?} target\n     * @param {?=} addIfMissing\n     * @return {?}\n     */\n    BaseDirective.prototype._getFlexFlowDirection = /**\n     * Determine the DOM element's Flexbox flow (flex-direction).\n     *\n     * Check inline style first then check computed (stylesheet) style.\n     * And optionally add the flow value to element's inline style.\n     * @param {?} target\n     * @param {?=} addIfMissing\n     * @return {?}\n     */\n    function (target, addIfMissing) {\n        if (addIfMissing === void 0) { addIfMissing = false; }\n        var /** @type {?} */ value = 'row';\n        var /** @type {?} */ hasInlineValue = '';\n        if (target) {\n            _a = this._styler.getFlowDirection(target), value = _a[0], hasInlineValue = _a[1];\n            if (!hasInlineValue && addIfMissing) {\n                var /** @type {?} */ style = buildLayoutCSS(value);\n                var /** @type {?} */ elements = [target];\n                this._styler.applyStyleToElements(style, elements);\n            }\n        }\n        return value.trim() || 'row';\n        var _a;\n    };\n    /**\n     * Applies styles given via string pair or object map to the directive element.\n     */\n    /**\n     * Applies styles given via string pair or object map to the directive element.\n     * @param {?} style\n     * @param {?=} value\n     * @param {?=} element\n     * @return {?}\n     */\n    BaseDirective.prototype._applyStyleToElement = /**\n     * Applies styles given via string pair or object map to the directive element.\n     * @param {?} style\n     * @param {?=} value\n     * @param {?=} element\n     * @return {?}\n     */\n    function (style, value, element) {\n        if (element === void 0) { element = this.nativeElement; }\n        this._styler.applyStyleToElement(element, style, value);\n    };\n    /**\n     * Applies styles given via string pair or object map to the directive's element.\n     */\n    /**\n     * Applies styles given via string pair or object map to the directive's element.\n     * @param {?} style\n     * @param {?} elements\n     * @return {?}\n     */\n    BaseDirective.prototype._applyStyleToElements = /**\n     * Applies styles given via string pair or object map to the directive's element.\n     * @param {?} style\n     * @param {?} elements\n     * @return {?}\n     */\n    function (style, elements) {\n        this._styler.applyStyleToElements(style, elements);\n    };\n    /**\n     *  Save the property value; which may be a complex object.\n     *  Complex objects support property chains\n     */\n    /**\n     *  Save the property value; which may be a complex object.\n     *  Complex objects support property chains\n     * @param {?=} key\n     * @param {?=} source\n     * @return {?}\n     */\n    BaseDirective.prototype._cacheInput = /**\n     *  Save the property value; which may be a complex object.\n     *  Complex objects support property chains\n     * @param {?=} key\n     * @param {?=} source\n     * @return {?}\n     */\n    function (key, source) {\n        if (typeof source === 'object') {\n            for (var /** @type {?} */ prop in source) {\n                this._inputMap[prop] = source[prop];\n            }\n        }\n        else {\n            if (!!key) {\n                this._inputMap[key] = source;\n            }\n        }\n    };\n    /**\n     *  Build a ResponsiveActivation object used to manage subscriptions to mediaChange notifications\n     *  and intelligent lookup of the directive's property value that corresponds to that mediaQuery\n     *  (or closest match).\n     */\n    /**\n     *  Build a ResponsiveActivation object used to manage subscriptions to mediaChange notifications\n     *  and intelligent lookup of the directive's property value that corresponds to that mediaQuery\n     *  (or closest match).\n     * @param {?} key\n     * @param {?} defaultValue\n     * @param {?} onMediaQueryChange\n     * @return {?}\n     */\n    BaseDirective.prototype._listenForMediaQueryChanges = /**\n     *  Build a ResponsiveActivation object used to manage subscriptions to mediaChange notifications\n     *  and intelligent lookup of the directive's property value that corresponds to that mediaQuery\n     *  (or closest match).\n     * @param {?} key\n     * @param {?} defaultValue\n     * @param {?} onMediaQueryChange\n     * @return {?}\n     */\n    function (key, defaultValue, onMediaQueryChange) {\n        // tslint:disable-line:max-line-length\n        if (!this._mqActivation) {\n            var /** @type {?} */ keyOptions = new KeyOptions(key, defaultValue, this._inputMap);\n            this._mqActivation = new ResponsiveActivation(keyOptions, this._mediaMonitor, function (change) { return onMediaQueryChange(change); });\n        }\n        return this._mqActivation;\n    };\n    Object.defineProperty(BaseDirective.prototype, \"childrenNodes\", {\n        /**\n         * Special accessor to query for all child 'element' nodes regardless of type, class, etc.\n         */\n        get: /**\n         * Special accessor to query for all child 'element' nodes regardless of type, class, etc.\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ obj = this.nativeElement.children;\n            var /** @type {?} */ buffer = [];\n            // iterate backwards ensuring that length is an UInt32\n            for (var /** @type {?} */ i = obj.length; i--;) {\n                buffer[i] = obj[i];\n            }\n            return buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Does this directive have 1 or more responsive keys defined\n     * Note: we exclude the 'baseKey' key (which is NOT considered responsive)\n     */\n    /**\n     * Does this directive have 1 or more responsive keys defined\n     * Note: we exclude the 'baseKey' key (which is NOT considered responsive)\n     * @param {?} baseKey\n     * @return {?}\n     */\n    BaseDirective.prototype.hasResponsiveAPI = /**\n     * Does this directive have 1 or more responsive keys defined\n     * Note: we exclude the 'baseKey' key (which is NOT considered responsive)\n     * @param {?} baseKey\n     * @return {?}\n     */\n    function (baseKey) {\n        var /** @type {?} */ totalKeys = Object.keys(this._inputMap).length;\n        var /** @type {?} */ baseValue = this._inputMap[baseKey];\n        return (totalKeys - (!!baseValue ? 1 : 0)) > 0;\n    };\n    /**\n     * Fast validator for presence of attribute on the host element\n     */\n    /**\n     * Fast validator for presence of attribute on the host element\n     * @param {?} key\n     * @return {?}\n     */\n    BaseDirective.prototype.hasKeyValue = /**\n     * Fast validator for presence of attribute on the host element\n     * @param {?} key\n     * @return {?}\n     */\n    function (key) {\n        return this._mqActivation.hasKeyValue(key);\n    };\n    Object.defineProperty(BaseDirective.prototype, \"hasInitialized\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._hasInitialized;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return BaseDirective;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Adapter to the BaseDirective abstract class so it can be used via composition.\n * @see BaseDirective\n */\nvar  /**\n * Adapter to the BaseDirective abstract class so it can be used via composition.\n * @see BaseDirective\n */\nBaseDirectiveAdapter = /** @class */ (function (_super) {\n    __extends(BaseDirectiveAdapter, _super);\n    /**\n     * BaseDirectiveAdapter constructor\n     */\n    function BaseDirectiveAdapter(_baseKey, // non-responsive @Input property name\n    // non-responsive @Input property name\n    _mediaMonitor, _elementRef, _styler) {\n        var _this = _super.call(this, _mediaMonitor, _elementRef, _styler) || this;\n        _this._baseKey = _baseKey;\n        _this._mediaMonitor = _mediaMonitor;\n        _this._elementRef = _elementRef;\n        _this._styler = _styler;\n        return _this;\n    }\n    Object.defineProperty(BaseDirectiveAdapter.prototype, \"activeKey\", {\n        /**\n         * Accessor to determine which @Input property is \"active\"\n         * e.g. which property value will be used.\n         */\n        get: /**\n         * Accessor to determine which \\@Input property is \"active\"\n         * e.g. which property value will be used.\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ mqa = this._mqActivation;\n            var /** @type {?} */ key = mqa ? mqa.activatedInputKey : this._baseKey;\n            // Note: ClassDirective::SimpleChanges uses 'klazz' instead of 'class' as a key\n            return (key === 'class') ? 'klazz' : key;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BaseDirectiveAdapter.prototype, \"inputMap\", {\n        /** Hash map of all @Input keys/values defined/used */\n        get: /**\n         * Hash map of all \\@Input keys/values defined/used\n         * @return {?}\n         */\n        function () {\n            return this._inputMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BaseDirectiveAdapter.prototype, \"mqActivation\", {\n        /**\n         * @see BaseDirective._mqActivation\n         */\n        get: /**\n         * @see BaseDirective._mqActivation\n         * @return {?}\n         */\n        function () {\n            return this._mqActivation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n      * Does this directive have 1 or more responsive keys defined\n      * Note: we exclude the 'baseKey' key (which is NOT considered responsive)\n      */\n    /**\n     * Does this directive have 1 or more responsive keys defined\n     * Note: we exclude the 'baseKey' key (which is NOT considered responsive)\n     * @return {?}\n     */\n    BaseDirectiveAdapter.prototype.hasResponsiveAPI = /**\n     * Does this directive have 1 or more responsive keys defined\n     * Note: we exclude the 'baseKey' key (which is NOT considered responsive)\n     * @return {?}\n     */\n    function () {\n        return _super.prototype.hasResponsiveAPI.call(this, this._baseKey);\n    };\n    /**\n     * @see BaseDirective._queryInput\n     */\n    /**\n     * @see BaseDirective._queryInput\n     * @param {?} key\n     * @return {?}\n     */\n    BaseDirectiveAdapter.prototype.queryInput = /**\n     * @see BaseDirective._queryInput\n     * @param {?} key\n     * @return {?}\n     */\n    function (key) {\n        return key ? this._queryInput(key) : undefined;\n    };\n    /**\n     *  Save the property value.\n     */\n    /**\n     *  Save the property value.\n     * @param {?=} key\n     * @param {?=} source\n     * @param {?=} cacheRaw\n     * @return {?}\n     */\n    BaseDirectiveAdapter.prototype.cacheInput = /**\n     *  Save the property value.\n     * @param {?=} key\n     * @param {?=} source\n     * @param {?=} cacheRaw\n     * @return {?}\n     */\n    function (key, source, cacheRaw) {\n        if (cacheRaw === void 0) { cacheRaw = false; }\n        if (cacheRaw) {\n            this._cacheInputRaw(key, source);\n        }\n        else if (Array.isArray(source)) {\n            this._cacheInputArray(key, source);\n        }\n        else if (typeof source === 'object') {\n            this._cacheInputObject(key, source);\n        }\n        else if (typeof source === 'string') {\n            this._cacheInputString(key, source);\n        }\n        else {\n            throw new Error(\"Invalid class value '\" + key + \"' provided. Did you want to cache the raw value?\");\n        }\n    };\n    /**\n     * @see BaseDirective._listenForMediaQueryChanges\n     */\n    /**\n     * @see BaseDirective._listenForMediaQueryChanges\n     * @param {?} key\n     * @param {?} defaultValue\n     * @param {?} onMediaQueryChange\n     * @return {?}\n     */\n    BaseDirectiveAdapter.prototype.listenForMediaQueryChanges = /**\n     * @see BaseDirective._listenForMediaQueryChanges\n     * @param {?} key\n     * @param {?} defaultValue\n     * @param {?} onMediaQueryChange\n     * @return {?}\n     */\n    function (key, defaultValue, onMediaQueryChange) {\n        return this._listenForMediaQueryChanges(key, defaultValue, onMediaQueryChange);\n    };\n    // ************************************************************\n    // Protected Methods\n    // ************************************************************\n    /**\n     * No implicit transforms of the source.\n     * Required when caching values expected later for KeyValueDiffers\n     */\n    /**\n     * No implicit transforms of the source.\n     * Required when caching values expected later for KeyValueDiffers\n     * @param {?=} key\n     * @param {?=} source\n     * @return {?}\n     */\n    BaseDirectiveAdapter.prototype._cacheInputRaw = /**\n     * No implicit transforms of the source.\n     * Required when caching values expected later for KeyValueDiffers\n     * @param {?=} key\n     * @param {?=} source\n     * @return {?}\n     */\n    function (key, source) {\n        if (key) {\n            this._inputMap[key] = source;\n        }\n    };\n    /**\n     *  Save the property value for Array values.\n     */\n    /**\n     *  Save the property value for Array values.\n     * @param {?=} key\n     * @param {?=} source\n     * @return {?}\n     */\n    BaseDirectiveAdapter.prototype._cacheInputArray = /**\n     *  Save the property value for Array values.\n     * @param {?=} key\n     * @param {?=} source\n     * @return {?}\n     */\n    function (key, source) {\n        if (key === void 0) { key = ''; }\n        this._inputMap[key] = source ? source.join(' ') : '';\n    };\n    /**\n     *  Save the property value for key/value pair values.\n     */\n    /**\n     *  Save the property value for key/value pair values.\n     * @param {?=} key\n     * @param {?=} source\n     * @return {?}\n     */\n    BaseDirectiveAdapter.prototype._cacheInputObject = /**\n     *  Save the property value for key/value pair values.\n     * @param {?=} key\n     * @param {?=} source\n     * @return {?}\n     */\n    function (key, source) {\n        if (key === void 0) { key = ''; }\n        var /** @type {?} */ classes = [];\n        if (source) {\n            for (var /** @type {?} */ prop in source) {\n                if (!!source[prop]) {\n                    classes.push(prop);\n                }\n            }\n        }\n        this._inputMap[key] = classes.join(' ');\n    };\n    /**\n     *  Save the property value for string values.\n     */\n    /**\n     *  Save the property value for string values.\n     * @param {?=} key\n     * @param {?=} source\n     * @return {?}\n     */\n    BaseDirectiveAdapter.prototype._cacheInputString = /**\n     *  Save the property value for string values.\n     * @param {?=} key\n     * @param {?=} source\n     * @return {?}\n     */\n    function (key, source) {\n        if (key === void 0) { key = ''; }\n        this._inputMap[key] = source;\n    };\n    return BaseDirectiveAdapter;\n}(BaseDirective));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @deprecated\n * \\@deletion-target v6.0.0-beta.17\n * Abstract base class for the Layout API styling directives.\n * @abstract\n */\nvar  /**\n * @deprecated\n * \\@deletion-target v6.0.0-beta.17\n * Abstract base class for the Layout API styling directives.\n * @abstract\n */\nBaseFxDirective = /** @class */ (function () {\n    /**\n     * Constructor\n     */\n    function BaseFxDirective(_mediaMonitor, _elementRef, _styler) {\n        this._mediaMonitor = _mediaMonitor;\n        this._elementRef = _elementRef;\n        this._styler = _styler;\n        /**\n         *  Dictionary of input keys with associated values\n         */\n        this._inputMap = {};\n        /**\n         * Has the `ngOnInit()` method fired\n         *\n         * Used to allow *ngFor tasks to finish and support queries like\n         * getComputedStyle() during ngOnInit().\n         */\n        this._hasInitialized = false;\n    }\n    Object.defineProperty(BaseFxDirective.prototype, \"hasMediaQueryListener\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return !!this._mqActivation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BaseFxDirective.prototype, \"activatedValue\", {\n        /**\n         * Imperatively determine the current activated [input] value;\n         * if called before ngOnInit() this will return `undefined`\n         */\n        get: /**\n         * Imperatively determine the current activated [input] value;\n         * if called before ngOnInit() this will return `undefined`\n         * @return {?}\n         */\n        function () {\n            return this._mqActivation ? this._mqActivation.activatedInput : undefined;\n        },\n        /**\n         * Change the currently activated input value and force-update\n         * the injected CSS (by-passing change detection).\n         *\n         * NOTE: Only the currently activated input value will be modified;\n         *       other input values will NOT be affected.\n         */\n        set: /**\n         * Change the currently activated input value and force-update\n         * the injected CSS (by-passing change detection).\n         *\n         * NOTE: Only the currently activated input value will be modified;\n         *       other input values will NOT be affected.\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            var /** @type {?} */ key = 'baseKey', /** @type {?} */ previousVal;\n            if (this._mqActivation) {\n                key = this._mqActivation.activatedInputKey;\n                previousVal = this._inputMap[key];\n                this._inputMap[key] = value;\n            }\n            var /** @type {?} */ change = new SimpleChange(previousVal, value, false);\n            this.ngOnChanges(/** @type {?} */ (_a = {}, _a[key] = change, _a));\n            var _a;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BaseFxDirective.prototype, \"parentElement\", {\n        // *********************************************\n        // Accessor Methods\n        // *********************************************\n        /**\n         * Access to host element's parent DOM node\n         */\n        get: /**\n         * Access to host element's parent DOM node\n         * @return {?}\n         */\n        function () {\n            return this._elementRef.nativeElement.parentNode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BaseFxDirective.prototype, \"nativeElement\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._elementRef.nativeElement;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Access the current value (if any) of the @Input property.\n     */\n    /**\n     * Access the current value (if any) of the \\@Input property.\n     * @param {?} key\n     * @return {?}\n     */\n    BaseFxDirective.prototype._queryInput = /**\n     * Access the current value (if any) of the \\@Input property.\n     * @param {?} key\n     * @return {?}\n     */\n    function (key) {\n        return this._inputMap[key];\n    };\n    // *********************************************\n    // Lifecycle Methods\n    // *********************************************\n    /**\n     * Use post-component-initialization event to perform extra\n     * querying such as computed Display style\n     */\n    /**\n     * Use post-component-initialization event to perform extra\n     * querying such as computed Display style\n     * @return {?}\n     */\n    BaseFxDirective.prototype.ngOnInit = /**\n     * Use post-component-initialization event to perform extra\n     * querying such as computed Display style\n     * @return {?}\n     */\n    function () {\n        this._display = this._getDisplayStyle();\n        this._hasInitialized = true;\n    };\n    /**\n     * @param {?} change\n     * @return {?}\n     */\n    BaseFxDirective.prototype.ngOnChanges = /**\n     * @param {?} change\n     * @return {?}\n     */\n    function (change) {\n        throw new Error(\"BaseFxDirective::ngOnChanges should be overridden in subclass: \" + change);\n    };\n    /**\n     * @return {?}\n     */\n    BaseFxDirective.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this._mqActivation) {\n            this._mqActivation.destroy();\n        }\n        delete this._mediaMonitor;\n    };\n    // *********************************************\n    // Protected Methods\n    // *********************************************\n    /**\n     * Was the directive's default selector used ?\n     * If not, use the fallback value!\n     */\n    /**\n     * Was the directive's default selector used ?\n     * If not, use the fallback value!\n     * @param {?} key\n     * @param {?} fallbackVal\n     * @return {?}\n     */\n    BaseFxDirective.prototype._getDefaultVal = /**\n     * Was the directive's default selector used ?\n     * If not, use the fallback value!\n     * @param {?} key\n     * @param {?} fallbackVal\n     * @return {?}\n     */\n    function (key, fallbackVal) {\n        var /** @type {?} */ val = this._queryInput(key);\n        var /** @type {?} */ hasDefaultVal = (val !== undefined && val !== null);\n        return (hasDefaultVal && val !== '') ? val : fallbackVal;\n    };\n    /**\n     * Quick accessor to the current HTMLElement's `display` style\n     * Note: this allows us to preserve the original style\n     * and optional restore it when the mediaQueries deactivate\n     */\n    /**\n     * Quick accessor to the current HTMLElement's `display` style\n     * Note: this allows us to preserve the original style\n     * and optional restore it when the mediaQueries deactivate\n     * @param {?=} source\n     * @return {?}\n     */\n    BaseFxDirective.prototype._getDisplayStyle = /**\n     * Quick accessor to the current HTMLElement's `display` style\n     * Note: this allows us to preserve the original style\n     * and optional restore it when the mediaQueries deactivate\n     * @param {?=} source\n     * @return {?}\n     */\n    function (source) {\n        if (source === void 0) { source = this.nativeElement; }\n        var /** @type {?} */ query = 'display';\n        return this._styler.lookupStyle(source, query);\n    };\n    /**\n     * Quick accessor to raw attribute value on the target DOM element\n     */\n    /**\n     * Quick accessor to raw attribute value on the target DOM element\n     * @param {?} attribute\n     * @param {?=} source\n     * @return {?}\n     */\n    BaseFxDirective.prototype._getAttributeValue = /**\n     * Quick accessor to raw attribute value on the target DOM element\n     * @param {?} attribute\n     * @param {?=} source\n     * @return {?}\n     */\n    function (attribute, source) {\n        if (source === void 0) { source = this.nativeElement; }\n        return this._styler.lookupAttributeValue(source, attribute);\n    };\n    /**\n     * Determine the DOM element's Flexbox flow (flex-direction).\n     *\n     * Check inline style first then check computed (stylesheet) style.\n     * And optionally add the flow value to element's inline style.\n     */\n    /**\n     * Determine the DOM element's Flexbox flow (flex-direction).\n     *\n     * Check inline style first then check computed (stylesheet) style.\n     * And optionally add the flow value to element's inline style.\n     * @param {?} target\n     * @param {?=} addIfMissing\n     * @return {?}\n     */\n    BaseFxDirective.prototype._getFlowDirection = /**\n     * Determine the DOM element's Flexbox flow (flex-direction).\n     *\n     * Check inline style first then check computed (stylesheet) style.\n     * And optionally add the flow value to element's inline style.\n     * @param {?} target\n     * @param {?=} addIfMissing\n     * @return {?}\n     */\n    function (target, addIfMissing) {\n        if (addIfMissing === void 0) { addIfMissing = false; }\n        var /** @type {?} */ value = 'row';\n        var /** @type {?} */ hasInlineValue = '';\n        if (target) {\n            _a = this._styler.getFlowDirection(target), value = _a[0], hasInlineValue = _a[1];\n            if (!hasInlineValue && addIfMissing) {\n                var /** @type {?} */ style = buildLayoutCSS(value);\n                var /** @type {?} */ elements = [target];\n                this._styler.applyStyleToElements(style, elements);\n            }\n        }\n        return value.trim() || 'row';\n        var _a;\n    };\n    /**\n     * Applies styles given via string pair or object map to the directive element.\n     */\n    /**\n     * Applies styles given via string pair or object map to the directive element.\n     * @param {?} style\n     * @param {?=} value\n     * @param {?=} element\n     * @return {?}\n     */\n    BaseFxDirective.prototype._applyStyleToElement = /**\n     * Applies styles given via string pair or object map to the directive element.\n     * @param {?} style\n     * @param {?=} value\n     * @param {?=} element\n     * @return {?}\n     */\n    function (style, value, element) {\n        if (element === void 0) { element = this.nativeElement; }\n        this._styler.applyStyleToElement(element, style, value);\n    };\n    /**\n     * Applies styles given via string pair or object map to the directive's element.\n     */\n    /**\n     * Applies styles given via string pair or object map to the directive's element.\n     * @param {?} style\n     * @param {?} elements\n     * @return {?}\n     */\n    BaseFxDirective.prototype._applyStyleToElements = /**\n     * Applies styles given via string pair or object map to the directive's element.\n     * @param {?} style\n     * @param {?} elements\n     * @return {?}\n     */\n    function (style, elements) {\n        this._styler.applyStyleToElements(style, elements);\n    };\n    /**\n     *  Save the property value; which may be a complex object.\n     *  Complex objects support property chains\n     */\n    /**\n     *  Save the property value; which may be a complex object.\n     *  Complex objects support property chains\n     * @param {?=} key\n     * @param {?=} source\n     * @return {?}\n     */\n    BaseFxDirective.prototype._cacheInput = /**\n     *  Save the property value; which may be a complex object.\n     *  Complex objects support property chains\n     * @param {?=} key\n     * @param {?=} source\n     * @return {?}\n     */\n    function (key, source) {\n        if (typeof source === 'object') {\n            for (var /** @type {?} */ prop in source) {\n                this._inputMap[prop] = source[prop];\n            }\n        }\n        else {\n            if (!!key) {\n                this._inputMap[key] = source;\n            }\n        }\n    };\n    /**\n     *  Build a ResponsiveActivation object used to manage subscriptions to mediaChange notifications\n     *  and intelligent lookup of the directive's property value that corresponds to that mediaQuery\n     *  (or closest match).\n     */\n    /**\n     *  Build a ResponsiveActivation object used to manage subscriptions to mediaChange notifications\n     *  and intelligent lookup of the directive's property value that corresponds to that mediaQuery\n     *  (or closest match).\n     * @param {?} key\n     * @param {?} defaultValue\n     * @param {?} onMediaQueryChange\n     * @return {?}\n     */\n    BaseFxDirective.prototype._listenForMediaQueryChanges = /**\n     *  Build a ResponsiveActivation object used to manage subscriptions to mediaChange notifications\n     *  and intelligent lookup of the directive's property value that corresponds to that mediaQuery\n     *  (or closest match).\n     * @param {?} key\n     * @param {?} defaultValue\n     * @param {?} onMediaQueryChange\n     * @return {?}\n     */\n    function (key, defaultValue, onMediaQueryChange) {\n        // tslint:disable-line:max-line-length\n        if (!this._mqActivation) {\n            var /** @type {?} */ keyOptions = new KeyOptions(key, defaultValue, this._inputMap);\n            this._mqActivation = new ResponsiveActivation(keyOptions, this._mediaMonitor, function (change) { return onMediaQueryChange(change); });\n        }\n        return this._mqActivation;\n    };\n    Object.defineProperty(BaseFxDirective.prototype, \"childrenNodes\", {\n        /**\n         * Special accessor to query for all child 'element' nodes regardless of type, class, etc.\n         */\n        get: /**\n         * Special accessor to query for all child 'element' nodes regardless of type, class, etc.\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ obj = this.nativeElement.children;\n            var /** @type {?} */ buffer = [];\n            // iterate backwards ensuring that length is an UInt32\n            for (var /** @type {?} */ i = obj.length; i--;) {\n                buffer[i] = obj[i];\n            }\n            return buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Does this directive have 1 or more responsive keys defined\n     * Note: we exclude the 'baseKey' key (which is NOT considered responsive)\n     */\n    /**\n     * Does this directive have 1 or more responsive keys defined\n     * Note: we exclude the 'baseKey' key (which is NOT considered responsive)\n     * @param {?} baseKey\n     * @return {?}\n     */\n    BaseFxDirective.prototype.hasResponsiveAPI = /**\n     * Does this directive have 1 or more responsive keys defined\n     * Note: we exclude the 'baseKey' key (which is NOT considered responsive)\n     * @param {?} baseKey\n     * @return {?}\n     */\n    function (baseKey) {\n        var /** @type {?} */ totalKeys = Object.keys(this._inputMap).length;\n        var /** @type {?} */ baseValue = this._inputMap[baseKey];\n        return (totalKeys - (!!baseValue ? 1 : 0)) > 0;\n    };\n    /**\n     * Fast validator for presence of attribute on the host element\n     */\n    /**\n     * Fast validator for presence of attribute on the host element\n     * @param {?} key\n     * @return {?}\n     */\n    BaseFxDirective.prototype.hasKeyValue = /**\n     * Fast validator for presence of attribute on the host element\n     * @param {?} key\n     * @return {?}\n     */\n    function (key) {\n        return this._mqActivation.hasKeyValue(key);\n    };\n    Object.defineProperty(BaseFxDirective.prototype, \"hasInitialized\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._hasInitialized;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return BaseFxDirective;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * MockMatchMedia mocks calls to the Window API matchMedia with a build of a simulated\n * MockMediaQueryListener. Methods are available to simulate an activation of a mediaQuery\n * range and to clearAll mediaQuery listeners.\n */\nvar MockMatchMedia = /** @class */ (function (_super) {\n    __extends(MockMatchMedia, _super);\n    function MockMatchMedia(_zone, _platformId, _document, _breakpoints) {\n        var _this = _super.call(this, _zone, _platformId, _document) || this;\n        _this._breakpoints = _breakpoints;\n        /**\n         * Special flag used to test BreakPoint registrations with MatchMedia\n         */\n        _this.autoRegisterQueries = true;\n        /**\n         * Allow fallback to overlapping mediaQueries to determine\n         * activatedInput(s).\n         */\n        _this.useOverlaps = false;\n        _this._actives = [];\n        _this._actives = [];\n        return _this;\n    }\n    /** Easy method to clear all listeners for all mediaQueries */\n    /**\n     * Easy method to clear all listeners for all mediaQueries\n     * @return {?}\n     */\n    MockMatchMedia.prototype.clearAll = /**\n     * Easy method to clear all listeners for all mediaQueries\n     * @return {?}\n     */\n    function () {\n        this._registry.forEach(function (mql, _) {\n            mql.destroy();\n        });\n        this._registry.clear();\n        this.useOverlaps = false;\n    };\n    /** Feature to support manual, simulated activation of a mediaQuery. */\n    /**\n     * Feature to support manual, simulated activation of a mediaQuery.\n     * @param {?} mediaQuery\n     * @param {?=} useOverlaps\n     * @return {?}\n     */\n    MockMatchMedia.prototype.activate = /**\n     * Feature to support manual, simulated activation of a mediaQuery.\n     * @param {?} mediaQuery\n     * @param {?=} useOverlaps\n     * @return {?}\n     */\n    function (mediaQuery, useOverlaps) {\n        if (useOverlaps === void 0) { useOverlaps = false; }\n        useOverlaps = useOverlaps || this.useOverlaps;\n        mediaQuery = this._validateQuery(mediaQuery);\n        if (useOverlaps || !this.isActive(mediaQuery)) {\n            this._deactivateAll();\n            this._registerMediaQuery(mediaQuery);\n            this._activateWithOverlaps(mediaQuery, useOverlaps);\n        }\n        return this.hasActivated;\n    };\n    /** Converts an optional mediaQuery alias to a specific, valid mediaQuery */\n    /**\n     * Converts an optional mediaQuery alias to a specific, valid mediaQuery\n     * @param {?} queryOrAlias\n     * @return {?}\n     */\n    MockMatchMedia.prototype._validateQuery = /**\n     * Converts an optional mediaQuery alias to a specific, valid mediaQuery\n     * @param {?} queryOrAlias\n     * @return {?}\n     */\n    function (queryOrAlias) {\n        var /** @type {?} */ bp = this._breakpoints.findByAlias(queryOrAlias);\n        if (bp) {\n            queryOrAlias = bp.mediaQuery;\n        }\n        return queryOrAlias;\n    };\n    /**\n     * Manually activate any overlapping mediaQueries to simulate\n     * similar functionality in the window.matchMedia()\n     * @param {?} mediaQuery\n     * @param {?} useOverlaps\n     * @return {?}\n     */\n    MockMatchMedia.prototype._activateWithOverlaps = /**\n     * Manually activate any overlapping mediaQueries to simulate\n     * similar functionality in the window.matchMedia()\n     * @param {?} mediaQuery\n     * @param {?} useOverlaps\n     * @return {?}\n     */\n    function (mediaQuery, useOverlaps) {\n        if (useOverlaps) {\n            var /** @type {?} */ bp = this._breakpoints.findByQuery(mediaQuery);\n            var /** @type {?} */ alias = bp ? bp.alias : 'unknown';\n            // Simulate activation of overlapping lt-<XXX> ranges\n            switch (alias) {\n                case 'lg':\n                    this._activateByAlias('lt-xl');\n                    break;\n                case 'md':\n                    this._activateByAlias('lt-xl, lt-lg');\n                    break;\n                case 'sm':\n                    this._activateByAlias('lt-xl, lt-lg, lt-md');\n                    break;\n                case 'xs':\n                    this._activateByAlias('lt-xl, lt-lg, lt-md, lt-sm');\n                    break;\n            }\n            // Simulate activate of overlapping gt-<xxxx> mediaQuery ranges\n            switch (alias) {\n                case 'xl':\n                    this._activateByAlias('gt-lg, gt-md, gt-sm, gt-xs');\n                    break;\n                case 'lg':\n                    this._activateByAlias('gt-md, gt-sm, gt-xs');\n                    break;\n                case 'md':\n                    this._activateByAlias('gt-sm, gt-xs');\n                    break;\n                case 'sm':\n                    this._activateByAlias('gt-xs');\n                    break;\n            }\n        }\n        // Activate last since the responsiveActivation is watching *this* mediaQuery\n        return this._activateByQuery(mediaQuery);\n    };\n    /**\n     *\n     * @param {?} aliases\n     * @return {?}\n     */\n    MockMatchMedia.prototype._activateByAlias = /**\n     *\n     * @param {?} aliases\n     * @return {?}\n     */\n    function (aliases) {\n        var _this = this;\n        var /** @type {?} */ activate = function (alias) {\n            var /** @type {?} */ bp = _this._breakpoints.findByAlias(alias);\n            _this._activateByQuery(bp ? bp.mediaQuery : alias);\n        };\n        aliases.split(',').forEach(function (alias) { return activate(alias.trim()); });\n    };\n    /**\n     *\n     * @param {?} mediaQuery\n     * @return {?}\n     */\n    MockMatchMedia.prototype._activateByQuery = /**\n     *\n     * @param {?} mediaQuery\n     * @return {?}\n     */\n    function (mediaQuery) {\n        var /** @type {?} */ mql = /** @type {?} */ (this._registry.get(mediaQuery));\n        var /** @type {?} */ alreadyAdded = this._actives.reduce(function (found, it) {\n            return found || (mql && (it.media === mql.media));\n        }, false);\n        if (mql && !alreadyAdded) {\n            this._actives.push(mql.activate());\n        }\n        return this.hasActivated;\n    };\n    /**\n     * Deactivate all current Mock MQLs\n     * @return {?}\n     */\n    MockMatchMedia.prototype._deactivateAll = /**\n     * Deactivate all current Mock MQLs\n     * @return {?}\n     */\n    function () {\n        if (this._actives.length) {\n            // Deactivate all current MQLs and reset the buffer\n            for (var _i = 0, _a = this._actives; _i < _a.length; _i++) {\n                var it = _a[_i];\n                it.deactivate();\n            }\n            this._actives = [];\n        }\n        return this;\n    };\n    /**\n     * Insure the mediaQuery is registered with MatchMedia\n     * @param {?} mediaQuery\n     * @return {?}\n     */\n    MockMatchMedia.prototype._registerMediaQuery = /**\n     * Insure the mediaQuery is registered with MatchMedia\n     * @param {?} mediaQuery\n     * @return {?}\n     */\n    function (mediaQuery) {\n        if (!this._registry.has(mediaQuery) && this.autoRegisterQueries) {\n            this.registerQuery(mediaQuery);\n        }\n    };\n    /**\n     * Call window.matchMedia() to build a MediaQueryList; which\n     * supports 0..n listeners for activation/deactivation\n     */\n    /**\n     * Call window.matchMedia() to build a MediaQueryList; which\n     * supports 0..n listeners for activation/deactivation\n     * @param {?} query\n     * @return {?}\n     */\n    MockMatchMedia.prototype._buildMQL = /**\n     * Call window.matchMedia() to build a MediaQueryList; which\n     * supports 0..n listeners for activation/deactivation\n     * @param {?} query\n     * @return {?}\n     */\n    function (query) {\n        return new MockMediaQueryList(query);\n    };\n    Object.defineProperty(MockMatchMedia.prototype, \"hasActivated\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return (this._actives.length > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MockMatchMedia.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    MockMatchMedia.ctorParameters = function () { return [\n        { type: NgZone, },\n        { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] },] },\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] },] },\n        { type: BreakPointRegistry, },\n    ]; };\n    return MockMatchMedia;\n}(MatchMedia));\n/**\n * Special internal class to simulate a MediaQueryList and\n * - supports manual activation to simulate mediaQuery matching\n * - manages listeners\n */\nvar  /**\n * Special internal class to simulate a MediaQueryList and\n * - supports manual activation to simulate mediaQuery matching\n * - manages listeners\n */\nMockMediaQueryList = /** @class */ (function () {\n    function MockMediaQueryList(_mediaQuery) {\n        this._mediaQuery = _mediaQuery;\n        this._isActive = false;\n        this._listeners = [];\n    }\n    Object.defineProperty(MockMediaQueryList.prototype, \"matches\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._isActive;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MockMediaQueryList.prototype, \"media\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._mediaQuery;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Destroy the current list by deactivating the\n     * listeners and clearing the internal list\n     */\n    /**\n     * Destroy the current list by deactivating the\n     * listeners and clearing the internal list\n     * @return {?}\n     */\n    MockMediaQueryList.prototype.destroy = /**\n     * Destroy the current list by deactivating the\n     * listeners and clearing the internal list\n     * @return {?}\n     */\n    function () {\n        this.deactivate();\n        this._listeners = [];\n    };\n    /** Notify all listeners that 'matches === TRUE' */\n    /**\n     * Notify all listeners that 'matches === TRUE'\n     * @return {?}\n     */\n    MockMediaQueryList.prototype.activate = /**\n     * Notify all listeners that 'matches === TRUE'\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (!this._isActive) {\n            this._isActive = true;\n            this._listeners.forEach(function (callback) {\n                callback(_this);\n            });\n        }\n        return this;\n    };\n    /** Notify all listeners that 'matches === false' */\n    /**\n     * Notify all listeners that 'matches === false'\n     * @return {?}\n     */\n    MockMediaQueryList.prototype.deactivate = /**\n     * Notify all listeners that 'matches === false'\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this._isActive) {\n            this._isActive = false;\n            this._listeners.forEach(function (callback) {\n                callback(_this);\n            });\n        }\n        return this;\n    };\n    /** Add a listener to our internal list to activate later */\n    /**\n     * Add a listener to our internal list to activate later\n     * @param {?} listener\n     * @return {?}\n     */\n    MockMediaQueryList.prototype.addListener = /**\n     * Add a listener to our internal list to activate later\n     * @param {?} listener\n     * @return {?}\n     */\n    function (listener) {\n        if (this._listeners.indexOf(listener) === -1) {\n            this._listeners.push(listener);\n        }\n        if (this._isActive) {\n            listener(this);\n        }\n    };\n    /** Don't need to remove listeners in the testing environment */\n    /**\n     * Don't need to remove listeners in the testing environment\n     * @param {?} _\n     * @return {?}\n     */\n    MockMediaQueryList.prototype.removeListener = /**\n     * Don't need to remove listeners in the testing environment\n     * @param {?} _\n     * @return {?}\n     */\n    function (_) {\n    };\n    return MockMediaQueryList;\n}());\n/**\n * Pre-configured provider for MockMatchMedia\n */\nvar /** @type {?} */ MockMatchMediaProvider = {\n    // tslint:disable-line:variable-name\n    provide: MatchMedia,\n    useClass: MockMatchMedia\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Special server-only class to simulate a MediaQueryList and\n * - supports manual activation to simulate mediaQuery matching\n * - manages listeners\n */\nvar  /**\n * Special server-only class to simulate a MediaQueryList and\n * - supports manual activation to simulate mediaQuery matching\n * - manages listeners\n */\nServerMediaQueryList = /** @class */ (function () {\n    function ServerMediaQueryList(_mediaQuery) {\n        this._mediaQuery = _mediaQuery;\n        this._isActive = false;\n        this._listeners = [];\n    }\n    Object.defineProperty(ServerMediaQueryList.prototype, \"matches\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._isActive;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ServerMediaQueryList.prototype, \"media\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._mediaQuery;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Destroy the current list by deactivating the\n     * listeners and clearing the internal list\n     */\n    /**\n     * Destroy the current list by deactivating the\n     * listeners and clearing the internal list\n     * @return {?}\n     */\n    ServerMediaQueryList.prototype.destroy = /**\n     * Destroy the current list by deactivating the\n     * listeners and clearing the internal list\n     * @return {?}\n     */\n    function () {\n        this.deactivate();\n        this._listeners = [];\n    };\n    /** Notify all listeners that 'matches === TRUE' */\n    /**\n     * Notify all listeners that 'matches === TRUE'\n     * @return {?}\n     */\n    ServerMediaQueryList.prototype.activate = /**\n     * Notify all listeners that 'matches === TRUE'\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (!this._isActive) {\n            this._isActive = true;\n            this._listeners.forEach(function (callback) {\n                callback(_this);\n            });\n        }\n        return this;\n    };\n    /** Notify all listeners that 'matches === false' */\n    /**\n     * Notify all listeners that 'matches === false'\n     * @return {?}\n     */\n    ServerMediaQueryList.prototype.deactivate = /**\n     * Notify all listeners that 'matches === false'\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this._isActive) {\n            this._isActive = false;\n            this._listeners.forEach(function (callback) {\n                callback(_this);\n            });\n        }\n        return this;\n    };\n    /** Add a listener to our internal list to activate later */\n    /**\n     * Add a listener to our internal list to activate later\n     * @param {?} listener\n     * @return {?}\n     */\n    ServerMediaQueryList.prototype.addListener = /**\n     * Add a listener to our internal list to activate later\n     * @param {?} listener\n     * @return {?}\n     */\n    function (listener) {\n        if (this._listeners.indexOf(listener) === -1) {\n            this._listeners.push(listener);\n        }\n        if (this._isActive) {\n            listener(this);\n        }\n    };\n    /** Don't need to remove listeners in the server environment */\n    /**\n     * Don't need to remove listeners in the server environment\n     * @param {?} _\n     * @return {?}\n     */\n    ServerMediaQueryList.prototype.removeListener = /**\n     * Don't need to remove listeners in the server environment\n     * @param {?} _\n     * @return {?}\n     */\n    function (_) {\n    };\n    return ServerMediaQueryList;\n}());\n/**\n * Special server-only implementation of MatchMedia that uses the above\n * ServerMediaQueryList as its internal representation\n *\n * Also contains methods to activate and deactivate breakpoints\n */\nvar ServerMatchMedia = /** @class */ (function (_super) {\n    __extends(ServerMatchMedia, _super);\n    function ServerMatchMedia(_zone, _platformId, _document) {\n        var _this = _super.call(this, _zone, _platformId, _document) || this;\n        _this._zone = _zone;\n        _this._platformId = _platformId;\n        _this._document = _document;\n        _this._registry = new Map();\n        _this._source = new BehaviorSubject(new MediaChange(true));\n        _this._observable$ = _this._source.asObservable();\n        return _this;\n    }\n    /** Activate the specified breakpoint if we're on the server, no-op otherwise */\n    /**\n     * Activate the specified breakpoint if we're on the server, no-op otherwise\n     * @param {?} bp\n     * @return {?}\n     */\n    ServerMatchMedia.prototype.activateBreakpoint = /**\n     * Activate the specified breakpoint if we're on the server, no-op otherwise\n     * @param {?} bp\n     * @return {?}\n     */\n    function (bp) {\n        var /** @type {?} */ lookupBreakpoint = this._registry.get(bp.mediaQuery);\n        if (lookupBreakpoint) {\n            lookupBreakpoint.activate();\n        }\n    };\n    /** Deactivate the specified breakpoint if we're on the server, no-op otherwise */\n    /**\n     * Deactivate the specified breakpoint if we're on the server, no-op otherwise\n     * @param {?} bp\n     * @return {?}\n     */\n    ServerMatchMedia.prototype.deactivateBreakpoint = /**\n     * Deactivate the specified breakpoint if we're on the server, no-op otherwise\n     * @param {?} bp\n     * @return {?}\n     */\n    function (bp) {\n        var /** @type {?} */ lookupBreakpoint = this._registry.get(bp.mediaQuery);\n        if (lookupBreakpoint) {\n            lookupBreakpoint.deactivate();\n        }\n    };\n    /**\n     * Call window.matchMedia() to build a MediaQueryList; which\n     * supports 0..n listeners for activation/deactivation\n     */\n    /**\n     * Call window.matchMedia() to build a MediaQueryList; which\n     * supports 0..n listeners for activation/deactivation\n     * @param {?} query\n     * @return {?}\n     */\n    ServerMatchMedia.prototype._buildMQL = /**\n     * Call window.matchMedia() to build a MediaQueryList; which\n     * supports 0..n listeners for activation/deactivation\n     * @param {?} query\n     * @return {?}\n     */\n    function (query) {\n        return new ServerMediaQueryList(query);\n    };\n    ServerMatchMedia.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    ServerMatchMedia.ctorParameters = function () { return [\n        { type: NgZone, },\n        { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] },] },\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] },] },\n    ]; };\n    return ServerMatchMedia;\n}(MatchMedia));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * MediaMonitor uses the MatchMedia service to observe mediaQuery changes (both activations and\n * deactivations). These changes are are published as MediaChange notifications.\n *\n * Note: all notifications will be performed within the\n * ng Zone to trigger change detections and component updates.\n *\n * It is the MediaMonitor that:\n *  - auto registers all known breakpoints\n *  - injects alias information into each raw MediaChange event\n *  - provides accessor to the currently active BreakPoint\n *  - publish list of overlapping BreakPoint(s); used by ResponsiveActivation\n */\nvar MediaMonitor = /** @class */ (function () {\n    function MediaMonitor(_breakpoints, _matchMedia) {\n        this._breakpoints = _breakpoints;\n        this._matchMedia = _matchMedia;\n        this._registerBreakpoints();\n    }\n    Object.defineProperty(MediaMonitor.prototype, \"breakpoints\", {\n        /**\n         * Read-only accessor to the list of breakpoints configured in the BreakPointRegistry provider\n         */\n        get: /**\n         * Read-only accessor to the list of breakpoints configured in the BreakPointRegistry provider\n         * @return {?}\n         */\n        function () {\n            return this._breakpoints.items.slice();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MediaMonitor.prototype, \"activeOverlaps\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var _this = this;\n            var /** @type {?} */ items = this._breakpoints.overlappings.reverse();\n            return items.filter(function (bp) {\n                return _this._matchMedia.isActive(bp.mediaQuery);\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MediaMonitor.prototype, \"active\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var _this = this;\n            var /** @type {?} */ found = null, /** @type {?} */ items = this.breakpoints.reverse();\n            items.forEach(function (bp) {\n                if (bp.alias !== '') {\n                    if (!found && _this._matchMedia.isActive(bp.mediaQuery)) {\n                        found = bp;\n                    }\n                }\n            });\n            var /** @type {?} */ first = this.breakpoints[0];\n            return found || (this._matchMedia.isActive(first.mediaQuery) ? first : null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * For the specified mediaQuery alias, is the mediaQuery range active?\n     */\n    /**\n     * For the specified mediaQuery alias, is the mediaQuery range active?\n     * @param {?} alias\n     * @return {?}\n     */\n    MediaMonitor.prototype.isActive = /**\n     * For the specified mediaQuery alias, is the mediaQuery range active?\n     * @param {?} alias\n     * @return {?}\n     */\n    function (alias) {\n        var /** @type {?} */ bp = this._breakpoints.findByAlias(alias) || this._breakpoints.findByQuery(alias);\n        return this._matchMedia.isActive(bp ? bp.mediaQuery : alias);\n    };\n    /**\n     * External observers can watch for all (or a specific) mql changes.\n     * If specific breakpoint is observed, only return *activated* events\n     * otherwise return all events for BOTH activated + deactivated changes.\n     */\n    /**\n     * External observers can watch for all (or a specific) mql changes.\n     * If specific breakpoint is observed, only return *activated* events\n     * otherwise return all events for BOTH activated + deactivated changes.\n     * @param {?=} alias\n     * @return {?}\n     */\n    MediaMonitor.prototype.observe = /**\n     * External observers can watch for all (or a specific) mql changes.\n     * If specific breakpoint is observed, only return *activated* events\n     * otherwise return all events for BOTH activated + deactivated changes.\n     * @param {?=} alias\n     * @return {?}\n     */\n    function (alias) {\n        var /** @type {?} */ bp = this._breakpoints.findByAlias(alias || '') ||\n            this._breakpoints.findByQuery(alias || '');\n        var /** @type {?} */ hasAlias = function (change) { return (bp ? change.mqAlias !== '' : true); };\n        // Note: the raw MediaChange events [from MatchMedia] do not contain important alias information\n        var /** @type {?} */ media$ = this._matchMedia.observe(bp ? bp.mediaQuery : alias);\n        return media$.pipe(map(function (change) { return mergeAlias(change, bp); }), filter(hasAlias));\n    };\n    /**\n     * Immediate calls to matchMedia() to establish listeners\n     * and prepare for immediate subscription notifications\n     * @return {?}\n     */\n    MediaMonitor.prototype._registerBreakpoints = /**\n     * Immediate calls to matchMedia() to establish listeners\n     * and prepare for immediate subscription notifications\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ queries = this._breakpoints.sortedItems.map(function (bp) { return bp.mediaQuery; });\n        this._matchMedia.registerQuery(queries);\n    };\n    MediaMonitor.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */\n    MediaMonitor.ctorParameters = function () { return [\n        { type: BreakPointRegistry, },\n        { type: MatchMedia, },\n    ]; };\n    /** @nocollapse */ MediaMonitor.ngInjectableDef = defineInjectable({ factory: function MediaMonitor_Factory() { return new MediaMonitor(inject(BreakPointRegistry), inject(MatchMedia)); }, token: MediaMonitor, providedIn: \"root\" });\n    return MediaMonitor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Ensure a single global service provider\n * @deprecated\n * \\@deletion-target v6.0.0-beta.16\n * @param {?} parentMonitor\n * @param {?} breakpoints\n * @param {?} matchMedia\n * @return {?}\n */\nfunction MEDIA_MONITOR_PROVIDER_FACTORY(parentMonitor, breakpoints, matchMedia) {\n    return parentMonitor || new MediaMonitor(breakpoints, matchMedia);\n}\n/**\n * Export provider that uses a global service factory (above)\n * @deprecated\n * \\@deletion-target v6.0.0-beta.16\n */\nvar /** @type {?} */ MEDIA_MONITOR_PROVIDER = {\n    provide: MediaMonitor,\n    deps: [\n        [new Optional(), new SkipSelf(), MediaMonitor],\n        BreakPointRegistry,\n        MatchMedia,\n    ],\n    useFactory: MEDIA_MONITOR_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Ensure a single global ObservableMedia service provider\n * @deprecated\n * \\@deletion-target v6.0.0-beta.16\n * @param {?} parentService\n * @param {?} matchMedia\n * @param {?} breakpoints\n * @return {?}\n */\nfunction OBSERVABLE_MEDIA_PROVIDER_FACTORY(parentService, matchMedia, breakpoints) {\n    return parentService || new MediaService(breakpoints, matchMedia);\n}\n/**\n *  Provider to return global service for observable service for all MediaQuery activations\n *  \\@deprecated\n *  \\@deletion-target v6.0.0-beta.16\n */\nvar /** @type {?} */ OBSERVABLE_MEDIA_PROVIDER = {\n    // tslint:disable-line:variable-name\n    provide: ObservableMedia,\n    deps: [\n        [new Optional(), new SkipSelf(), ObservableMedia],\n        MatchMedia,\n        BreakPointRegistry\n    ],\n    useFactory: OBSERVABLE_MEDIA_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Applies CSS prefixes to appropriate style keys.\n *\n * Note: `-ms-`, `-moz` and `-webkit-box` are no longer supported. e.g.\n *    {\n *      display: -webkit-flex;     NEW - Safari 6.1+. iOS 7.1+, BB10\n *      display: flex;             NEW, Spec - Firefox, Chrome, Opera\n *      // display: -webkit-box;   OLD - iOS 6-, Safari 3.1-6, BB7\n *      // display: -ms-flexbox;   TWEENER - IE 10\n *      // display: -moz-flexbox;  OLD - Firefox\n *    }\n * @param {?} target\n * @return {?}\n */\nfunction applyCssPrefixes(target) {\n    for (var /** @type {?} */ key in target) {\n        var /** @type {?} */ value = target[key] || '';\n        switch (key) {\n            case 'display':\n                if (value === 'flex') {\n                    target['display'] = [\n                        '-webkit-flex',\n                        'flex'\n                    ];\n                }\n                else if (value === 'inline-flex') {\n                    target['display'] = [\n                        '-webkit-inline-flex',\n                        'inline-flex'\n                    ];\n                }\n                else {\n                    target['display'] = value;\n                }\n                break;\n            case 'align-items':\n            case 'align-self':\n            case 'align-content':\n            case 'flex':\n            case 'flex-basis':\n            case 'flex-flow':\n            case 'flex-grow':\n            case 'flex-shrink':\n            case 'flex-wrap':\n            case 'justify-content':\n                target['-webkit-' + key] = value;\n                break;\n            case 'flex-direction':\n                value = value || 'row';\n                target['-webkit-flex-direction'] = value;\n                target['flex-direction'] = value;\n                break;\n            case 'order':\n                target['order'] = target['-webkit-' + key] = isNaN(value) ? '0' : value;\n                break;\n        }\n    }\n    return target;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar StyleUtils = /** @class */ (function () {\n    function StyleUtils(_serverStylesheet, _serverModuleLoaded, _platformId, layoutConfig) {\n        this._serverStylesheet = _serverStylesheet;\n        this._serverModuleLoaded = _serverModuleLoaded;\n        this._platformId = _platformId;\n        this.layoutConfig = layoutConfig;\n    }\n    /**\n     * Applies styles given via string pair or object map to the directive element\n     */\n    /**\n     * Applies styles given via string pair or object map to the directive element\n     * @param {?} element\n     * @param {?} style\n     * @param {?=} value\n     * @return {?}\n     */\n    StyleUtils.prototype.applyStyleToElement = /**\n     * Applies styles given via string pair or object map to the directive element\n     * @param {?} element\n     * @param {?} style\n     * @param {?=} value\n     * @return {?}\n     */\n    function (element, style, value) {\n        var /** @type {?} */ styles = {};\n        if (typeof style === 'string') {\n            styles[style] = value;\n            style = styles;\n        }\n        styles = this.layoutConfig.disableVendorPrefixes ? style : applyCssPrefixes(style);\n        this._applyMultiValueStyleToElement(styles, element);\n    };\n    /**\n     * Applies styles given via string pair or object map to the directive's element\n     */\n    /**\n     * Applies styles given via string pair or object map to the directive's element\n     * @param {?} style\n     * @param {?=} elements\n     * @return {?}\n     */\n    StyleUtils.prototype.applyStyleToElements = /**\n     * Applies styles given via string pair or object map to the directive's element\n     * @param {?} style\n     * @param {?=} elements\n     * @return {?}\n     */\n    function (style, elements) {\n        var _this = this;\n        if (elements === void 0) { elements = []; }\n        var /** @type {?} */ styles = this.layoutConfig.disableVendorPrefixes ? style : applyCssPrefixes(style);\n        elements.forEach(function (el) {\n            _this._applyMultiValueStyleToElement(styles, el);\n        });\n    };\n    /**\n     * Determine the DOM element's Flexbox flow (flex-direction)\n     *\n     * Check inline style first then check computed (stylesheet) style\n     */\n    /**\n     * Determine the DOM element's Flexbox flow (flex-direction)\n     *\n     * Check inline style first then check computed (stylesheet) style\n     * @param {?} target\n     * @return {?}\n     */\n    StyleUtils.prototype.getFlowDirection = /**\n     * Determine the DOM element's Flexbox flow (flex-direction)\n     *\n     * Check inline style first then check computed (stylesheet) style\n     * @param {?} target\n     * @return {?}\n     */\n    function (target) {\n        var /** @type {?} */ query = 'flex-direction';\n        var /** @type {?} */ value = this.lookupStyle(target, query);\n        if (value === FALLBACK_STYLE) {\n            value = '';\n        }\n        var /** @type {?} */ hasInlineValue = this.lookupInlineStyle(target, query) ||\n            (isPlatformServer(this._platformId) && this._serverModuleLoaded) ? value : '';\n        return [value || 'row', hasInlineValue];\n    };\n    /**\n     * Find the DOM element's raw attribute value (if any)\n     */\n    /**\n     * Find the DOM element's raw attribute value (if any)\n     * @param {?} element\n     * @param {?} attribute\n     * @return {?}\n     */\n    StyleUtils.prototype.lookupAttributeValue = /**\n     * Find the DOM element's raw attribute value (if any)\n     * @param {?} element\n     * @param {?} attribute\n     * @return {?}\n     */\n    function (element, attribute) {\n        return element.getAttribute(attribute) || '';\n    };\n    /**\n     * Find the DOM element's inline style value (if any)\n     */\n    /**\n     * Find the DOM element's inline style value (if any)\n     * @param {?} element\n     * @param {?} styleName\n     * @return {?}\n     */\n    StyleUtils.prototype.lookupInlineStyle = /**\n     * Find the DOM element's inline style value (if any)\n     * @param {?} element\n     * @param {?} styleName\n     * @return {?}\n     */\n    function (element, styleName) {\n        return isPlatformBrowser(this._platformId) ?\n            element.style[styleName] : this._getServerStyle(element, styleName);\n    };\n    /**\n     * Determine the inline or inherited CSS style\n     * NOTE: platform-server has no implementation for getComputedStyle\n     */\n    /**\n     * Determine the inline or inherited CSS style\n     * NOTE: platform-server has no implementation for getComputedStyle\n     * @param {?} element\n     * @param {?} styleName\n     * @param {?=} inlineOnly\n     * @return {?}\n     */\n    StyleUtils.prototype.lookupStyle = /**\n     * Determine the inline or inherited CSS style\n     * NOTE: platform-server has no implementation for getComputedStyle\n     * @param {?} element\n     * @param {?} styleName\n     * @param {?=} inlineOnly\n     * @return {?}\n     */\n    function (element, styleName, inlineOnly) {\n        if (inlineOnly === void 0) { inlineOnly = false; }\n        var /** @type {?} */ value = '';\n        if (element) {\n            var /** @type {?} */ immediateValue = value = this.lookupInlineStyle(element, styleName);\n            if (!immediateValue) {\n                if (isPlatformBrowser(this._platformId)) {\n                    if (!inlineOnly) {\n                        value = getComputedStyle(element).getPropertyValue(styleName);\n                    }\n                }\n                else {\n                    if (this._serverModuleLoaded) {\n                        value = this._serverStylesheet.getStyleForElement(element, styleName);\n                    }\n                }\n            }\n        }\n        // Note: 'inline' is the default of all elements, unless UA stylesheet overrides;\n        //       in which case getComputedStyle() should determine a valid value.\n        return value ? value.trim() : FALLBACK_STYLE;\n    };\n    /**\n     * Applies the styles to the element. The styles object map may contain an array of values\n     * Each value will be added as element style\n     * Keys are sorted to add prefixed styles (like -webkit-x) first, before the standard ones\n     * @param {?} styles\n     * @param {?} element\n     * @return {?}\n     */\n    StyleUtils.prototype._applyMultiValueStyleToElement = /**\n     * Applies the styles to the element. The styles object map may contain an array of values\n     * Each value will be added as element style\n     * Keys are sorted to add prefixed styles (like -webkit-x) first, before the standard ones\n     * @param {?} styles\n     * @param {?} element\n     * @return {?}\n     */\n    function (styles, element) {\n        var _this = this;\n        Object.keys(styles).sort().forEach(function (key) {\n            var /** @type {?} */ values = Array.isArray(styles[key]) ? styles[key] : [styles[key]];\n            values.sort();\n            for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {\n                var value = values_1[_i];\n                if (isPlatformBrowser(_this._platformId) || !_this._serverModuleLoaded) {\n                    isPlatformBrowser(_this._platformId) ?\n                        element.style.setProperty(key, value) : _this._setServerStyle(element, key, value);\n                }\n                else {\n                    _this._serverStylesheet.addStyleToElement(element, key, value);\n                }\n            }\n        });\n    };\n    /**\n     * @param {?} element\n     * @param {?} styleName\n     * @param {?=} styleValue\n     * @return {?}\n     */\n    StyleUtils.prototype._setServerStyle = /**\n     * @param {?} element\n     * @param {?} styleName\n     * @param {?=} styleValue\n     * @return {?}\n     */\n    function (element, styleName, styleValue) {\n        styleName = styleName.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n        var /** @type {?} */ styleMap = this._readStyleAttribute(element);\n        styleMap[styleName] = styleValue || '';\n        this._writeStyleAttribute(element, styleMap);\n    };\n    /**\n     * @param {?} element\n     * @param {?} styleName\n     * @return {?}\n     */\n    StyleUtils.prototype._getServerStyle = /**\n     * @param {?} element\n     * @param {?} styleName\n     * @return {?}\n     */\n    function (element, styleName) {\n        var /** @type {?} */ styleMap = this._readStyleAttribute(element);\n        return styleMap[styleName] || '';\n    };\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    StyleUtils.prototype._readStyleAttribute = /**\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        var /** @type {?} */ styleMap = {};\n        var /** @type {?} */ styleAttribute = element.getAttribute('style');\n        if (styleAttribute) {\n            var /** @type {?} */ styleList = styleAttribute.split(/;+/g);\n            for (var /** @type {?} */ i = 0; i < styleList.length; i++) {\n                var /** @type {?} */ style = styleList[i].trim();\n                if (style.length > 0) {\n                    var /** @type {?} */ colonIndex = style.indexOf(':');\n                    if (colonIndex === -1) {\n                        throw new Error(\"Invalid CSS style: \" + style);\n                    }\n                    var /** @type {?} */ name_1 = style.substr(0, colonIndex).trim();\n                    styleMap[name_1] = style.substr(colonIndex + 1).trim();\n                }\n            }\n        }\n        return styleMap;\n    };\n    /**\n     * @param {?} element\n     * @param {?} styleMap\n     * @return {?}\n     */\n    StyleUtils.prototype._writeStyleAttribute = /**\n     * @param {?} element\n     * @param {?} styleMap\n     * @return {?}\n     */\n    function (element, styleMap) {\n        var /** @type {?} */ styleAttrValue = '';\n        for (var /** @type {?} */ key in styleMap) {\n            var /** @type {?} */ newValue = styleMap[key];\n            if (newValue) {\n                styleAttrValue += key + ':' + styleMap[key] + ';';\n            }\n        }\n        element.setAttribute('style', styleAttrValue);\n    };\n    StyleUtils.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */\n    StyleUtils.ctorParameters = function () { return [\n        { type: StylesheetMap, decorators: [{ type: Optional },] },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [SERVER_TOKEN,] },] },\n        { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] },] },\n        { type: undefined, decorators: [{ type: Inject, args: [LAYOUT_CONFIG,] },] },\n    ]; };\n    /** @nocollapse */ StyleUtils.ngInjectableDef = defineInjectable({ factory: function StyleUtils_Factory() { return new StyleUtils(inject(StylesheetMap, 8), inject(SERVER_TOKEN, 8), inject(PLATFORM_ID), inject(LAYOUT_CONFIG)); }, token: StyleUtils, providedIn: \"root\" });\n    return StyleUtils;\n}());\nvar /** @type {?} */ FALLBACK_STYLE = 'block';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * The flex API permits 3 or 1 parts of the value:\n *    - `flex-grow flex-shrink flex-basis`, or\n *    - `flex-basis`\n * @param {?} basis\n * @param {?=} grow\n * @param {?=} shrink\n * @return {?}\n */\nfunction validateBasis(basis, grow, shrink) {\n    if (grow === void 0) { grow = '1'; }\n    if (shrink === void 0) { shrink = '1'; }\n    var /** @type {?} */ parts = [grow, shrink, basis];\n    var /** @type {?} */ j = basis.indexOf('calc');\n    if (j > 0) {\n        parts[2] = _validateCalcValue(basis.substring(j).trim());\n        var /** @type {?} */ matches = basis.substr(0, j).trim().split(' ');\n        if (matches.length == 2) {\n            parts[0] = matches[0];\n            parts[1] = matches[1];\n        }\n    }\n    else if (j == 0) {\n        parts[2] = _validateCalcValue(basis.trim());\n    }\n    else {\n        var /** @type {?} */ matches = basis.split(' ');\n        parts = (matches.length === 3) ? matches : [\n            grow, shrink, basis\n        ];\n    }\n    return parts;\n}\n/**\n * Calc expressions require whitespace before & after any expression operators\n * This is a simple, crude whitespace padding solution.\n *   - '3 3 calc(15em + 20px)'\n *   - calc(100% / 7 * 2)\n *   - 'calc(15em + 20px)'\n *   - 'calc(15em+20px)'\n *   - '37px'\n *   = '43%'\n * @param {?} calc\n * @return {?}\n */\nfunction _validateCalcValue(calc) {\n    return calc.replace(/[\\s]/g, '').replace(/[\\/\\*\\+\\-]/g, ' $& ');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nexport { removeStyles, BROWSER_PROVIDER, CLASS_NAME, CoreModule, MediaChange, StylesheetMap, STYLESHEET_MAP_PROVIDER_FACTORY, STYLESHEET_MAP_PROVIDER, DEFAULT_CONFIG, LAYOUT_CONFIG, SERVER_TOKEN, BREAKPOINT, BaseDirective, BaseDirectiveAdapter, BaseFxDirective, RESPONSIVE_ALIASES, DEFAULT_BREAKPOINTS, ScreenTypes, ORIENTATION_BREAKPOINTS, BreakPointRegistry, BREAKPOINTS, MatchMedia, MockMatchMedia, MockMediaQueryList, MockMatchMediaProvider, ServerMediaQueryList, ServerMatchMedia, MediaMonitor, MEDIA_MONITOR_PROVIDER_FACTORY, MEDIA_MONITOR_PROVIDER, ObservableMedia, MediaService, ObservableMediaProvider, OBSERVABLE_MEDIA_PROVIDER_FACTORY, OBSERVABLE_MEDIA_PROVIDER, KeyOptions, ResponsiveActivation, StyleUtils, validateBasis };\n//# sourceMappingURL=core.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { __extends } from 'tslib';\nimport { Directive, ElementRef, Input, Inject, Optional, PLATFORM_ID, IterableDiffers, KeyValueDiffers, Renderer2, Self, SecurityContext, NgModule } from '@angular/core';\nimport { isPlatformServer, NgClass, NgStyle } from '@angular/common';\nimport { BaseDirective, MediaMonitor, SERVER_TOKEN, StyleUtils, BaseDirectiveAdapter, CoreModule } from '@angular/flex-layout/core';\nimport { LayoutDirective } from '@angular/flex-layout/flex';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * This directive provides a responsive API for the HTML <img> 'src' attribute\n * and will update the img.src property upon each responsive activation.\n *\n * e.g.\n *      <img src=\"defaultScene.jpg\" src.xs=\"mobileScene.jpg\"></img>\n *\n * @see https://css-tricks.com/responsive-images-youre-just-changing-resolutions-use-src/\n */\nvar ImgSrcDirective = /** @class */ (function (_super) {\n    __extends(ImgSrcDirective, _super);\n    /* tslint:enable */\n    function ImgSrcDirective(_elRef, _monitor, _styler, _platformId, _serverModuleLoaded) {\n        var _this = _super.call(this, _monitor, _elRef, _styler) || this;\n        _this._elRef = _elRef;\n        _this._monitor = _monitor;\n        _this._styler = _styler;\n        _this._platformId = _platformId;\n        _this._serverModuleLoaded = _serverModuleLoaded;\n        _this._cacheInput('src', _elRef.nativeElement.getAttribute('src') || '');\n        if (isPlatformServer(_this._platformId) && _this._serverModuleLoaded) {\n            _this.nativeElement.setAttribute('src', '');\n        }\n        return _this;\n    }\n    Object.defineProperty(ImgSrcDirective.prototype, \"srcBase\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this.cacheDefaultSrc(val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImgSrcDirective.prototype, \"srcXs\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('srcXs', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImgSrcDirective.prototype, \"srcSm\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('srcSm', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImgSrcDirective.prototype, \"srcMd\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('srcMd', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImgSrcDirective.prototype, \"srcLg\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('srcLg', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImgSrcDirective.prototype, \"srcXl\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('srcXl', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImgSrcDirective.prototype, \"srcLtSm\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('srcLtSm', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImgSrcDirective.prototype, \"srcLtMd\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('srcLtMd', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImgSrcDirective.prototype, \"srcLtLg\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('srcLtLg', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImgSrcDirective.prototype, \"srcLtXl\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('srcLtXl', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImgSrcDirective.prototype, \"srcGtXs\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('srcGtXs', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImgSrcDirective.prototype, \"srcGtSm\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('srcGtSm', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImgSrcDirective.prototype, \"srcGtMd\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('srcGtMd', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImgSrcDirective.prototype, \"srcGtLg\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('srcGtLg', val); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Listen for responsive changes to update the img.src attribute\n     */\n    /**\n     * Listen for responsive changes to update the img.src attribute\n     * @return {?}\n     */\n    ImgSrcDirective.prototype.ngOnInit = /**\n     * Listen for responsive changes to update the img.src attribute\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        _super.prototype.ngOnInit.call(this);\n        if (this.hasResponsiveKeys) {\n            // Listen for responsive changes\n            this._listenForMediaQueryChanges('src', this.defaultSrc, function () {\n                _this._updateSrcFor();\n            });\n        }\n        this._updateSrcFor();\n    };\n    /**\n     * Update the 'src' property of the host <img> element\n     */\n    /**\n     * Update the 'src' property of the host <img> element\n     * @return {?}\n     */\n    ImgSrcDirective.prototype.ngOnChanges = /**\n     * Update the 'src' property of the host <img> element\n     * @return {?}\n     */\n    function () {\n        if (this.hasInitialized) {\n            this._updateSrcFor();\n        }\n    };\n    /**\n     * Use the [responsively] activated input value to update\n     * the host img src attribute or assign a default `img.src=''`\n     * if the src has not been defined.\n     *\n     * Do nothing to standard `<img src=\"\">` usages, only when responsive\n     * keys are present do we actually call `setAttribute()`\n     */\n    /**\n     * Use the [responsively] activated input value to update\n     * the host img src attribute or assign a default `img.src=''`\n     * if the src has not been defined.\n     *\n     * Do nothing to standard `<img src=\"\">` usages, only when responsive\n     * keys are present do we actually call `setAttribute()`\n     * @return {?}\n     */\n    ImgSrcDirective.prototype._updateSrcFor = /**\n     * Use the [responsively] activated input value to update\n     * the host img src attribute or assign a default `img.src=''`\n     * if the src has not been defined.\n     *\n     * Do nothing to standard `<img src=\"\">` usages, only when responsive\n     * keys are present do we actually call `setAttribute()`\n     * @return {?}\n     */\n    function () {\n        if (this.hasResponsiveKeys) {\n            var /** @type {?} */ url = this.activatedValue || this.defaultSrc;\n            if (isPlatformServer(this._platformId) && this._serverModuleLoaded) {\n                this._styler.applyStyleToElement(this.nativeElement, { 'content': url ? \"url(\" + url + \")\" : '' });\n            }\n            else {\n                this.nativeElement.setAttribute('src', String(url));\n            }\n        }\n    };\n    /**\n     * Cache initial value of 'src', this will be used as fallback when breakpoint\n     * activations change.\n     * NOTE: The default 'src' property is not bound using @Input(), so perform\n     * a post-ngOnInit() lookup of the default src value (if any).\n     */\n    /**\n     * Cache initial value of 'src', this will be used as fallback when breakpoint\n     * activations change.\n     * NOTE: The default 'src' property is not bound using \\@Input(), so perform\n     * a post-ngOnInit() lookup of the default src value (if any).\n     * @param {?=} value\n     * @return {?}\n     */\n    ImgSrcDirective.prototype.cacheDefaultSrc = /**\n     * Cache initial value of 'src', this will be used as fallback when breakpoint\n     * activations change.\n     * NOTE: The default 'src' property is not bound using \\@Input(), so perform\n     * a post-ngOnInit() lookup of the default src value (if any).\n     * @param {?=} value\n     * @return {?}\n     */\n    function (value) {\n        this._cacheInput('src', value || '');\n    };\n    Object.defineProperty(ImgSrcDirective.prototype, \"defaultSrc\", {\n        /**\n         * Empty values are maintained, undefined values are exposed as ''\n         */\n        get: /**\n         * Empty values are maintained, undefined values are exposed as ''\n         * @return {?}\n         */\n        function () {\n            return this._queryInput('src') || '';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImgSrcDirective.prototype, \"hasResponsiveKeys\", {\n        /**\n         * Does the <img> have 1 or more src.<xxx> responsive inputs\n         * defined... these will be mapped to activated breakpoints.\n         */\n        get: /**\n         * Does the <img> have 1 or more src.<xxx> responsive inputs\n         * defined... these will be mapped to activated breakpoints.\n         * @return {?}\n         */\n        function () {\n            return Object.keys(this._inputMap).length > 1;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ImgSrcDirective.decorators = [\n        { type: Directive, args: [{\n                    selector: \"\\n  img[src.xs],    img[src.sm],    img[src.md],    img[src.lg],   img[src.xl],\\n  img[src.lt-sm], img[src.lt-md], img[src.lt-lg], img[src.lt-xl],\\n  img[src.gt-xs], img[src.gt-sm], img[src.gt-md], img[src.gt-lg]\\n\"\n                },] },\n    ];\n    /** @nocollapse */\n    ImgSrcDirective.ctorParameters = function () { return [\n        { type: ElementRef, },\n        { type: MediaMonitor, },\n        { type: StyleUtils, },\n        { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] },] },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [SERVER_TOKEN,] },] },\n    ]; };\n    ImgSrcDirective.propDecorators = {\n        \"srcBase\": [{ type: Input, args: ['src',] },],\n        \"srcXs\": [{ type: Input, args: ['src.xs',] },],\n        \"srcSm\": [{ type: Input, args: ['src.sm',] },],\n        \"srcMd\": [{ type: Input, args: ['src.md',] },],\n        \"srcLg\": [{ type: Input, args: ['src.lg',] },],\n        \"srcXl\": [{ type: Input, args: ['src.xl',] },],\n        \"srcLtSm\": [{ type: Input, args: ['src.lt-sm',] },],\n        \"srcLtMd\": [{ type: Input, args: ['src.lt-md',] },],\n        \"srcLtLg\": [{ type: Input, args: ['src.lt-lg',] },],\n        \"srcLtXl\": [{ type: Input, args: ['src.lt-xl',] },],\n        \"srcGtXs\": [{ type: Input, args: ['src.gt-xs',] },],\n        \"srcGtSm\": [{ type: Input, args: ['src.gt-sm',] },],\n        \"srcGtMd\": [{ type: Input, args: ['src.gt-md',] },],\n        \"srcGtLg\": [{ type: Input, args: ['src.gt-lg',] },],\n    };\n    return ImgSrcDirective;\n}(BaseDirective));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Directive to add responsive support for ngClass.\n * This maintains the core functionality of 'ngClass' and adds responsive API\n * Note: this class is a no-op when rendered on the server\n */\nvar ClassDirective = /** @class */ (function (_super) {\n    __extends(ClassDirective, _super);\n    /* tslint:enable */\n    function ClassDirective(monitor, _iterableDiffers, _keyValueDiffers, _ngEl, _renderer, _ngClassInstance, _styler) {\n        var _this = _super.call(this, monitor, _ngEl, _styler) || this;\n        _this.monitor = monitor;\n        _this._iterableDiffers = _iterableDiffers;\n        _this._keyValueDiffers = _keyValueDiffers;\n        _this._ngEl = _ngEl;\n        _this._renderer = _renderer;\n        _this._ngClassInstance = _ngClassInstance;\n        _this._styler = _styler;\n        _this._configureAdapters();\n        return _this;\n    }\n    Object.defineProperty(ClassDirective.prototype, \"ngClassBase\", {\n        set: /**\n         * Intercept ngClass assignments so we cache the default classes\n         * which are merged with activated styles or used as fallbacks.\n         * Note: Base ngClass values are applied during ngDoCheck()\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) {\n            var /** @type {?} */ key = 'ngClass';\n            this._base.cacheInput(key, val, true);\n            this._ngClassInstance.ngClass = this._base.queryInput(key);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ClassDirective.prototype, \"klazz\", {\n        set: /**\n         * Capture class assignments so we cache the default classes\n         * which are merged with activated styles and used as fallbacks.\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) {\n            var /** @type {?} */ key = 'class';\n            this._base.cacheInput(key, val);\n            this._ngClassInstance.klass = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ClassDirective.prototype, \"ngClassXs\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._base.cacheInput('ngClassXs', val, true); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ClassDirective.prototype, \"ngClassSm\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._base.cacheInput('ngClassSm', val, true); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ClassDirective.prototype, \"ngClassMd\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._base.cacheInput('ngClassMd', val, true); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ClassDirective.prototype, \"ngClassLg\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._base.cacheInput('ngClassLg', val, true); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ClassDirective.prototype, \"ngClassXl\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._base.cacheInput('ngClassXl', val, true); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ClassDirective.prototype, \"ngClassLtSm\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._base.cacheInput('ngClassLtSm', val, true); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ClassDirective.prototype, \"ngClassLtMd\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._base.cacheInput('ngClassLtMd', val, true); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ClassDirective.prototype, \"ngClassLtLg\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._base.cacheInput('ngClassLtLg', val, true); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ClassDirective.prototype, \"ngClassLtXl\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._base.cacheInput('ngClassLtXl', val, true); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ClassDirective.prototype, \"ngClassGtXs\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._base.cacheInput('ngClassGtXs', val, true); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ClassDirective.prototype, \"ngClassGtSm\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._base.cacheInput('ngClassGtSm', val, true); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ClassDirective.prototype, \"ngClassGtMd\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._base.cacheInput('ngClassGtMd', val, true); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ClassDirective.prototype, \"ngClassGtLg\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._base.cacheInput('ngClassGtLg', val, true); },\n        enumerable: true,\n        configurable: true\n    });\n    // ******************************************************************\n    // Lifecycle Hooks\n    // ******************************************************************\n    /**\n     * For @Input changes on the current mq activation property\n     */\n    /**\n     * For \\@Input changes on the current mq activation property\n     * @param {?} changes\n     * @return {?}\n     */\n    ClassDirective.prototype.ngOnChanges = /**\n     * For \\@Input changes on the current mq activation property\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        if (this._base.activeKey in changes) {\n            this._ngClassInstance.ngClass = this._base.mqActivation.activatedInput || '';\n        }\n    };\n    /**\n     * @return {?}\n     */\n    ClassDirective.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        this._configureMQListener();\n    };\n    /**\n     * For ChangeDetectionStrategy.onPush and ngOnChanges() updates\n     */\n    /**\n     * For ChangeDetectionStrategy.onPush and ngOnChanges() updates\n     * @return {?}\n     */\n    ClassDirective.prototype.ngDoCheck = /**\n     * For ChangeDetectionStrategy.onPush and ngOnChanges() updates\n     * @return {?}\n     */\n    function () {\n        this._ngClassInstance.ngDoCheck();\n    };\n    /**\n     * @return {?}\n     */\n    ClassDirective.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._base.ngOnDestroy();\n        delete this._ngClassInstance;\n    };\n    // ******************************************************************\n    // Internal Methods\n    // ******************************************************************\n    /**\n     * Configure adapters (that delegate to an internal ngClass instance) if responsive\n     * keys have been defined.\n     */\n    /**\n     * Configure adapters (that delegate to an internal ngClass instance) if responsive\n     * keys have been defined.\n     * @return {?}\n     */\n    ClassDirective.prototype._configureAdapters = /**\n     * Configure adapters (that delegate to an internal ngClass instance) if responsive\n     * keys have been defined.\n     * @return {?}\n     */\n    function () {\n        this._base = new BaseDirectiveAdapter('ngClass', this.monitor, this._ngEl, this._styler);\n        if (!this._ngClassInstance) {\n            // Create an instance NgClass Directive instance only if `ngClass=\"\"` has NOT been defined on\n            // the same host element; since the responsive variations may be defined...\n            this._ngClassInstance = new NgClass(this._iterableDiffers, this._keyValueDiffers, this._ngEl, this._renderer);\n        }\n    };\n    /**\n     * Build an mqActivation object that bridges mql change events to onMediaQueryChange handlers\n     * NOTE: We delegate subsequent activity to the NgClass logic\n     *       Identify the activated input value and update the ngClass iterables...\n     *       Use ngDoCheck() to actually apply the values to the element\n     */\n    /**\n     * Build an mqActivation object that bridges mql change events to onMediaQueryChange handlers\n     * NOTE: We delegate subsequent activity to the NgClass logic\n     *       Identify the activated input value and update the ngClass iterables...\n     *       Use ngDoCheck() to actually apply the values to the element\n     * @param {?=} baseKey\n     * @return {?}\n     */\n    ClassDirective.prototype._configureMQListener = /**\n     * Build an mqActivation object that bridges mql change events to onMediaQueryChange handlers\n     * NOTE: We delegate subsequent activity to the NgClass logic\n     *       Identify the activated input value and update the ngClass iterables...\n     *       Use ngDoCheck() to actually apply the values to the element\n     * @param {?=} baseKey\n     * @return {?}\n     */\n    function (baseKey) {\n        var _this = this;\n        if (baseKey === void 0) { baseKey = 'ngClass'; }\n        var /** @type {?} */ fallbackValue = this._base.queryInput(baseKey);\n        this._base.listenForMediaQueryChanges(baseKey, fallbackValue, function (changes) {\n            _this._ngClassInstance.ngClass = changes.value || '';\n            _this._ngClassInstance.ngDoCheck();\n        });\n    };\n    ClassDirective.decorators = [\n        { type: Directive, args: [{\n                    selector: \"\\n    [ngClass.xs], [ngClass.sm], [ngClass.md], [ngClass.lg], [ngClass.xl],\\n    [ngClass.lt-sm], [ngClass.lt-md], [ngClass.lt-lg], [ngClass.lt-xl],\\n    [ngClass.gt-xs], [ngClass.gt-sm], [ngClass.gt-md], [ngClass.gt-lg]\\n  \"\n                },] },\n    ];\n    /** @nocollapse */\n    ClassDirective.ctorParameters = function () { return [\n        { type: MediaMonitor, },\n        { type: IterableDiffers, },\n        { type: KeyValueDiffers, },\n        { type: ElementRef, },\n        { type: Renderer2, },\n        { type: NgClass, decorators: [{ type: Optional }, { type: Self },] },\n        { type: StyleUtils, },\n    ]; };\n    ClassDirective.propDecorators = {\n        \"ngClassBase\": [{ type: Input, args: ['ngClass',] },],\n        \"klazz\": [{ type: Input, args: ['class',] },],\n        \"ngClassXs\": [{ type: Input, args: ['ngClass.xs',] },],\n        \"ngClassSm\": [{ type: Input, args: ['ngClass.sm',] },],\n        \"ngClassMd\": [{ type: Input, args: ['ngClass.md',] },],\n        \"ngClassLg\": [{ type: Input, args: ['ngClass.lg',] },],\n        \"ngClassXl\": [{ type: Input, args: ['ngClass.xl',] },],\n        \"ngClassLtSm\": [{ type: Input, args: ['ngClass.lt-sm',] },],\n        \"ngClassLtMd\": [{ type: Input, args: ['ngClass.lt-md',] },],\n        \"ngClassLtLg\": [{ type: Input, args: ['ngClass.lt-lg',] },],\n        \"ngClassLtXl\": [{ type: Input, args: ['ngClass.lt-xl',] },],\n        \"ngClassGtXs\": [{ type: Input, args: ['ngClass.gt-xs',] },],\n        \"ngClassGtSm\": [{ type: Input, args: ['ngClass.gt-sm',] },],\n        \"ngClassGtMd\": [{ type: Input, args: ['ngClass.gt-md',] },],\n        \"ngClassGtLg\": [{ type: Input, args: ['ngClass.gt-lg',] },],\n    };\n    return ClassDirective;\n}(BaseDirective));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar /** @type {?} */ FALSY = ['false', false, 0];\n/**\n * For fxHide selectors, we invert the 'value'\n * and assign to the equivalent fxShow selector cache\n *  - When 'hide' === '' === true, do NOT show the element\n *  - When 'hide' === false or 0... we WILL show the element\n * @param {?} hide\n * @return {?}\n */\nfunction negativeOf(hide) {\n    return (hide === '') ? false :\n        ((hide === 'false') || (hide === 0)) ? true : !hide;\n}\n/**\n * 'show' Layout API directive\n *\n */\nvar ShowHideDirective = /** @class */ (function (_super) {\n    __extends(ShowHideDirective, _super);\n    /* tslint:enable */\n    /**\n     *\n     */\n    function ShowHideDirective(monitor, layout, elRef, styleUtils, platformId, serverModuleLoaded) {\n        var _this = _super.call(this, monitor, elRef, styleUtils) || this;\n        _this.layout = layout;\n        _this.elRef = elRef;\n        _this.styleUtils = styleUtils;\n        _this.platformId = platformId;\n        _this.serverModuleLoaded = serverModuleLoaded;\n        if (layout) {\n            /**\n                   * The Layout can set the display:flex (and incorrectly affect the Hide/Show directives.\n                   * Whenever Layout [on the same element] resets its CSS, then update the Hide/Show CSS\n                   */\n            /**\n             * The Layout can set the display:flex (and incorrectly affect the Hide/Show directives.\n             * Whenever Layout [on the same element] resets its CSS, then update the Hide/Show CSS\n             */\n            _this._layoutWatcher = layout.layout$.subscribe(function () { return _this._updateWithValue(); });\n        }\n        return _this;\n    }\n    Object.defineProperty(ShowHideDirective.prototype, \"show\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('show', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShowHideDirective.prototype, \"showXs\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('showXs', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShowHideDirective.prototype, \"showSm\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('showSm', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShowHideDirective.prototype, \"showMd\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('showMd', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShowHideDirective.prototype, \"showLg\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('showLg', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShowHideDirective.prototype, \"showXl\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('showXl', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShowHideDirective.prototype, \"showLtSm\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('showLtSm', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShowHideDirective.prototype, \"showLtMd\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('showLtMd', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShowHideDirective.prototype, \"showLtLg\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('showLtLg', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShowHideDirective.prototype, \"showLtXl\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('showLtXl', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShowHideDirective.prototype, \"showGtXs\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('showGtXs', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShowHideDirective.prototype, \"showGtSm\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('showGtSm', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShowHideDirective.prototype, \"showGtMd\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('showGtMd', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShowHideDirective.prototype, \"showGtLg\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('showGtLg', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShowHideDirective.prototype, \"hide\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('show', negativeOf(val)); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShowHideDirective.prototype, \"hideXs\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('showXs', negativeOf(val)); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShowHideDirective.prototype, \"hideSm\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('showSm', negativeOf(val)); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShowHideDirective.prototype, \"hideMd\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('showMd', negativeOf(val)); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShowHideDirective.prototype, \"hideLg\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('showLg', negativeOf(val)); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShowHideDirective.prototype, \"hideXl\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('showXl', negativeOf(val)); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShowHideDirective.prototype, \"hideLtSm\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('showLtSm', negativeOf(val)); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShowHideDirective.prototype, \"hideLtMd\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('showLtMd', negativeOf(val)); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShowHideDirective.prototype, \"hideLtLg\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('showLtLg', negativeOf(val)); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShowHideDirective.prototype, \"hideLtXl\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('showLtXl', negativeOf(val)); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShowHideDirective.prototype, \"hideGtXs\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('showGtXs', negativeOf(val)); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShowHideDirective.prototype, \"hideGtSm\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('showGtSm', negativeOf(val)); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShowHideDirective.prototype, \"hideGtMd\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('showGtMd', negativeOf(val)); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShowHideDirective.prototype, \"hideGtLg\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('showGtLg', negativeOf(val)); },\n        enumerable: true,\n        configurable: true\n    });\n    // *********************************************\n    // Lifecycle Methods\n    // *********************************************\n    /**\n     * Override accessor to the current HTMLElement's `display` style\n     * Note: Show/Hide will not change the display to 'flex' but will set it to 'block'\n     * unless it was already explicitly specified inline or in a CSS stylesheet.\n     */\n    /**\n     * Override accessor to the current HTMLElement's `display` style\n     * Note: Show/Hide will not change the display to 'flex' but will set it to 'block'\n     * unless it was already explicitly specified inline or in a CSS stylesheet.\n     * @return {?}\n     */\n    ShowHideDirective.prototype._getDisplayStyle = /**\n     * Override accessor to the current HTMLElement's `display` style\n     * Note: Show/Hide will not change the display to 'flex' but will set it to 'block'\n     * unless it was already explicitly specified inline or in a CSS stylesheet.\n     * @return {?}\n     */\n    function () {\n        return this.layout ? 'flex' : _super.prototype._getDisplayStyle.call(this);\n    };\n    /**\n     * On changes to any @Input properties...\n     * Default to use the non-responsive Input value ('fxShow')\n     * Then conditionally override with the mq-activated Input's current value\n     */\n    /**\n     * On changes to any \\@Input properties...\n     * Default to use the non-responsive Input value ('fxShow')\n     * Then conditionally override with the mq-activated Input's current value\n     * @param {?} changes\n     * @return {?}\n     */\n    ShowHideDirective.prototype.ngOnChanges = /**\n     * On changes to any \\@Input properties...\n     * Default to use the non-responsive Input value ('fxShow')\n     * Then conditionally override with the mq-activated Input's current value\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        if (this.hasInitialized && (changes['show'] != null || this._mqActivation)) {\n            this._updateWithValue();\n        }\n    };\n    /**\n     * After the initial onChanges, build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     */\n    /**\n     * After the initial onChanges, build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     * @return {?}\n     */\n    ShowHideDirective.prototype.ngOnInit = /**\n     * After the initial onChanges, build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        _super.prototype.ngOnInit.call(this);\n        var /** @type {?} */ value = this._getDefaultVal('show', true);\n        // Build _mqActivation controller\n        this._listenForMediaQueryChanges('show', value, function (changes) {\n            _this._updateWithValue(changes.value);\n        });\n        this._updateWithValue();\n    };\n    /**\n     * @return {?}\n     */\n    ShowHideDirective.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        _super.prototype.ngOnDestroy.call(this);\n        if (this._layoutWatcher) {\n            this._layoutWatcher.unsubscribe();\n        }\n    };\n    // *********************************************\n    // Protected methods\n    // *********************************************\n    /** Validate the visibility value and then update the host's inline display style */\n    /**\n     * Validate the visibility value and then update the host's inline display style\n     * @param {?=} value\n     * @return {?}\n     */\n    ShowHideDirective.prototype._updateWithValue = /**\n     * Validate the visibility value and then update the host's inline display style\n     * @param {?=} value\n     * @return {?}\n     */\n    function (value) {\n        value = value || this._getDefaultVal('show', true);\n        if (this._mqActivation) {\n            value = this._mqActivation.activatedInput;\n        }\n        var /** @type {?} */ shouldShow = this._validateTruthy(value);\n        this._applyStyleToElement(this._buildCSS(shouldShow));\n        if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n            this.nativeElement.style.setProperty('display', '');\n        }\n    };\n    /** Build the CSS that should be assigned to the element instance */\n    /**\n     * Build the CSS that should be assigned to the element instance\n     * @param {?} show\n     * @return {?}\n     */\n    ShowHideDirective.prototype._buildCSS = /**\n     * Build the CSS that should be assigned to the element instance\n     * @param {?} show\n     * @return {?}\n     */\n    function (show) {\n        return { 'display': show ? this._display : 'none' };\n    };\n    /**  Validate the to be not FALSY */\n    /**\n     * Validate the to be not FALSY\n     * @param {?} show\n     * @return {?}\n     */\n    ShowHideDirective.prototype._validateTruthy = /**\n     * Validate the to be not FALSY\n     * @param {?} show\n     * @return {?}\n     */\n    function (show) {\n        return (FALSY.indexOf(show) == -1);\n    };\n    ShowHideDirective.decorators = [\n        { type: Directive, args: [{\n                    selector: \"\\n  [fxShow],\\n  [fxShow.xs], [fxShow.sm], [fxShow.md], [fxShow.lg], [fxShow.xl],\\n  [fxShow.lt-sm], [fxShow.lt-md], [fxShow.lt-lg], [fxShow.lt-xl],\\n  [fxShow.gt-xs], [fxShow.gt-sm], [fxShow.gt-md], [fxShow.gt-lg],\\n  [fxHide],\\n  [fxHide.xs], [fxHide.sm], [fxHide.md], [fxHide.lg], [fxHide.xl],\\n  [fxHide.lt-sm], [fxHide.lt-md], [fxHide.lt-lg], [fxHide.lt-xl],\\n  [fxHide.gt-xs], [fxHide.gt-sm], [fxHide.gt-md], [fxHide.gt-lg]\\n\"\n                },] },\n    ];\n    /** @nocollapse */\n    ShowHideDirective.ctorParameters = function () { return [\n        { type: MediaMonitor, },\n        { type: LayoutDirective, decorators: [{ type: Optional }, { type: Self },] },\n        { type: ElementRef, },\n        { type: StyleUtils, },\n        { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] },] },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [SERVER_TOKEN,] },] },\n    ]; };\n    ShowHideDirective.propDecorators = {\n        \"show\": [{ type: Input, args: ['fxShow',] },],\n        \"showXs\": [{ type: Input, args: ['fxShow.xs',] },],\n        \"showSm\": [{ type: Input, args: ['fxShow.sm',] },],\n        \"showMd\": [{ type: Input, args: ['fxShow.md',] },],\n        \"showLg\": [{ type: Input, args: ['fxShow.lg',] },],\n        \"showXl\": [{ type: Input, args: ['fxShow.xl',] },],\n        \"showLtSm\": [{ type: Input, args: ['fxShow.lt-sm',] },],\n        \"showLtMd\": [{ type: Input, args: ['fxShow.lt-md',] },],\n        \"showLtLg\": [{ type: Input, args: ['fxShow.lt-lg',] },],\n        \"showLtXl\": [{ type: Input, args: ['fxShow.lt-xl',] },],\n        \"showGtXs\": [{ type: Input, args: ['fxShow.gt-xs',] },],\n        \"showGtSm\": [{ type: Input, args: ['fxShow.gt-sm',] },],\n        \"showGtMd\": [{ type: Input, args: ['fxShow.gt-md',] },],\n        \"showGtLg\": [{ type: Input, args: ['fxShow.gt-lg',] },],\n        \"hide\": [{ type: Input, args: ['fxHide',] },],\n        \"hideXs\": [{ type: Input, args: ['fxHide.xs',] },],\n        \"hideSm\": [{ type: Input, args: ['fxHide.sm',] },],\n        \"hideMd\": [{ type: Input, args: ['fxHide.md',] },],\n        \"hideLg\": [{ type: Input, args: ['fxHide.lg',] },],\n        \"hideXl\": [{ type: Input, args: ['fxHide.xl',] },],\n        \"hideLtSm\": [{ type: Input, args: ['fxHide.lt-sm',] },],\n        \"hideLtMd\": [{ type: Input, args: ['fxHide.lt-md',] },],\n        \"hideLtLg\": [{ type: Input, args: ['fxHide.lt-lg',] },],\n        \"hideLtXl\": [{ type: Input, args: ['fxHide.lt-xl',] },],\n        \"hideGtXs\": [{ type: Input, args: ['fxHide.gt-xs',] },],\n        \"hideGtSm\": [{ type: Input, args: ['fxHide.gt-sm',] },],\n        \"hideGtMd\": [{ type: Input, args: ['fxHide.gt-md',] },],\n        \"hideGtLg\": [{ type: Input, args: ['fxHide.gt-lg',] },],\n    };\n    return ShowHideDirective;\n}(BaseDirective));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\n * similar to Object.assign.\n *\n * @param {?} dest The object which will have properties copied to it.\n * @param {...?} sources The source objects from which properties will be copied.\n * @return {?}\n */\nfunction extendObject(dest) {\n    var sources = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        sources[_i - 1] = arguments[_i];\n    }\n    if (dest == null) {\n        throw TypeError('Cannot convert undefined or null to object');\n    }\n    for (var _a = 0, sources_1 = sources; _a < sources_1.length; _a++) {\n        var source = sources_1[_a];\n        if (source != null) {\n            for (var /** @type {?} */ key in source) {\n                if (source.hasOwnProperty(key)) {\n                    dest[key] = source[key];\n                }\n            }\n        }\n    }\n    return dest;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * NgStyle allowed inputs\n */\nvar /**\n * NgStyle allowed inputs\n */\nNgStyleKeyValue = /** @class */ (function () {\n    function NgStyleKeyValue(key, value, noQuotes) {\n        if (noQuotes === void 0) { noQuotes = true; }\n        this.key = key;\n        this.value = value;\n        this.key = noQuotes ? key.replace(/['\"]/g, '').trim() : key.trim();\n        this.value = noQuotes ? value.replace(/['\"]/g, '').trim() : value.trim();\n        this.value = this.value.replace(/;/, '');\n    }\n    return NgStyleKeyValue;\n}());\n/**\n * Transform Operators for \\@angular/flex-layout NgStyle Directive\n */\nvar /** @type {?} */ ngStyleUtils = {\n    getType: getType,\n    buildRawList: buildRawList,\n    buildMapFromList: buildMapFromList,\n    buildMapFromSet: buildMapFromSet\n};\n/**\n * @param {?} target\n * @return {?}\n */\nfunction getType(target) {\n    var /** @type {?} */ what = typeof target;\n    if (what === 'object') {\n        return (target.constructor === Array) ? 'array' :\n            (target.constructor === Set) ? 'set' : 'object';\n    }\n    return what;\n}\n/**\n * Split string of key:value pairs into Array of k-v pairs\n * e.g.  'key:value; key:value; key:value;' -> ['key:value',...]\n * @param {?} source\n * @param {?=} delimiter\n * @return {?}\n */\nfunction buildRawList(source, delimiter) {\n    if (delimiter === void 0) { delimiter = ';'; }\n    return String(source)\n        .trim()\n        .split(delimiter)\n        .map(function (val) { return val.trim(); })\n        .filter(function (val) { return val !== ''; });\n}\n/**\n * Convert array of key:value strings to a iterable map object\n * @param {?} styles\n * @param {?=} sanitize\n * @return {?}\n */\nfunction buildMapFromList(styles, sanitize) {\n    var /** @type {?} */ sanitizeValue = function (it) {\n        if (sanitize) {\n            it.value = sanitize(it.value);\n        }\n        return it;\n    };\n    return styles\n        .map(stringToKeyValue)\n        .filter(function (entry) { return !!entry; })\n        .map(sanitizeValue)\n        .reduce(keyValuesToMap, {});\n}\n/**\n * Convert Set<string> or raw Object to an iterable NgStyleMap\n * @param {?} source\n * @param {?=} sanitize\n * @return {?}\n */\nfunction buildMapFromSet(source, sanitize) {\n    var /** @type {?} */ list = new Array();\n    if (getType(source) == 'set') {\n        source.forEach(function (entry) { return list.push(entry); });\n    }\n    else {\n        // simple hashmap\n        Object.keys(source).forEach(function (key) {\n            list.push(key + \":\" + source[key]);\n        });\n    }\n    return buildMapFromList(list, sanitize);\n}\n/**\n * Convert 'key:value' -> [key, value]\n * @param {?} it\n * @return {?}\n */\nfunction stringToKeyValue(it) {\n    var _a = it.split(':'), key = _a[0], val = _a[1];\n    return val ? new NgStyleKeyValue(key, val) : null;\n}\n/**\n * Convert [ [key,value] ] -> { key : value }\n * @param {?} map\n * @param {?} entry\n * @return {?}\n */\nfunction keyValuesToMap(map, entry) {\n    if (!!entry.key) {\n        map[entry.key] = entry.value;\n    }\n    return map;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Directive to add responsive support for ngStyle.\n *\n */\nvar StyleDirective = /** @class */ (function (_super) {\n    __extends(StyleDirective, _super);\n    /* tslint:enable */\n    /**\n     *  Constructor for the ngStyle subclass; which adds selectors and\n     *  a MediaQuery Activation Adapter\n     */\n    function StyleDirective(monitor, _sanitizer, _ngEl, _renderer, _differs, _ngStyleInstance, _styler) {\n        var _this = _super.call(this, monitor, _ngEl, _styler) || this;\n        _this.monitor = monitor;\n        _this._sanitizer = _sanitizer;\n        _this._ngEl = _ngEl;\n        _this._renderer = _renderer;\n        _this._differs = _differs;\n        _this._ngStyleInstance = _ngStyleInstance;\n        _this._styler = _styler;\n        _this._configureAdapters();\n        return _this;\n    }\n    Object.defineProperty(StyleDirective.prototype, \"ngStyleBase\", {\n        set: /**\n         * Intercept ngStyle assignments so we cache the default styles\n         * which are merged with activated styles or used as fallbacks.\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) {\n            var /** @type {?} */ key = 'ngStyle';\n            this._base.cacheInput(key, val, true); // convert val to hashmap\n            this._ngStyleInstance.ngStyle = this._base.queryInput(key);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StyleDirective.prototype, \"ngStyleXs\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._base.cacheInput('ngStyleXs', val, true); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StyleDirective.prototype, \"ngStyleSm\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._base.cacheInput('ngStyleSm', val, true); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StyleDirective.prototype, \"ngStyleMd\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._base.cacheInput('ngStyleMd', val, true); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StyleDirective.prototype, \"ngStyleLg\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._base.cacheInput('ngStyleLg', val, true); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StyleDirective.prototype, \"ngStyleXl\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._base.cacheInput('ngStyleXl', val, true); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StyleDirective.prototype, \"ngStyleLtSm\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._base.cacheInput('ngStyleLtSm', val, true); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StyleDirective.prototype, \"ngStyleLtMd\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._base.cacheInput('ngStyleLtMd', val, true); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StyleDirective.prototype, \"ngStyleLtLg\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._base.cacheInput('ngStyleLtLg', val, true); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StyleDirective.prototype, \"ngStyleLtXl\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._base.cacheInput('ngStyleLtXl', val, true); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StyleDirective.prototype, \"ngStyleGtXs\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._base.cacheInput('ngStyleGtXs', val, true); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StyleDirective.prototype, \"ngStyleGtSm\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._base.cacheInput('ngStyleGtSm', val, true); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StyleDirective.prototype, \"ngStyleGtMd\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._base.cacheInput('ngStyleGtMd', val, true); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StyleDirective.prototype, \"ngStyleGtLg\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._base.cacheInput('ngStyleGtLg', val, true); },\n        enumerable: true,\n        configurable: true\n    });\n    // ******************************************************************\n    // Lifecycle Hooks\n    // ******************************************************************\n    /**\n     * For @Input changes on the current mq activation property\n     */\n    /**\n     * For \\@Input changes on the current mq activation property\n     * @param {?} changes\n     * @return {?}\n     */\n    StyleDirective.prototype.ngOnChanges = /**\n     * For \\@Input changes on the current mq activation property\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        if (this._base.activeKey in changes) {\n            this._ngStyleInstance.ngStyle = this._base.mqActivation.activatedInput || '';\n        }\n    };\n    /**\n     * @return {?}\n     */\n    StyleDirective.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        this._configureMQListener();\n    };\n    /**\n     * For ChangeDetectionStrategy.onPush and ngOnChanges() updates\n     */\n    /**\n     * For ChangeDetectionStrategy.onPush and ngOnChanges() updates\n     * @return {?}\n     */\n    StyleDirective.prototype.ngDoCheck = /**\n     * For ChangeDetectionStrategy.onPush and ngOnChanges() updates\n     * @return {?}\n     */\n    function () {\n        this._ngStyleInstance.ngDoCheck();\n    };\n    /**\n     * @return {?}\n     */\n    StyleDirective.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._base.ngOnDestroy();\n        delete this._ngStyleInstance;\n    };\n    // ******************************************************************\n    // Internal Methods\n    // ******************************************************************\n    /**\n       * Configure adapters (that delegate to an internal ngClass instance) if responsive\n       * keys have been defined.\n       */\n    /**\n     * Configure adapters (that delegate to an internal ngClass instance) if responsive\n     * keys have been defined.\n     * @return {?}\n     */\n    StyleDirective.prototype._configureAdapters = /**\n     * Configure adapters (that delegate to an internal ngClass instance) if responsive\n     * keys have been defined.\n     * @return {?}\n     */\n    function () {\n        this._base = new BaseDirectiveAdapter('ngStyle', this.monitor, this._ngEl, this._styler);\n        if (!this._ngStyleInstance) {\n            // Create an instance NgClass Directive instance only if `ngClass=\"\"` has NOT been\n            // defined on the same host element; since the responsive variations may be defined...\n            this._ngStyleInstance = new NgStyle(this._differs, this._ngEl, this._renderer);\n        }\n        this._buildCacheInterceptor();\n        this._fallbackToStyle();\n    };\n    /**\n     * Build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     */\n    /**\n     * Build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     * @param {?=} baseKey\n     * @return {?}\n     */\n    StyleDirective.prototype._configureMQListener = /**\n     * Build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     * @param {?=} baseKey\n     * @return {?}\n     */\n    function (baseKey) {\n        var _this = this;\n        if (baseKey === void 0) { baseKey = 'ngStyle'; }\n        var /** @type {?} */ fallbackValue = this._base.queryInput(baseKey);\n        this._base.listenForMediaQueryChanges(baseKey, fallbackValue, function (changes) {\n            _this._ngStyleInstance.ngStyle = changes.value || '';\n            _this._ngStyleInstance.ngDoCheck();\n        });\n    };\n    // ************************************************************************\n    // Private Internal Methods\n    // ************************************************************************\n    /**\n     * Build intercept to convert raw strings to ngStyleMap\n     */\n    /**\n     * Build intercept to convert raw strings to ngStyleMap\n     * @return {?}\n     */\n    StyleDirective.prototype._buildCacheInterceptor = /**\n     * Build intercept to convert raw strings to ngStyleMap\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ cacheInput = this._base.cacheInput.bind(this._base);\n        this._base.cacheInput = function (key, source, cacheRaw, merge) {\n            if (cacheRaw === void 0) { cacheRaw = false; }\n            if (merge === void 0) { merge = true; }\n            var /** @type {?} */ styles = _this._buildStyleMap(source);\n            if (merge) {\n                styles = extendObject({}, _this._base.inputMap['ngStyle'], styles);\n            }\n            cacheInput(key, styles, cacheRaw);\n        };\n    };\n    /**\n     * Convert raw strings to ngStyleMap; which is required by ngStyle\n     * NOTE: Raw string key-value pairs MUST be delimited by `;`\n     *       Comma-delimiters are not supported due to complexities of\n     *       possible style values such as `rgba(x,x,x,x)` and others\n     */\n    /**\n     * Convert raw strings to ngStyleMap; which is required by ngStyle\n     * NOTE: Raw string key-value pairs MUST be delimited by `;`\n     *       Comma-delimiters are not supported due to complexities of\n     *       possible style values such as `rgba(x,x,x,x)` and others\n     * @param {?} styles\n     * @return {?}\n     */\n    StyleDirective.prototype._buildStyleMap = /**\n     * Convert raw strings to ngStyleMap; which is required by ngStyle\n     * NOTE: Raw string key-value pairs MUST be delimited by `;`\n     *       Comma-delimiters are not supported due to complexities of\n     *       possible style values such as `rgba(x,x,x,x)` and others\n     * @param {?} styles\n     * @return {?}\n     */\n    function (styles) {\n        var _this = this;\n        var /** @type {?} */ sanitizer = function (val) {\n            // Always safe-guard (aka sanitize) style property values\n            return _this._sanitizer.sanitize(SecurityContext.STYLE, val) || '';\n        };\n        if (styles) {\n            switch (ngStyleUtils.getType(styles)) {\n                case 'string': return ngStyleUtils.buildMapFromList(ngStyleUtils.buildRawList(styles), sanitizer);\n                case 'array': return ngStyleUtils.buildMapFromList(/** @type {?} */ (styles), sanitizer);\n                case 'set': return ngStyleUtils.buildMapFromSet(styles, sanitizer);\n                default: return ngStyleUtils.buildMapFromSet(styles, sanitizer);\n            }\n        }\n        return styles;\n    };\n    /**\n     * Initial lookup of raw 'class' value (if any)\n     */\n    /**\n     * Initial lookup of raw 'class' value (if any)\n     * @return {?}\n     */\n    StyleDirective.prototype._fallbackToStyle = /**\n     * Initial lookup of raw 'class' value (if any)\n     * @return {?}\n     */\n    function () {\n        if (!this._base.queryInput('ngStyle')) {\n            this.ngStyleBase = this._getAttributeValue('style') || '';\n        }\n    };\n    StyleDirective.decorators = [\n        { type: Directive, args: [{\n                    selector: \"\\n    [ngStyle.xs], [ngStyle.sm], [ngStyle.md], [ngStyle.lg], [ngStyle.xl],\\n    [ngStyle.lt-sm], [ngStyle.lt-md], [ngStyle.lt-lg], [ngStyle.lt-xl],\\n    [ngStyle.gt-xs], [ngStyle.gt-sm], [ngStyle.gt-md], [ngStyle.gt-lg]\\n  \"\n                },] },\n    ];\n    /** @nocollapse */\n    StyleDirective.ctorParameters = function () { return [\n        { type: MediaMonitor, },\n        { type: DomSanitizer, },\n        { type: ElementRef, },\n        { type: Renderer2, },\n        { type: KeyValueDiffers, },\n        { type: NgStyle, decorators: [{ type: Optional }, { type: Self },] },\n        { type: StyleUtils, },\n    ]; };\n    StyleDirective.propDecorators = {\n        \"ngStyleBase\": [{ type: Input, args: ['ngStyle',] },],\n        \"ngStyleXs\": [{ type: Input, args: ['ngStyle.xs',] },],\n        \"ngStyleSm\": [{ type: Input, args: ['ngStyle.sm',] },],\n        \"ngStyleMd\": [{ type: Input, args: ['ngStyle.md',] },],\n        \"ngStyleLg\": [{ type: Input, args: ['ngStyle.lg',] },],\n        \"ngStyleXl\": [{ type: Input, args: ['ngStyle.xl',] },],\n        \"ngStyleLtSm\": [{ type: Input, args: ['ngStyle.lt-sm',] },],\n        \"ngStyleLtMd\": [{ type: Input, args: ['ngStyle.lt-md',] },],\n        \"ngStyleLtLg\": [{ type: Input, args: ['ngStyle.lt-lg',] },],\n        \"ngStyleLtXl\": [{ type: Input, args: ['ngStyle.lt-xl',] },],\n        \"ngStyleGtXs\": [{ type: Input, args: ['ngStyle.gt-xs',] },],\n        \"ngStyleGtSm\": [{ type: Input, args: ['ngStyle.gt-sm',] },],\n        \"ngStyleGtMd\": [{ type: Input, args: ['ngStyle.gt-md',] },],\n        \"ngStyleGtLg\": [{ type: Input, args: ['ngStyle.gt-lg',] },],\n    };\n    return StyleDirective;\n}(BaseDirective));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar /** @type {?} */ ALL_DIRECTIVES = [\n    ShowHideDirective,\n    ClassDirective,\n    StyleDirective,\n    ImgSrcDirective\n];\n/**\n * *****************************************************************\n * Define module for the Extended API\n * *****************************************************************\n */\nvar ExtendedModule = /** @class */ (function () {\n    function ExtendedModule() {\n    }\n    ExtendedModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [CoreModule],\n                    declarations: ALL_DIRECTIVES.slice(),\n                    exports: ALL_DIRECTIVES.slice()\n                },] },\n    ];\n    /** @nocollapse */\n    ExtendedModule.ctorParameters = function () { return []; };\n    return ExtendedModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nexport { ExtendedModule, ClassDirective, ImgSrcDirective, negativeOf, ShowHideDirective, StyleDirective };\n//# sourceMappingURL=extended.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Version, Inject, NgModule, Optional, PLATFORM_ID } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\nimport { SERVER_TOKEN, DEFAULT_CONFIG, LAYOUT_CONFIG, BREAKPOINT } from '@angular/flex-layout/core';\nexport { removeStyles, BROWSER_PROVIDER, CLASS_NAME, CoreModule, MediaChange, StylesheetMap, STYLESHEET_MAP_PROVIDER_FACTORY, STYLESHEET_MAP_PROVIDER, DEFAULT_CONFIG, LAYOUT_CONFIG, SERVER_TOKEN, BREAKPOINT, BaseDirective, BaseDirectiveAdapter, BaseFxDirective, RESPONSIVE_ALIASES, DEFAULT_BREAKPOINTS, ScreenTypes, ORIENTATION_BREAKPOINTS, BreakPointRegistry, BREAKPOINTS, MatchMedia, MockMatchMedia, MockMediaQueryList, MockMatchMediaProvider, ServerMediaQueryList, ServerMatchMedia, MediaMonitor, MEDIA_MONITOR_PROVIDER_FACTORY, MEDIA_MONITOR_PROVIDER, ObservableMedia, MediaService, ObservableMediaProvider, OBSERVABLE_MEDIA_PROVIDER_FACTORY, OBSERVABLE_MEDIA_PROVIDER, KeyOptions, ResponsiveActivation, StyleUtils, validateBasis } from '@angular/flex-layout/core';\nimport { ExtendedModule } from '@angular/flex-layout/extended';\nexport { ExtendedModule, ClassDirective, ImgSrcDirective, negativeOf, ShowHideDirective, StyleDirective } from '@angular/flex-layout/extended';\nimport { FlexModule } from '@angular/flex-layout/flex';\nexport { FlexModule, FlexDirective, FlexAlignDirective, FlexFillDirective, FlexOffsetDirective, FlexOrderDirective, LayoutDirective, LayoutAlignDirective, LayoutGapDirective } from '@angular/flex-layout/flex';\nimport { GridModule } from '@angular/flex-layout/grid';\nexport { ɵb, ɵc, ɵd, ɵe, ɵf, ɵg, ɵh, ɵi, ɵa, ɵj, ɵk, GridModule } from '@angular/flex-layout/grid';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Current version of Angular Flex-Layout.\n */\nvar /** @type {?} */ VERSION = new Version('6.0.0-beta.16');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n *\n */\nvar FlexLayoutModule = /** @class */ (function () {\n    function FlexLayoutModule(serverModuleLoaded, platformId) {\n        if (isPlatformServer(platformId) && !serverModuleLoaded) {\n            console.warn('Warning: Flex Layout loaded on the server without FlexLayoutServerModule');\n        }\n    }\n    /**\n     * Initialize the FlexLayoutModule with a set of config options,\n     * which sets the corresponding tokens accordingly\n     */\n    /**\n     * Initialize the FlexLayoutModule with a set of config options,\n     * which sets the corresponding tokens accordingly\n     * @param {?} configOptions\n     * @param {?=} breakpoints\n     * @return {?}\n     */\n    FlexLayoutModule.withConfig = /**\n     * Initialize the FlexLayoutModule with a set of config options,\n     * which sets the corresponding tokens accordingly\n     * @param {?} configOptions\n     * @param {?=} breakpoints\n     * @return {?}\n     */\n    function (configOptions, breakpoints) {\n        var /** @type {?} */ config = Object.assign({}, DEFAULT_CONFIG);\n        var /** @type {?} */ moduleProviders = [];\n        for (var /** @type {?} */ key in configOptions) {\n            // If the setting is different and not undefined or null, change it\n            if (configOptions[key] !== config[key] &&\n                (configOptions[key] === false || configOptions[key] === true)) {\n                config[key] = configOptions[key];\n            }\n        }\n        if (configOptions.serverLoaded) {\n            moduleProviders.push({ provide: SERVER_TOKEN, useValue: true });\n        }\n        if (Array.isArray(breakpoints)) {\n            moduleProviders.push({ provide: BREAKPOINT, useValue: breakpoints, multi: true });\n        }\n        moduleProviders.push({ provide: LAYOUT_CONFIG, useValue: config });\n        return {\n            ngModule: FlexLayoutModule,\n            providers: moduleProviders\n        };\n    };\n    FlexLayoutModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [FlexModule, ExtendedModule, GridModule],\n                    exports: [FlexModule, ExtendedModule, GridModule]\n                },] },\n    ];\n    /** @nocollapse */\n    FlexLayoutModule.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [SERVER_TOKEN,] },] },\n        { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] },] },\n    ]; };\n    return FlexLayoutModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nexport { VERSION, FlexLayoutModule };\n//# sourceMappingURL=flex-layout.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { __extends } from 'tslib';\nimport { Directive, ElementRef, Input, Self, Optional, NgZone, Inject, SkipSelf, NgModule } from '@angular/core';\nimport { BaseDirective, MediaMonitor, StyleUtils, LAYOUT_CONFIG, validateBasis, CoreModule } from '@angular/flex-layout/core';\nimport { ReplaySubject } from 'rxjs';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nvar /** @type {?} */ INLINE = 'inline';\nvar /** @type {?} */ LAYOUT_VALUES = ['row', 'column', 'row-reverse', 'column-reverse'];\n/**\n * Validate the direction|'direction wrap' value and then update the host's inline flexbox styles\n * @param {?} value\n * @return {?}\n */\nfunction buildLayoutCSS(value) {\n    var _a = validateValue(value), direction = _a[0], wrap = _a[1], isInline = _a[2];\n    return buildCSS(direction, wrap, isInline);\n}\n/**\n * Validate the value to be one of the acceptable value options\n * Use default fallback of 'row'\n * @param {?} value\n * @return {?}\n */\nfunction validateValue(value) {\n    value = value ? value.toLowerCase() : '';\n    var _a = value.split(' '), direction = _a[0], wrap = _a[1], inline = _a[2];\n    // First value must be the `flex-direction`\n    if (!LAYOUT_VALUES.find(function (x) { return x === direction; })) {\n        direction = LAYOUT_VALUES[0];\n    }\n    if (wrap === INLINE) {\n        wrap = (inline !== INLINE) ? inline : '';\n        inline = INLINE;\n    }\n    return [direction, validateWrapValue(wrap), !!inline];\n}\n/**\n * Determine if the validated, flex-direction value specifies\n * a horizontal/row flow.\n * @param {?} value\n * @return {?}\n */\nfunction isFlowHorizontal(value) {\n    var flow = validateValue(value)[0];\n    return flow.indexOf('row') > -1;\n}\n/**\n * Convert layout-wrap='<value>' to expected flex-wrap style\n * @param {?} value\n * @return {?}\n */\nfunction validateWrapValue(value) {\n    if (!!value) {\n        switch (value.toLowerCase()) {\n            case 'reverse':\n            case 'wrap-reverse':\n            case 'reverse-wrap':\n                value = 'wrap-reverse';\n                break;\n            case 'no':\n            case 'none':\n            case 'nowrap':\n                value = 'nowrap';\n                break;\n            // All other values fallback to 'wrap'\n            default:\n                value = 'wrap';\n                break;\n        }\n    }\n    return value;\n}\n/**\n * Build the CSS that should be assigned to the element instance\n * BUG:\n *   1) min-height on a column flex container won’t apply to its flex item children in IE 10-11.\n *      Use height instead if possible; height : <xxx>vh;\n *\n *  This way any padding or border specified on the child elements are\n *  laid out and drawn inside that element's specified width and height.\n * @param {?} direction\n * @param {?=} wrap\n * @param {?=} inline\n * @return {?}\n */\nfunction buildCSS(direction, wrap, inline) {\n    if (wrap === void 0) { wrap = null; }\n    if (inline === void 0) { inline = false; }\n    return {\n        'display': inline ? 'inline-flex' : 'flex',\n        'box-sizing': 'border-box',\n        'flex-direction': direction,\n        'flex-wrap': !!wrap ? wrap : null\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * 'layout' flexbox styling directive\n * Defines the positioning flow direction for the child elements: row or column\n * Optional values: column or row (default)\n * @see https://css-tricks.com/almanac/properties/f/flex-direction/\n *\n */\nvar LayoutDirective = /** @class */ (function (_super) {\n    __extends(LayoutDirective, _super);\n    /* tslint:enable */\n    /**\n     *\n     */\n    function LayoutDirective(monitor, elRef, styleUtils) {\n        var _this = _super.call(this, monitor, elRef, styleUtils) || this;\n        _this._announcer = new ReplaySubject(1);\n        _this.layout$ = _this._announcer.asObservable();\n        return _this;\n    }\n    Object.defineProperty(LayoutDirective.prototype, \"layout\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('layout', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LayoutDirective.prototype, \"layoutXs\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('layoutXs', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LayoutDirective.prototype, \"layoutSm\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('layoutSm', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LayoutDirective.prototype, \"layoutMd\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('layoutMd', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LayoutDirective.prototype, \"layoutLg\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('layoutLg', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LayoutDirective.prototype, \"layoutXl\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('layoutXl', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LayoutDirective.prototype, \"layoutGtXs\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('layoutGtXs', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LayoutDirective.prototype, \"layoutGtSm\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('layoutGtSm', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LayoutDirective.prototype, \"layoutGtMd\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('layoutGtMd', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LayoutDirective.prototype, \"layoutGtLg\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('layoutGtLg', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LayoutDirective.prototype, \"layoutLtSm\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('layoutLtSm', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LayoutDirective.prototype, \"layoutLtMd\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('layoutLtMd', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LayoutDirective.prototype, \"layoutLtLg\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('layoutLtLg', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LayoutDirective.prototype, \"layoutLtXl\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('layoutLtXl', val); },\n        enumerable: true,\n        configurable: true\n    });\n    // *********************************************\n    // Lifecycle Methods\n    // *********************************************\n    /**\n     * On changes to any @Input properties...\n     * Default to use the non-responsive Input value ('fxLayout')\n     * Then conditionally override with the mq-activated Input's current value\n     */\n    /**\n     * On changes to any \\@Input properties...\n     * Default to use the non-responsive Input value ('fxLayout')\n     * Then conditionally override with the mq-activated Input's current value\n     * @param {?} changes\n     * @return {?}\n     */\n    LayoutDirective.prototype.ngOnChanges = /**\n     * On changes to any \\@Input properties...\n     * Default to use the non-responsive Input value ('fxLayout')\n     * Then conditionally override with the mq-activated Input's current value\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        if (changes['layout'] != null || this._mqActivation) {\n            this._updateWithDirection();\n        }\n    };\n    /**\n     * After the initial onChanges, build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     */\n    /**\n     * After the initial onChanges, build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     * @return {?}\n     */\n    LayoutDirective.prototype.ngOnInit = /**\n     * After the initial onChanges, build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        _super.prototype.ngOnInit.call(this);\n        this._listenForMediaQueryChanges('layout', 'row', function (changes) {\n            _this._updateWithDirection(changes.value);\n        });\n        this._updateWithDirection();\n    };\n    // *********************************************\n    // Protected methods\n    // *********************************************\n    /**\n     * Validate the direction value and then update the host's inline flexbox styles\n     */\n    /**\n     * Validate the direction value and then update the host's inline flexbox styles\n     * @param {?=} value\n     * @return {?}\n     */\n    LayoutDirective.prototype._updateWithDirection = /**\n     * Validate the direction value and then update the host's inline flexbox styles\n     * @param {?=} value\n     * @return {?}\n     */\n    function (value) {\n        value = value || this._queryInput('layout') || 'row';\n        if (this._mqActivation) {\n            value = this._mqActivation.activatedInput;\n        }\n        // Update styles and announce to subscribers the *new* direction\n        var /** @type {?} */ css = buildLayoutCSS(!!value ? value : '');\n        this._applyStyleToElement(css);\n        this._announcer.next({\n            direction: css['flex-direction'],\n            wrap: !!css['flex-wrap'] && css['flex-wrap'] !== 'nowrap'\n        });\n    };\n    LayoutDirective.decorators = [\n        { type: Directive, args: [{ selector: \"\\n  [fxLayout],\\n  [fxLayout.xs], [fxLayout.sm], [fxLayout.md], [fxLayout.lg], [fxLayout.xl],\\n  [fxLayout.lt-sm], [fxLayout.lt-md], [fxLayout.lt-lg], [fxLayout.lt-xl],\\n  [fxLayout.gt-xs], [fxLayout.gt-sm], [fxLayout.gt-md], [fxLayout.gt-lg]\\n\" },] },\n    ];\n    /** @nocollapse */\n    LayoutDirective.ctorParameters = function () { return [\n        { type: MediaMonitor, },\n        { type: ElementRef, },\n        { type: StyleUtils, },\n    ]; };\n    LayoutDirective.propDecorators = {\n        \"layout\": [{ type: Input, args: ['fxLayout',] },],\n        \"layoutXs\": [{ type: Input, args: ['fxLayout.xs',] },],\n        \"layoutSm\": [{ type: Input, args: ['fxLayout.sm',] },],\n        \"layoutMd\": [{ type: Input, args: ['fxLayout.md',] },],\n        \"layoutLg\": [{ type: Input, args: ['fxLayout.lg',] },],\n        \"layoutXl\": [{ type: Input, args: ['fxLayout.xl',] },],\n        \"layoutGtXs\": [{ type: Input, args: ['fxLayout.gt-xs',] },],\n        \"layoutGtSm\": [{ type: Input, args: ['fxLayout.gt-sm',] },],\n        \"layoutGtMd\": [{ type: Input, args: ['fxLayout.gt-md',] },],\n        \"layoutGtLg\": [{ type: Input, args: ['fxLayout.gt-lg',] },],\n        \"layoutLtSm\": [{ type: Input, args: ['fxLayout.lt-sm',] },],\n        \"layoutLtMd\": [{ type: Input, args: ['fxLayout.lt-md',] },],\n        \"layoutLtLg\": [{ type: Input, args: ['fxLayout.lt-lg',] },],\n        \"layoutLtXl\": [{ type: Input, args: ['fxLayout.lt-xl',] },],\n    };\n    return LayoutDirective;\n}(BaseDirective));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * 'layout-padding' styling directive\n *  Defines padding of child elements in a layout container\n */\nvar LayoutGapDirective = /** @class */ (function (_super) {\n    __extends(LayoutGapDirective, _super);\n    /* tslint:enable */\n    function LayoutGapDirective(monitor, elRef, container, _zone, _directionality, styleUtils) {\n        var _this = _super.call(this, monitor, elRef, styleUtils) || this;\n        _this._zone = _zone;\n        _this._directionality = _directionality;\n        _this._layout = 'row';\n        if (container) {\n            // Subscribe to layout direction changes\n            _this._layoutWatcher = container.layout$.subscribe(_this._onLayoutChange.bind(_this));\n        }\n        _this._directionWatcher =\n            _this._directionality.change.subscribe(_this._updateWithValue.bind(_this));\n        return _this;\n    }\n    Object.defineProperty(LayoutGapDirective.prototype, \"gap\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('gap', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LayoutGapDirective.prototype, \"gapXs\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('gapXs', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LayoutGapDirective.prototype, \"gapSm\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('gapSm', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LayoutGapDirective.prototype, \"gapMd\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('gapMd', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LayoutGapDirective.prototype, \"gapLg\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('gapLg', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LayoutGapDirective.prototype, \"gapXl\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('gapXl', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LayoutGapDirective.prototype, \"gapGtXs\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('gapGtXs', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LayoutGapDirective.prototype, \"gapGtSm\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('gapGtSm', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LayoutGapDirective.prototype, \"gapGtMd\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('gapGtMd', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LayoutGapDirective.prototype, \"gapGtLg\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('gapGtLg', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LayoutGapDirective.prototype, \"gapLtSm\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('gapLtSm', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LayoutGapDirective.prototype, \"gapLtMd\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('gapLtMd', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LayoutGapDirective.prototype, \"gapLtLg\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('gapLtLg', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LayoutGapDirective.prototype, \"gapLtXl\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('gapLtXl', val); },\n        enumerable: true,\n        configurable: true\n    });\n    // *********************************************\n    // Lifecycle Methods\n    // *********************************************\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    LayoutGapDirective.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        if (changes['gap'] != null || this._mqActivation) {\n            this._updateWithValue();\n        }\n    };\n    /**\n     * After the initial onChanges, build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     */\n    /**\n     * After the initial onChanges, build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     * @return {?}\n     */\n    LayoutGapDirective.prototype.ngAfterContentInit = /**\n     * After the initial onChanges, build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._watchContentChanges();\n        this._listenForMediaQueryChanges('gap', '0', function (changes) {\n            _this._updateWithValue(changes.value);\n        });\n        this._updateWithValue();\n    };\n    /**\n     * @return {?}\n     */\n    LayoutGapDirective.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        _super.prototype.ngOnDestroy.call(this);\n        if (this._layoutWatcher) {\n            this._layoutWatcher.unsubscribe();\n        }\n        if (this._observer) {\n            this._observer.disconnect();\n        }\n        if (this._directionWatcher) {\n            this._directionWatcher.unsubscribe();\n        }\n    };\n    // *********************************************\n    // Protected methods\n    // *********************************************\n    /**\n     * Watch for child nodes to be added... and apply the layout gap styles to each.\n     * NOTE: this does NOT! differentiate between viewChildren and contentChildren\n     */\n    /**\n     * Watch for child nodes to be added... and apply the layout gap styles to each.\n     * NOTE: this does NOT! differentiate between viewChildren and contentChildren\n     * @return {?}\n     */\n    LayoutGapDirective.prototype._watchContentChanges = /**\n     * Watch for child nodes to be added... and apply the layout gap styles to each.\n     * NOTE: this does NOT! differentiate between viewChildren and contentChildren\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._zone.runOutsideAngular(function () {\n            if (typeof MutationObserver !== 'undefined') {\n                _this._observer = new MutationObserver(function (mutations) {\n                    var /** @type {?} */ validatedChanges = function (it) {\n                        return (it.addedNodes && it.addedNodes.length > 0) ||\n                            (it.removedNodes && it.removedNodes.length > 0);\n                    };\n                    // update gap styles only for child 'added' or 'removed' events\n                    if (mutations.some(validatedChanges)) {\n                        _this._updateWithValue();\n                    }\n                });\n                _this._observer.observe(_this.nativeElement, { childList: true });\n            }\n        });\n    };\n    /**\n     * Cache the parent container 'flex-direction' and update the 'margin' styles\n     */\n    /**\n     * Cache the parent container 'flex-direction' and update the 'margin' styles\n     * @param {?} layout\n     * @return {?}\n     */\n    LayoutGapDirective.prototype._onLayoutChange = /**\n     * Cache the parent container 'flex-direction' and update the 'margin' styles\n     * @param {?} layout\n     * @return {?}\n     */\n    function (layout) {\n        var _this = this;\n        this._layout = (layout.direction || '').toLowerCase();\n        if (!LAYOUT_VALUES.find(function (x) { return x === _this._layout; })) {\n            this._layout = 'row';\n        }\n        this._updateWithValue();\n    };\n    /**\n     *\n     */\n    /**\n     *\n     * @param {?=} value\n     * @return {?}\n     */\n    LayoutGapDirective.prototype._updateWithValue = /**\n     *\n     * @param {?=} value\n     * @return {?}\n     */\n    function (value) {\n        var _this = this;\n        var /** @type {?} */ gapValue = value || this._queryInput('gap') || '0';\n        if (this._mqActivation) {\n            gapValue = this._mqActivation.activatedInput;\n        }\n        // Gather all non-hidden Element nodes\n        var /** @type {?} */ items = this.childrenNodes\n            .filter(function (el) { return el.nodeType === 1 && _this._getDisplayStyle(el) != 'none'; })\n            .sort(function (a, b) {\n            var /** @type {?} */ orderA = +_this._styler.lookupStyle(a, 'order');\n            var /** @type {?} */ orderB = +_this._styler.lookupStyle(b, 'order');\n            if (isNaN(orderA) || isNaN(orderB) || orderA === orderB) {\n                return 0;\n            }\n            else {\n                return orderA > orderB ? 1 : -1;\n            }\n        });\n        if (items.length > 0) {\n            if (gapValue.endsWith(GRID_SPECIFIER)) {\n                gapValue = gapValue.substring(0, gapValue.indexOf(GRID_SPECIFIER));\n                // For each `element` children, set the padding\n                this._applyStyleToElements(this._buildGridPadding(gapValue), items);\n                // Add the margin to the host element\n                this._applyStyleToElement(this._buildGridMargin(gapValue));\n            }\n            else {\n                var /** @type {?} */ lastItem = items.pop();\n                // For each `element` children EXCEPT the last,\n                // set the margin right/bottom styles...\n                this._applyStyleToElements(this._buildCSS(gapValue), items);\n                // Clear all gaps for all visible elements\n                this._applyStyleToElements(this._buildCSS(), [lastItem]);\n            }\n        }\n    };\n    /**\n     *\n     * @param {?} value\n     * @return {?}\n     */\n    LayoutGapDirective.prototype._buildGridPadding = /**\n     *\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        var /** @type {?} */ paddingTop = '0px', /** @type {?} */ paddingRight = '0px', /** @type {?} */ paddingBottom = value, /** @type {?} */ paddingLeft = '0px';\n        if (this._directionality.value === 'rtl') {\n            paddingLeft = value;\n        }\n        else {\n            paddingRight = value;\n        }\n        return { 'padding': paddingTop + \" \" + paddingRight + \" \" + paddingBottom + \" \" + paddingLeft };\n    };\n    /**\n     * Prepare margin CSS, remove any previous explicitly\n     * assigned margin assignments\n     * Note: this will not work with calc values (negative calc values are invalid)\n     * @param {?} value\n     * @return {?}\n     */\n    LayoutGapDirective.prototype._buildGridMargin = /**\n     * Prepare margin CSS, remove any previous explicitly\n     * assigned margin assignments\n     * Note: this will not work with calc values (negative calc values are invalid)\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        var /** @type {?} */ marginTop = '0px', /** @type {?} */ marginRight = '0px', /** @type {?} */ marginBottom = '-' + value, /** @type {?} */ marginLeft = '0px';\n        if (this._directionality.value === 'rtl') {\n            marginLeft = '-' + value;\n        }\n        else {\n            marginRight = '-' + value;\n        }\n        return { 'margin': marginTop + \" \" + marginRight + \" \" + marginBottom + \" \" + marginLeft };\n    };\n    /**\n     * Prepare margin CSS, remove any previous explicitly\n     * assigned margin assignments\n     * @param {?=} value\n     * @return {?}\n     */\n    LayoutGapDirective.prototype._buildCSS = /**\n     * Prepare margin CSS, remove any previous explicitly\n     * assigned margin assignments\n     * @param {?=} value\n     * @return {?}\n     */\n    function (value) {\n        if (value === void 0) { value = null; }\n        var /** @type {?} */ key, /** @type {?} */ margins = {\n            'margin-left': null,\n            'margin-right': null,\n            'margin-top': null,\n            'margin-bottom': null\n        };\n        switch (this._layout) {\n            case 'column':\n                key = 'margin-bottom';\n                break;\n            case 'column-reverse':\n                key = 'margin-top';\n                break;\n            case 'row':\n                key = this._directionality.value === 'rtl' ? 'margin-left' : 'margin-right';\n                break;\n            case 'row-reverse':\n                key = this._directionality.value === 'rtl' ? 'margin-right' : 'margin-left';\n                break;\n            default:\n                key = this._directionality.value === 'rtl' ? 'margin-left' : 'margin-right';\n                break;\n        }\n        margins[key] = value;\n        return margins;\n    };\n    LayoutGapDirective.decorators = [\n        { type: Directive, args: [{\n                    selector: \"\\n  [fxLayoutGap],\\n  [fxLayoutGap.xs], [fxLayoutGap.sm], [fxLayoutGap.md], [fxLayoutGap.lg], [fxLayoutGap.xl],\\n  [fxLayoutGap.lt-sm], [fxLayoutGap.lt-md], [fxLayoutGap.lt-lg], [fxLayoutGap.lt-xl],\\n  [fxLayoutGap.gt-xs], [fxLayoutGap.gt-sm], [fxLayoutGap.gt-md], [fxLayoutGap.gt-lg]\\n\"\n                },] },\n    ];\n    /** @nocollapse */\n    LayoutGapDirective.ctorParameters = function () { return [\n        { type: MediaMonitor, },\n        { type: ElementRef, },\n        { type: LayoutDirective, decorators: [{ type: Optional }, { type: Self },] },\n        { type: NgZone, },\n        { type: Directionality, },\n        { type: StyleUtils, },\n    ]; };\n    LayoutGapDirective.propDecorators = {\n        \"gap\": [{ type: Input, args: ['fxLayoutGap',] },],\n        \"gapXs\": [{ type: Input, args: ['fxLayoutGap.xs',] },],\n        \"gapSm\": [{ type: Input, args: ['fxLayoutGap.sm',] },],\n        \"gapMd\": [{ type: Input, args: ['fxLayoutGap.md',] },],\n        \"gapLg\": [{ type: Input, args: ['fxLayoutGap.lg',] },],\n        \"gapXl\": [{ type: Input, args: ['fxLayoutGap.xl',] },],\n        \"gapGtXs\": [{ type: Input, args: ['fxLayoutGap.gt-xs',] },],\n        \"gapGtSm\": [{ type: Input, args: ['fxLayoutGap.gt-sm',] },],\n        \"gapGtMd\": [{ type: Input, args: ['fxLayoutGap.gt-md',] },],\n        \"gapGtLg\": [{ type: Input, args: ['fxLayoutGap.gt-lg',] },],\n        \"gapLtSm\": [{ type: Input, args: ['fxLayoutGap.lt-sm',] },],\n        \"gapLtMd\": [{ type: Input, args: ['fxLayoutGap.lt-md',] },],\n        \"gapLtLg\": [{ type: Input, args: ['fxLayoutGap.lt-lg',] },],\n        \"gapLtXl\": [{ type: Input, args: ['fxLayoutGap.lt-xl',] },],\n    };\n    return LayoutGapDirective;\n}(BaseDirective));\nvar /** @type {?} */ GRID_SPECIFIER = ' grid';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\n * similar to Object.assign.\n *\n * @param {?} dest The object which will have properties copied to it.\n * @param {...?} sources The source objects from which properties will be copied.\n * @return {?}\n */\nfunction extendObject(dest) {\n    var sources = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        sources[_i - 1] = arguments[_i];\n    }\n    if (dest == null) {\n        throw TypeError('Cannot convert undefined or null to object');\n    }\n    for (var _a = 0, sources_1 = sources; _a < sources_1.length; _a++) {\n        var source = sources_1[_a];\n        if (source != null) {\n            for (var /** @type {?} */ key in source) {\n                if (source.hasOwnProperty(key)) {\n                    dest[key] = source[key];\n                }\n            }\n        }\n    }\n    return dest;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Directive to control the size of a flex item using flex-basis, flex-grow, and flex-shrink.\n * Corresponds to the css `flex` shorthand property.\n *\n * @see https://css-tricks.com/snippets/css/a-guide-to-flexbox/\n */\nvar FlexDirective = /** @class */ (function (_super) {\n    __extends(FlexDirective, _super);\n    /* tslint:enable */\n    // Note: Explicitly @SkipSelf on LayoutDirective because we are looking\n    //       for the parent flex container for this flex item.\n    function FlexDirective(monitor, elRef, _container, styleUtils, layoutConfig) {\n        var _this = _super.call(this, monitor, elRef, styleUtils) || this;\n        _this._container = _container;\n        _this.styleUtils = styleUtils;\n        _this.layoutConfig = layoutConfig;\n        _this._cacheInput('flex', '');\n        _this._cacheInput('shrink', 1);\n        _this._cacheInput('grow', 1);\n        if (_container) {\n            // If this flex item is inside of a flex container marked with\n            // Subscribe to layout immediate parent direction changes\n            // If this flex item is inside of a flex container marked with\n            // Subscribe to layout immediate parent direction changes\n            _this._layoutWatcher = _container.layout$.subscribe(function (layout) {\n                // `direction` === null if parent container does not have a `fxLayout`\n                // `direction` === null if parent container does not have a `fxLayout`\n                _this._onLayoutChange(layout);\n            });\n        }\n        return _this;\n    }\n    Object.defineProperty(FlexDirective.prototype, \"shrink\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('shrink', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FlexDirective.prototype, \"grow\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('grow', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FlexDirective.prototype, \"flex\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('flex', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FlexDirective.prototype, \"flexXs\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('flexXs', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FlexDirective.prototype, \"flexSm\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('flexSm', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FlexDirective.prototype, \"flexMd\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('flexMd', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FlexDirective.prototype, \"flexLg\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('flexLg', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FlexDirective.prototype, \"flexXl\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('flexXl', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FlexDirective.prototype, \"flexGtXs\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('flexGtXs', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FlexDirective.prototype, \"flexGtSm\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('flexGtSm', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FlexDirective.prototype, \"flexGtMd\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('flexGtMd', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FlexDirective.prototype, \"flexGtLg\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('flexGtLg', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FlexDirective.prototype, \"flexLtSm\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('flexLtSm', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FlexDirective.prototype, \"flexLtMd\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('flexLtMd', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FlexDirective.prototype, \"flexLtLg\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('flexLtLg', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FlexDirective.prototype, \"flexLtXl\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('flexLtXl', val); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * For @Input changes on the current mq activation property, see onMediaQueryChanges()\n     */\n    /**\n     * For \\@Input changes on the current mq activation property, see onMediaQueryChanges()\n     * @param {?} changes\n     * @return {?}\n     */\n    FlexDirective.prototype.ngOnChanges = /**\n     * For \\@Input changes on the current mq activation property, see onMediaQueryChanges()\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        if (changes['flex'] != null || this._mqActivation) {\n            this._updateStyle();\n        }\n    };\n    /**\n     * After the initial onChanges, build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     */\n    /**\n     * After the initial onChanges, build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     * @return {?}\n     */\n    FlexDirective.prototype.ngOnInit = /**\n     * After the initial onChanges, build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        _super.prototype.ngOnInit.call(this);\n        this._listenForMediaQueryChanges('flex', '', function (changes) {\n            _this._updateStyle(changes.value);\n        });\n        this._updateStyle();\n    };\n    /**\n     * @return {?}\n     */\n    FlexDirective.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        _super.prototype.ngOnDestroy.call(this);\n        if (this._layoutWatcher) {\n            this._layoutWatcher.unsubscribe();\n        }\n    };\n    /**\n     * Caches the parent container's 'flex-direction' and updates the element's style.\n     * Used as a handler for layout change events from the parent flex container.\n     */\n    /**\n     * Caches the parent container's 'flex-direction' and updates the element's style.\n     * Used as a handler for layout change events from the parent flex container.\n     * @param {?=} layout\n     * @return {?}\n     */\n    FlexDirective.prototype._onLayoutChange = /**\n     * Caches the parent container's 'flex-direction' and updates the element's style.\n     * Used as a handler for layout change events from the parent flex container.\n     * @param {?=} layout\n     * @return {?}\n     */\n    function (layout) {\n        this._layout = layout || this._layout || { direction: 'row', wrap: false };\n        this._updateStyle();\n    };\n    /**\n     * @param {?=} value\n     * @return {?}\n     */\n    FlexDirective.prototype._updateStyle = /**\n     * @param {?=} value\n     * @return {?}\n     */\n    function (value) {\n        var /** @type {?} */ flexBasis = value || this._queryInput('flex') || '';\n        if (this._mqActivation) {\n            flexBasis = this._mqActivation.activatedInput;\n        }\n        var /** @type {?} */ basis = String(flexBasis).replace(';', '');\n        var /** @type {?} */ parts = validateBasis(basis, this._queryInput('grow'), this._queryInput('shrink'));\n        this._applyStyleToElement(this._validateValue.apply(this, parts));\n    };\n    /**\n     * Validate the value to be one of the acceptable value options\n     * Use default fallback of 'row'\n     */\n    /**\n     * Validate the value to be one of the acceptable value options\n     * Use default fallback of 'row'\n     * @param {?} grow\n     * @param {?} shrink\n     * @param {?} basis\n     * @return {?}\n     */\n    FlexDirective.prototype._validateValue = /**\n     * Validate the value to be one of the acceptable value options\n     * Use default fallback of 'row'\n     * @param {?} grow\n     * @param {?} shrink\n     * @param {?} basis\n     * @return {?}\n     */\n    function (grow, shrink, basis) {\n        // The flex-direction of this element's flex container. Defaults to 'row'.\n        var /** @type {?} */ layout = this._getFlexFlowDirection(this.parentElement, this.layoutConfig.addFlexToParent);\n        var /** @type {?} */ direction = (layout.indexOf('column') > -1) ? 'column' : 'row';\n        var /** @type {?} */ max = isFlowHorizontal(direction) ? 'max-width' : 'max-height';\n        var /** @type {?} */ min = isFlowHorizontal(direction) ? 'min-width' : 'min-height';\n        var /** @type {?} */ hasCalc = String(basis).indexOf('calc') > -1;\n        var /** @type {?} */ usingCalc = hasCalc || (basis == 'auto');\n        var /** @type {?} */ isPercent = String(basis).indexOf('%') > -1 && !hasCalc;\n        var /** @type {?} */ hasUnits = String(basis).indexOf('px') > -1 || String(basis).indexOf('em') > -1 ||\n            String(basis).indexOf('vw') > -1 || String(basis).indexOf('vh') > -1;\n        var /** @type {?} */ isPx = String(basis).indexOf('px') > -1 || usingCalc;\n        var /** @type {?} */ isValue = (hasCalc || hasUnits);\n        grow = (grow == '0') ? 0 : grow;\n        shrink = (shrink == '0') ? 0 : shrink;\n        // make box inflexible when shrink and grow are both zero\n        // should not set a min when the grow is zero\n        // should not set a max when the shrink is zero\n        var /** @type {?} */ isFixed = !grow && !shrink;\n        var /** @type {?} */ css = {};\n        // flex-basis allows you to specify the initial/starting main-axis size of the element,\n        // before anything else is computed. It can either be a percentage or an absolute value.\n        // It is, however, not the breaking point for flex-grow/shrink properties\n        //\n        // flex-grow can be seen as this:\n        //   0: Do not stretch. Either size to element's content width, or obey 'flex-basis'.\n        //   1: (Default value). Stretch; will be the same size to all other flex items on\n        //       the same row since they have a default value of 1.\n        //   ≥2 (integer n): Stretch. Will be n times the size of other elements\n        //      with 'flex-grow: 1' on the same row.\n        // Use `null` to clear existing styles.\n        var /** @type {?} */ clearStyles = {\n            'max-width': null,\n            'max-height': null,\n            'min-width': null,\n            'min-height': null\n        };\n        switch (basis || '') {\n            case '':\n                basis = direction === 'row' ? '0%' :\n                    (this.layoutConfig.useColumnBasisZero ? '0.000000001px' : 'auto');\n                break;\n            case 'initial': // default\n            case 'nogrow':\n                grow = 0;\n                basis = 'auto';\n                break;\n            case 'grow':\n                basis = '100%';\n                break;\n            case 'noshrink':\n                shrink = 0;\n                basis = 'auto';\n                break;\n            case 'auto':\n                break;\n            case 'none':\n                grow = 0;\n                shrink = 0;\n                basis = 'auto';\n                break;\n            default:\n                // Defaults to percentage sizing unless `px` is explicitly set\n                if (!isValue && !isPercent && !isNaN(/** @type {?} */ (basis))) {\n                    basis = basis + '%';\n                }\n                // Fix for issue 280\n                if (basis === '0%') {\n                    isValue = true;\n                }\n                if (basis === '0px') {\n                    basis = '0%';\n                }\n                // fix issue #5345\n                if (hasCalc) {\n                    css = extendObject(clearStyles, {\n                        'flex-grow': grow,\n                        'flex-shrink': shrink,\n                        'flex-basis': isValue ? basis : '100%'\n                    });\n                }\n                else {\n                    css = extendObject(clearStyles, {\n                        'flex': grow + \" \" + shrink + \" \" + (isValue ? basis : '100%')\n                    });\n                }\n                break;\n        }\n        if (!(css['flex'] || css['flex-grow'])) {\n            if (hasCalc) {\n                css = extendObject(clearStyles, {\n                    'flex-grow': grow,\n                    'flex-shrink': shrink,\n                    'flex-basis': basis\n                });\n            }\n            else {\n                css = extendObject(clearStyles, {\n                    'flex': grow + \" \" + shrink + \" \" + basis\n                });\n            }\n        }\n        // Fix for issues 277, 534, and 728\n        if (basis !== '0%' && basis !== '0px' && basis !== '0.000000001px' && basis !== 'auto') {\n            css[min] = isFixed || (isPx && grow) ? basis : null;\n            css[max] = isFixed || (!usingCalc && shrink) ? basis : null;\n        }\n        // Fix for issue 528\n        if (!css[min] && !css[max]) {\n            if (hasCalc) {\n                css = extendObject(clearStyles, {\n                    'flex-grow': grow,\n                    'flex-shrink': shrink,\n                    'flex-basis': basis\n                });\n            }\n            else {\n                css = extendObject(clearStyles, {\n                    'flex': grow + \" \" + shrink + \" \" + basis\n                });\n            }\n        }\n        else {\n            // Fix for issue 660\n            if (this._layout && this._layout.wrap) {\n                css[hasCalc ? 'flex-basis' : 'flex'] = css[max] ?\n                    (hasCalc ? css[max] : grow + \" \" + shrink + \" \" + css[max]) :\n                    (hasCalc ? css[min] : grow + \" \" + shrink + \" \" + css[min]);\n            }\n        }\n        return extendObject(css, { 'box-sizing': 'border-box' });\n    };\n    FlexDirective.decorators = [\n        { type: Directive, args: [{ selector: \"\\n  [fxFlex],\\n  [fxFlex.xs], [fxFlex.sm], [fxFlex.md], [fxFlex.lg], [fxFlex.xl],\\n  [fxFlex.lt-sm], [fxFlex.lt-md], [fxFlex.lt-lg], [fxFlex.lt-xl],\\n  [fxFlex.gt-xs], [fxFlex.gt-sm], [fxFlex.gt-md], [fxFlex.gt-lg],\\n\"\n                },] },\n    ];\n    /** @nocollapse */\n    FlexDirective.ctorParameters = function () { return [\n        { type: MediaMonitor, },\n        { type: ElementRef, },\n        { type: LayoutDirective, decorators: [{ type: Optional }, { type: SkipSelf },] },\n        { type: StyleUtils, },\n        { type: undefined, decorators: [{ type: Inject, args: [LAYOUT_CONFIG,] },] },\n    ]; };\n    FlexDirective.propDecorators = {\n        \"shrink\": [{ type: Input, args: ['fxShrink',] },],\n        \"grow\": [{ type: Input, args: ['fxGrow',] },],\n        \"flex\": [{ type: Input, args: ['fxFlex',] },],\n        \"flexXs\": [{ type: Input, args: ['fxFlex.xs',] },],\n        \"flexSm\": [{ type: Input, args: ['fxFlex.sm',] },],\n        \"flexMd\": [{ type: Input, args: ['fxFlex.md',] },],\n        \"flexLg\": [{ type: Input, args: ['fxFlex.lg',] },],\n        \"flexXl\": [{ type: Input, args: ['fxFlex.xl',] },],\n        \"flexGtXs\": [{ type: Input, args: ['fxFlex.gt-xs',] },],\n        \"flexGtSm\": [{ type: Input, args: ['fxFlex.gt-sm',] },],\n        \"flexGtMd\": [{ type: Input, args: ['fxFlex.gt-md',] },],\n        \"flexGtLg\": [{ type: Input, args: ['fxFlex.gt-lg',] },],\n        \"flexLtSm\": [{ type: Input, args: ['fxFlex.lt-sm',] },],\n        \"flexLtMd\": [{ type: Input, args: ['fxFlex.lt-md',] },],\n        \"flexLtLg\": [{ type: Input, args: ['fxFlex.lt-lg',] },],\n        \"flexLtXl\": [{ type: Input, args: ['fxFlex.lt-xl',] },],\n    };\n    return FlexDirective;\n}(BaseDirective));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * 'flex-order' flexbox styling directive\n * Configures the positional ordering of the element in a sorted layout container\n * @see https://css-tricks.com/almanac/properties/o/order/\n */\nvar FlexOrderDirective = /** @class */ (function (_super) {\n    __extends(FlexOrderDirective, _super);\n    /* tslint:enable */\n    function FlexOrderDirective(monitor, elRef, styleUtils) {\n        return _super.call(this, monitor, elRef, styleUtils) || this;\n    }\n    Object.defineProperty(FlexOrderDirective.prototype, \"order\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('order', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FlexOrderDirective.prototype, \"orderXs\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('orderXs', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FlexOrderDirective.prototype, \"orderSm\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('orderSm', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FlexOrderDirective.prototype, \"orderMd\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('orderMd', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FlexOrderDirective.prototype, \"orderLg\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('orderLg', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FlexOrderDirective.prototype, \"orderXl\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('orderXl', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FlexOrderDirective.prototype, \"orderGtXs\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('orderGtXs', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FlexOrderDirective.prototype, \"orderGtSm\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('orderGtSm', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FlexOrderDirective.prototype, \"orderGtMd\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('orderGtMd', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FlexOrderDirective.prototype, \"orderGtLg\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('orderGtLg', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FlexOrderDirective.prototype, \"orderLtSm\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('orderLtSm', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FlexOrderDirective.prototype, \"orderLtMd\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('orderLtMd', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FlexOrderDirective.prototype, \"orderLtLg\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('orderLtLg', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FlexOrderDirective.prototype, \"orderLtXl\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('orderLtXl', val); },\n        enumerable: true,\n        configurable: true\n    });\n    // *********************************************\n    // Lifecycle Methods\n    // *********************************************\n    /**\n     * For @Input changes on the current mq activation property, see onMediaQueryChanges()\n     */\n    /**\n     * For \\@Input changes on the current mq activation property, see onMediaQueryChanges()\n     * @param {?} changes\n     * @return {?}\n     */\n    FlexOrderDirective.prototype.ngOnChanges = /**\n     * For \\@Input changes on the current mq activation property, see onMediaQueryChanges()\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        if (changes['order'] != null || this._mqActivation) {\n            this._updateWithValue();\n        }\n    };\n    /**\n     * After the initial onChanges, build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     */\n    /**\n     * After the initial onChanges, build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     * @return {?}\n     */\n    FlexOrderDirective.prototype.ngOnInit = /**\n     * After the initial onChanges, build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        _super.prototype.ngOnInit.call(this);\n        this._listenForMediaQueryChanges('order', '0', function (changes) {\n            _this._updateWithValue(changes.value);\n        });\n        this._updateWithValue();\n    };\n    // *********************************************\n    // Protected methods\n    // *********************************************\n    /**\n     * @param {?=} value\n     * @return {?}\n     */\n    FlexOrderDirective.prototype._updateWithValue = /**\n     * @param {?=} value\n     * @return {?}\n     */\n    function (value) {\n        value = value || this._queryInput('order') || '0';\n        if (this._mqActivation) {\n            value = this._mqActivation.activatedInput;\n        }\n        this._applyStyleToElement(this._buildCSS(value));\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    FlexOrderDirective.prototype._buildCSS = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        value = parseInt(value, 10);\n        return { order: isNaN(value) ? 0 : value };\n    };\n    FlexOrderDirective.decorators = [\n        { type: Directive, args: [{ selector: \"\\n  [fxFlexOrder],\\n  [fxFlexOrder.xs], [fxFlexOrder.sm], [fxFlexOrder.md], [fxFlexOrder.lg], [fxFlexOrder.xl],\\n  [fxFlexOrder.lt-sm], [fxFlexOrder.lt-md], [fxFlexOrder.lt-lg], [fxFlexOrder.lt-xl],\\n  [fxFlexOrder.gt-xs], [fxFlexOrder.gt-sm], [fxFlexOrder.gt-md], [fxFlexOrder.gt-lg]\\n\" },] },\n    ];\n    /** @nocollapse */\n    FlexOrderDirective.ctorParameters = function () { return [\n        { type: MediaMonitor, },\n        { type: ElementRef, },\n        { type: StyleUtils, },\n    ]; };\n    FlexOrderDirective.propDecorators = {\n        \"order\": [{ type: Input, args: ['fxFlexOrder',] },],\n        \"orderXs\": [{ type: Input, args: ['fxFlexOrder.xs',] },],\n        \"orderSm\": [{ type: Input, args: ['fxFlexOrder.sm',] },],\n        \"orderMd\": [{ type: Input, args: ['fxFlexOrder.md',] },],\n        \"orderLg\": [{ type: Input, args: ['fxFlexOrder.lg',] },],\n        \"orderXl\": [{ type: Input, args: ['fxFlexOrder.xl',] },],\n        \"orderGtXs\": [{ type: Input, args: ['fxFlexOrder.gt-xs',] },],\n        \"orderGtSm\": [{ type: Input, args: ['fxFlexOrder.gt-sm',] },],\n        \"orderGtMd\": [{ type: Input, args: ['fxFlexOrder.gt-md',] },],\n        \"orderGtLg\": [{ type: Input, args: ['fxFlexOrder.gt-lg',] },],\n        \"orderLtSm\": [{ type: Input, args: ['fxFlexOrder.lt-sm',] },],\n        \"orderLtMd\": [{ type: Input, args: ['fxFlexOrder.lt-md',] },],\n        \"orderLtLg\": [{ type: Input, args: ['fxFlexOrder.lt-lg',] },],\n        \"orderLtXl\": [{ type: Input, args: ['fxFlexOrder.lt-xl',] },],\n    };\n    return FlexOrderDirective;\n}(BaseDirective));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * 'flex-offset' flexbox styling directive\n * Configures the 'margin-left' of the element in a layout container\n */\nvar FlexOffsetDirective = /** @class */ (function (_super) {\n    __extends(FlexOffsetDirective, _super);\n    /* tslint:enable */\n    function FlexOffsetDirective(monitor, elRef, _container, _directionality, styleUtils) {\n        var _this = _super.call(this, monitor, elRef, styleUtils) || this;\n        _this._container = _container;\n        _this._directionality = _directionality;\n        /**\n         * The flex-direction of this element's host container. Defaults to 'row'.\n         */\n        _this._layout = { direction: 'row', wrap: false };\n        _this._directionWatcher =\n            _this._directionality.change.subscribe(_this._updateWithValue.bind(_this));\n        _this.watchParentFlow();\n        return _this;\n    }\n    Object.defineProperty(FlexOffsetDirective.prototype, \"offset\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('offset', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FlexOffsetDirective.prototype, \"offsetXs\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('offsetXs', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FlexOffsetDirective.prototype, \"offsetSm\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('offsetSm', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FlexOffsetDirective.prototype, \"offsetMd\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('offsetMd', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FlexOffsetDirective.prototype, \"offsetLg\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('offsetLg', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FlexOffsetDirective.prototype, \"offsetXl\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('offsetXl', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FlexOffsetDirective.prototype, \"offsetLtSm\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('offsetLtSm', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FlexOffsetDirective.prototype, \"offsetLtMd\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('offsetLtMd', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FlexOffsetDirective.prototype, \"offsetLtLg\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('offsetLtLg', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FlexOffsetDirective.prototype, \"offsetLtXl\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('offsetLtXl', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FlexOffsetDirective.prototype, \"offsetGtXs\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('offsetGtXs', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FlexOffsetDirective.prototype, \"offsetGtSm\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('offsetGtSm', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FlexOffsetDirective.prototype, \"offsetGtMd\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('offsetGtMd', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FlexOffsetDirective.prototype, \"offsetGtLg\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('offsetGtLg', val); },\n        enumerable: true,\n        configurable: true\n    });\n    // *********************************************\n    // Lifecycle Methods\n    // *********************************************\n    /**\n     * For @Input changes on the current mq activation property, see onMediaQueryChanges()\n     */\n    /**\n     * For \\@Input changes on the current mq activation property, see onMediaQueryChanges()\n     * @param {?} changes\n     * @return {?}\n     */\n    FlexOffsetDirective.prototype.ngOnChanges = /**\n     * For \\@Input changes on the current mq activation property, see onMediaQueryChanges()\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        if (changes['offset'] != null || this._mqActivation) {\n            this._updateWithValue();\n        }\n    };\n    /**\n     * Cleanup\n     */\n    /**\n     * Cleanup\n     * @return {?}\n     */\n    FlexOffsetDirective.prototype.ngOnDestroy = /**\n     * Cleanup\n     * @return {?}\n     */\n    function () {\n        _super.prototype.ngOnDestroy.call(this);\n        if (this._layoutWatcher) {\n            this._layoutWatcher.unsubscribe();\n        }\n        if (this._directionWatcher) {\n            this._directionWatcher.unsubscribe();\n        }\n    };\n    /**\n     * After the initial onChanges, build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     */\n    /**\n     * After the initial onChanges, build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     * @return {?}\n     */\n    FlexOffsetDirective.prototype.ngOnInit = /**\n     * After the initial onChanges, build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        _super.prototype.ngOnInit.call(this);\n        this._listenForMediaQueryChanges('offset', 0, function (changes) {\n            _this._updateWithValue(changes.value);\n        });\n    };\n    /**\n     * If parent flow-direction changes, then update the margin property\n     * used to offset\n     */\n    /**\n     * If parent flow-direction changes, then update the margin property\n     * used to offset\n     * @return {?}\n     */\n    FlexOffsetDirective.prototype.watchParentFlow = /**\n     * If parent flow-direction changes, then update the margin property\n     * used to offset\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this._container) {\n            // Subscribe to layout immediate parent direction changes (if any)\n            this._layoutWatcher = this._container.layout$.subscribe(function (layout) {\n                // `direction` === null if parent container does not have a `fxLayout`\n                // `direction` === null if parent container does not have a `fxLayout`\n                _this._onLayoutChange(layout);\n            });\n        }\n    };\n    /**\n     * Caches the parent container's 'flex-direction' and updates the element's style.\n     * Used as a handler for layout change events from the parent flex container.\n     */\n    /**\n     * Caches the parent container's 'flex-direction' and updates the element's style.\n     * Used as a handler for layout change events from the parent flex container.\n     * @param {?=} layout\n     * @return {?}\n     */\n    FlexOffsetDirective.prototype._onLayoutChange = /**\n     * Caches the parent container's 'flex-direction' and updates the element's style.\n     * Used as a handler for layout change events from the parent flex container.\n     * @param {?=} layout\n     * @return {?}\n     */\n    function (layout) {\n        this._layout = layout || this._layout || { direction: 'row', wrap: false };\n        this._updateWithValue();\n    };\n    /**\n     * Using the current fxFlexOffset value, update the inline CSS\n     * NOTE: this will assign `margin-left` if the parent flex-direction == 'row',\n     *       otherwise `margin-top` is used for the offset.\n     */\n    /**\n     * Using the current fxFlexOffset value, update the inline CSS\n     * NOTE: this will assign `margin-left` if the parent flex-direction == 'row',\n     *       otherwise `margin-top` is used for the offset.\n     * @param {?=} value\n     * @return {?}\n     */\n    FlexOffsetDirective.prototype._updateWithValue = /**\n     * Using the current fxFlexOffset value, update the inline CSS\n     * NOTE: this will assign `margin-left` if the parent flex-direction == 'row',\n     *       otherwise `margin-top` is used for the offset.\n     * @param {?=} value\n     * @return {?}\n     */\n    function (value) {\n        value = value || this._queryInput('offset') || 0;\n        if (this._mqActivation) {\n            value = this._mqActivation.activatedInput;\n        }\n        this._applyStyleToElement(this._buildCSS(value));\n    };\n    /**\n     * @param {?} offset\n     * @return {?}\n     */\n    FlexOffsetDirective.prototype._buildCSS = /**\n     * @param {?} offset\n     * @return {?}\n     */\n    function (offset) {\n        var /** @type {?} */ isPercent = String(offset).indexOf('%') > -1;\n        var /** @type {?} */ isPx = String(offset).indexOf('px') > -1;\n        if (!isPx && !isPercent && !isNaN(offset)) {\n            offset = offset + '%';\n        }\n        // The flex-direction of this element's flex container. Defaults to 'row'.\n        var /** @type {?} */ isRtl = this._directionality.value === 'rtl';\n        var /** @type {?} */ layout = this._getFlexFlowDirection(this.parentElement, true);\n        var /** @type {?} */ horizontalLayoutKey = isRtl ? 'margin-right' : 'margin-left';\n        return isFlowHorizontal(layout) ? (_a = {}, _a[horizontalLayoutKey] = \"\" + offset, _a) :\n            { 'margin-top': \"\" + offset };\n        var _a;\n    };\n    FlexOffsetDirective.decorators = [\n        { type: Directive, args: [{ selector: \"\\n  [fxFlexOffset],\\n  [fxFlexOffset.xs], [fxFlexOffset.sm], [fxFlexOffset.md], [fxFlexOffset.lg], [fxFlexOffset.xl],\\n  [fxFlexOffset.lt-sm], [fxFlexOffset.lt-md], [fxFlexOffset.lt-lg], [fxFlexOffset.lt-xl],\\n  [fxFlexOffset.gt-xs], [fxFlexOffset.gt-sm], [fxFlexOffset.gt-md], [fxFlexOffset.gt-lg]\\n\" },] },\n    ];\n    /** @nocollapse */\n    FlexOffsetDirective.ctorParameters = function () { return [\n        { type: MediaMonitor, },\n        { type: ElementRef, },\n        { type: LayoutDirective, decorators: [{ type: Optional }, { type: SkipSelf },] },\n        { type: Directionality, },\n        { type: StyleUtils, },\n    ]; };\n    FlexOffsetDirective.propDecorators = {\n        \"offset\": [{ type: Input, args: ['fxFlexOffset',] },],\n        \"offsetXs\": [{ type: Input, args: ['fxFlexOffset.xs',] },],\n        \"offsetSm\": [{ type: Input, args: ['fxFlexOffset.sm',] },],\n        \"offsetMd\": [{ type: Input, args: ['fxFlexOffset.md',] },],\n        \"offsetLg\": [{ type: Input, args: ['fxFlexOffset.lg',] },],\n        \"offsetXl\": [{ type: Input, args: ['fxFlexOffset.xl',] },],\n        \"offsetLtSm\": [{ type: Input, args: ['fxFlexOffset.lt-sm',] },],\n        \"offsetLtMd\": [{ type: Input, args: ['fxFlexOffset.lt-md',] },],\n        \"offsetLtLg\": [{ type: Input, args: ['fxFlexOffset.lt-lg',] },],\n        \"offsetLtXl\": [{ type: Input, args: ['fxFlexOffset.lt-xl',] },],\n        \"offsetGtXs\": [{ type: Input, args: ['fxFlexOffset.gt-xs',] },],\n        \"offsetGtSm\": [{ type: Input, args: ['fxFlexOffset.gt-sm',] },],\n        \"offsetGtMd\": [{ type: Input, args: ['fxFlexOffset.gt-md',] },],\n        \"offsetGtLg\": [{ type: Input, args: ['fxFlexOffset.gt-lg',] },],\n    };\n    return FlexOffsetDirective;\n}(BaseDirective));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * 'flex-align' flexbox styling directive\n * Allows element-specific overrides for cross-axis alignments in a layout container\n * @see https://css-tricks.com/almanac/properties/a/align-self/\n */\nvar FlexAlignDirective = /** @class */ (function (_super) {\n    __extends(FlexAlignDirective, _super);\n    /* tslint:enable */\n    function FlexAlignDirective(monitor, elRef, styleUtils) {\n        return _super.call(this, monitor, elRef, styleUtils) || this;\n    }\n    Object.defineProperty(FlexAlignDirective.prototype, \"align\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('align', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FlexAlignDirective.prototype, \"alignXs\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('alignXs', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FlexAlignDirective.prototype, \"alignSm\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('alignSm', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FlexAlignDirective.prototype, \"alignMd\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('alignMd', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FlexAlignDirective.prototype, \"alignLg\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('alignLg', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FlexAlignDirective.prototype, \"alignXl\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('alignXl', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FlexAlignDirective.prototype, \"alignLtSm\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('alignLtSm', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FlexAlignDirective.prototype, \"alignLtMd\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('alignLtMd', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FlexAlignDirective.prototype, \"alignLtLg\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('alignLtLg', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FlexAlignDirective.prototype, \"alignLtXl\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('alignLtXl', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FlexAlignDirective.prototype, \"alignGtXs\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('alignGtXs', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FlexAlignDirective.prototype, \"alignGtSm\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('alignGtSm', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FlexAlignDirective.prototype, \"alignGtMd\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('alignGtMd', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FlexAlignDirective.prototype, \"alignGtLg\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('alignGtLg', val); },\n        enumerable: true,\n        configurable: true\n    });\n    // *********************************************\n    // Lifecycle Methods\n    // *********************************************\n    /**\n     * For @Input changes on the current mq activation property, see onMediaQueryChanges()\n     */\n    /**\n     * For \\@Input changes on the current mq activation property, see onMediaQueryChanges()\n     * @param {?} changes\n     * @return {?}\n     */\n    FlexAlignDirective.prototype.ngOnChanges = /**\n     * For \\@Input changes on the current mq activation property, see onMediaQueryChanges()\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        if (changes['align'] != null || this._mqActivation) {\n            this._updateWithValue();\n        }\n    };\n    /**\n     * After the initial onChanges, build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     */\n    /**\n     * After the initial onChanges, build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     * @return {?}\n     */\n    FlexAlignDirective.prototype.ngOnInit = /**\n     * After the initial onChanges, build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        _super.prototype.ngOnInit.call(this);\n        this._listenForMediaQueryChanges('align', 'stretch', function (changes) {\n            _this._updateWithValue(changes.value);\n        });\n        this._updateWithValue();\n    };\n    // *********************************************\n    // Protected methods\n    // *********************************************\n    /**\n     * @param {?=} value\n     * @return {?}\n     */\n    FlexAlignDirective.prototype._updateWithValue = /**\n     * @param {?=} value\n     * @return {?}\n     */\n    function (value) {\n        value = value || this._queryInput('align') || 'stretch';\n        if (this._mqActivation) {\n            value = this._mqActivation.activatedInput;\n        }\n        this._applyStyleToElement(this._buildCSS(value));\n    };\n    /**\n     * @param {?} align\n     * @return {?}\n     */\n    FlexAlignDirective.prototype._buildCSS = /**\n     * @param {?} align\n     * @return {?}\n     */\n    function (align) {\n        var /** @type {?} */ css = {};\n        // Cross-axis\n        switch (align) {\n            case 'start':\n                css['align-self'] = 'flex-start';\n                break;\n            case 'end':\n                css['align-self'] = 'flex-end';\n                break;\n            default:\n                css['align-self'] = align;\n                break;\n        }\n        return css;\n    };\n    FlexAlignDirective.decorators = [\n        { type: Directive, args: [{\n                    selector: \"\\n  [fxFlexAlign],\\n  [fxFlexAlign.xs], [fxFlexAlign.sm], [fxFlexAlign.md], [fxFlexAlign.lg], [fxFlexAlign.xl],\\n  [fxFlexAlign.lt-sm], [fxFlexAlign.lt-md], [fxFlexAlign.lt-lg], [fxFlexAlign.lt-xl],\\n  [fxFlexAlign.gt-xs], [fxFlexAlign.gt-sm], [fxFlexAlign.gt-md], [fxFlexAlign.gt-lg]\\n\"\n                },] },\n    ];\n    /** @nocollapse */\n    FlexAlignDirective.ctorParameters = function () { return [\n        { type: MediaMonitor, },\n        { type: ElementRef, },\n        { type: StyleUtils, },\n    ]; };\n    FlexAlignDirective.propDecorators = {\n        \"align\": [{ type: Input, args: ['fxFlexAlign',] },],\n        \"alignXs\": [{ type: Input, args: ['fxFlexAlign.xs',] },],\n        \"alignSm\": [{ type: Input, args: ['fxFlexAlign.sm',] },],\n        \"alignMd\": [{ type: Input, args: ['fxFlexAlign.md',] },],\n        \"alignLg\": [{ type: Input, args: ['fxFlexAlign.lg',] },],\n        \"alignXl\": [{ type: Input, args: ['fxFlexAlign.xl',] },],\n        \"alignLtSm\": [{ type: Input, args: ['fxFlexAlign.lt-sm',] },],\n        \"alignLtMd\": [{ type: Input, args: ['fxFlexAlign.lt-md',] },],\n        \"alignLtLg\": [{ type: Input, args: ['fxFlexAlign.lt-lg',] },],\n        \"alignLtXl\": [{ type: Input, args: ['fxFlexAlign.lt-xl',] },],\n        \"alignGtXs\": [{ type: Input, args: ['fxFlexAlign.gt-xs',] },],\n        \"alignGtSm\": [{ type: Input, args: ['fxFlexAlign.gt-sm',] },],\n        \"alignGtMd\": [{ type: Input, args: ['fxFlexAlign.gt-md',] },],\n        \"alignGtLg\": [{ type: Input, args: ['fxFlexAlign.gt-lg',] },],\n    };\n    return FlexAlignDirective;\n}(BaseDirective));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar /** @type {?} */ FLEX_FILL_CSS = {\n    'margin': 0,\n    'width': '100%',\n    'height': '100%',\n    'min-width': '100%',\n    'min-height': '100%'\n};\n/**\n * 'fxFill' flexbox styling directive\n *  Maximizes width and height of element in a layout container\n *\n *  NOTE: fxFill is NOT responsive API!!\n */\nvar FlexFillDirective = /** @class */ (function (_super) {\n    __extends(FlexFillDirective, _super);\n    function FlexFillDirective(monitor, elRef, styleUtils) {\n        var _this = _super.call(this, monitor, elRef, styleUtils) || this;\n        _this.elRef = elRef;\n        _this._applyStyleToElement(FLEX_FILL_CSS);\n        return _this;\n    }\n    FlexFillDirective.decorators = [\n        { type: Directive, args: [{ selector: \"\\n  [fxFill],\\n  [fxFlexFill]\\n\" },] },\n    ];\n    /** @nocollapse */\n    FlexFillDirective.ctorParameters = function () { return [\n        { type: MediaMonitor, },\n        { type: ElementRef, },\n        { type: StyleUtils, },\n    ]; };\n    return FlexFillDirective;\n}(BaseDirective));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * 'layout-align' flexbox styling directive\n *  Defines positioning of child elements along main and cross axis in a layout container\n *  Optional values: {main-axis} values or {main-axis cross-axis} value pairs\n *\n *  \\@see https://css-tricks.com/almanac/properties/j/justify-content/\n *  \\@see https://css-tricks.com/almanac/properties/a/align-items/\n *  \\@see https://css-tricks.com/almanac/properties/a/align-content/\n */\nvar LayoutAlignDirective = /** @class */ (function (_super) {\n    __extends(LayoutAlignDirective, _super);\n    /* tslint:enable */\n    function LayoutAlignDirective(monitor, elRef, container, styleUtils) {\n        var _this = _super.call(this, monitor, elRef, styleUtils) || this;\n        _this._layout = 'row';\n        if (container) {\n            // Subscribe to layout direction changes\n            _this._layoutWatcher = container.layout$.subscribe(_this._onLayoutChange.bind(_this));\n        }\n        return _this;\n    }\n    Object.defineProperty(LayoutAlignDirective.prototype, \"align\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('align', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LayoutAlignDirective.prototype, \"alignXs\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('alignXs', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LayoutAlignDirective.prototype, \"alignSm\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('alignSm', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LayoutAlignDirective.prototype, \"alignMd\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('alignMd', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LayoutAlignDirective.prototype, \"alignLg\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('alignLg', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LayoutAlignDirective.prototype, \"alignXl\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('alignXl', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LayoutAlignDirective.prototype, \"alignGtXs\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('alignGtXs', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LayoutAlignDirective.prototype, \"alignGtSm\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('alignGtSm', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LayoutAlignDirective.prototype, \"alignGtMd\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('alignGtMd', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LayoutAlignDirective.prototype, \"alignGtLg\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('alignGtLg', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LayoutAlignDirective.prototype, \"alignLtSm\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('alignLtSm', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LayoutAlignDirective.prototype, \"alignLtMd\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('alignLtMd', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LayoutAlignDirective.prototype, \"alignLtLg\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('alignLtLg', val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LayoutAlignDirective.prototype, \"alignLtXl\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('alignLtXl', val); },\n        enumerable: true,\n        configurable: true\n    });\n    // *********************************************\n    // Lifecycle Methods\n    // *********************************************\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    LayoutAlignDirective.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        if (changes['align'] != null || this._mqActivation) {\n            this._updateWithValue();\n        }\n    };\n    /**\n     * After the initial onChanges, build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     */\n    /**\n     * After the initial onChanges, build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     * @return {?}\n     */\n    LayoutAlignDirective.prototype.ngOnInit = /**\n     * After the initial onChanges, build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        _super.prototype.ngOnInit.call(this);\n        this._listenForMediaQueryChanges('align', 'start stretch', function (changes) {\n            _this._updateWithValue(changes.value);\n        });\n        this._updateWithValue();\n    };\n    /**\n     * @return {?}\n     */\n    LayoutAlignDirective.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        _super.prototype.ngOnDestroy.call(this);\n        if (this._layoutWatcher) {\n            this._layoutWatcher.unsubscribe();\n        }\n    };\n    // *********************************************\n    // Protected methods\n    // *********************************************\n    /**\n     *\n     */\n    /**\n     *\n     * @param {?=} value\n     * @return {?}\n     */\n    LayoutAlignDirective.prototype._updateWithValue = /**\n     *\n     * @param {?=} value\n     * @return {?}\n     */\n    function (value) {\n        value = value || this._queryInput('align') || 'start stretch';\n        if (this._mqActivation) {\n            value = this._mqActivation.activatedInput;\n        }\n        this._applyStyleToElement(this._buildCSS(value));\n        this._allowStretching(value, !this._layout ? 'row' : this._layout);\n    };\n    /**\n     * Cache the parent container 'flex-direction' and update the 'flex' styles\n     */\n    /**\n     * Cache the parent container 'flex-direction' and update the 'flex' styles\n     * @param {?} layout\n     * @return {?}\n     */\n    LayoutAlignDirective.prototype._onLayoutChange = /**\n     * Cache the parent container 'flex-direction' and update the 'flex' styles\n     * @param {?} layout\n     * @return {?}\n     */\n    function (layout) {\n        var _this = this;\n        this._layout = (layout.direction || '').toLowerCase();\n        if (!LAYOUT_VALUES.find(function (x) { return x === _this._layout; })) {\n            this._layout = 'row';\n        }\n        var /** @type {?} */ value = this._queryInput('align') || 'start stretch';\n        if (this._mqActivation) {\n            value = this._mqActivation.activatedInput;\n        }\n        this._allowStretching(value, this._layout || 'row');\n    };\n    /**\n     * @param {?} align\n     * @return {?}\n     */\n    LayoutAlignDirective.prototype._buildCSS = /**\n     * @param {?} align\n     * @return {?}\n     */\n    function (align) {\n        var /** @type {?} */ css = {}, _a = align.split(' '), main_axis = _a[0], cross_axis = _a[1]; // tslint:disable-line:variable-name\n        // Main axis\n        switch (main_axis) {\n            case 'center':\n                css['justify-content'] = 'center';\n                break;\n            case 'space-around':\n                css['justify-content'] = 'space-around';\n                break;\n            case 'space-between':\n                css['justify-content'] = 'space-between';\n                break;\n            case 'space-evenly':\n                css['justify-content'] = 'space-evenly';\n                break;\n            case 'end':\n            case 'flex-end':\n                css['justify-content'] = 'flex-end';\n                break;\n            case 'start':\n            case 'flex-start':\n            default:\n                css['justify-content'] = 'flex-start'; // default main axis\n                break;\n        }\n        // Cross-axis\n        switch (cross_axis) {\n            case 'start':\n            case 'flex-start':\n                css['align-items'] = css['align-content'] = 'flex-start';\n                break;\n            case 'baseline':\n                css['align-items'] = 'baseline';\n                break;\n            case 'center':\n                css['align-items'] = css['align-content'] = 'center';\n                break;\n            case 'end':\n            case 'flex-end':\n                css['align-items'] = css['align-content'] = 'flex-end';\n                break;\n            case 'stretch':\n            default:\n                // 'stretch'\n                css['align-items'] = css['align-content'] = 'stretch'; // default cross axis\n                break;\n        }\n        return extendObject(css, {\n            'display': 'flex',\n            'flex-direction': this._layout || 'row',\n            'box-sizing': 'border-box'\n        });\n    };\n    /**\n     * Update container element to 'stretch' as needed...\n     * NOTE: this is only done if the crossAxis is explicitly set to 'stretch'\n     */\n    /**\n     * Update container element to 'stretch' as needed...\n     * NOTE: this is only done if the crossAxis is explicitly set to 'stretch'\n     * @param {?} align\n     * @param {?} layout\n     * @return {?}\n     */\n    LayoutAlignDirective.prototype._allowStretching = /**\n     * Update container element to 'stretch' as needed...\n     * NOTE: this is only done if the crossAxis is explicitly set to 'stretch'\n     * @param {?} align\n     * @param {?} layout\n     * @return {?}\n     */\n    function (align, layout) {\n        var _a = align.split(' '), cross_axis = _a[1]; // tslint:disable-line:variable-name\n        if (cross_axis == 'stretch') {\n            // Use `null` values to remove style\n            this._applyStyleToElement({\n                'box-sizing': 'border-box',\n                'max-width': !isFlowHorizontal(layout) ? '100%' : null,\n                'max-height': isFlowHorizontal(layout) ? '100%' : null\n            });\n        }\n    };\n    LayoutAlignDirective.decorators = [\n        { type: Directive, args: [{ selector: \"\\n  [fxLayoutAlign],\\n  [fxLayoutAlign.xs], [fxLayoutAlign.sm], [fxLayoutAlign.md], [fxLayoutAlign.lg],[fxLayoutAlign.xl],\\n  [fxLayoutAlign.lt-sm], [fxLayoutAlign.lt-md], [fxLayoutAlign.lt-lg], [fxLayoutAlign.lt-xl],\\n  [fxLayoutAlign.gt-xs], [fxLayoutAlign.gt-sm], [fxLayoutAlign.gt-md], [fxLayoutAlign.gt-lg]\\n\" },] },\n    ];\n    /** @nocollapse */\n    LayoutAlignDirective.ctorParameters = function () { return [\n        { type: MediaMonitor, },\n        { type: ElementRef, },\n        { type: LayoutDirective, decorators: [{ type: Optional }, { type: Self },] },\n        { type: StyleUtils, },\n    ]; };\n    LayoutAlignDirective.propDecorators = {\n        \"align\": [{ type: Input, args: ['fxLayoutAlign',] },],\n        \"alignXs\": [{ type: Input, args: ['fxLayoutAlign.xs',] },],\n        \"alignSm\": [{ type: Input, args: ['fxLayoutAlign.sm',] },],\n        \"alignMd\": [{ type: Input, args: ['fxLayoutAlign.md',] },],\n        \"alignLg\": [{ type: Input, args: ['fxLayoutAlign.lg',] },],\n        \"alignXl\": [{ type: Input, args: ['fxLayoutAlign.xl',] },],\n        \"alignGtXs\": [{ type: Input, args: ['fxLayoutAlign.gt-xs',] },],\n        \"alignGtSm\": [{ type: Input, args: ['fxLayoutAlign.gt-sm',] },],\n        \"alignGtMd\": [{ type: Input, args: ['fxLayoutAlign.gt-md',] },],\n        \"alignGtLg\": [{ type: Input, args: ['fxLayoutAlign.gt-lg',] },],\n        \"alignLtSm\": [{ type: Input, args: ['fxLayoutAlign.lt-sm',] },],\n        \"alignLtMd\": [{ type: Input, args: ['fxLayoutAlign.lt-md',] },],\n        \"alignLtLg\": [{ type: Input, args: ['fxLayoutAlign.lt-lg',] },],\n        \"alignLtXl\": [{ type: Input, args: ['fxLayoutAlign.lt-xl',] },],\n    };\n    return LayoutAlignDirective;\n}(BaseDirective));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar /** @type {?} */ ALL_DIRECTIVES = [\n    LayoutDirective,\n    LayoutGapDirective,\n    LayoutAlignDirective,\n    FlexDirective,\n    FlexOrderDirective,\n    FlexOffsetDirective,\n    FlexFillDirective,\n    FlexAlignDirective,\n];\n/**\n * *****************************************************************\n * Define module for the Flex API\n * *****************************************************************\n */\nvar FlexModule = /** @class */ (function () {\n    function FlexModule() {\n    }\n    FlexModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [CoreModule, BidiModule],\n                    declarations: ALL_DIRECTIVES.slice(),\n                    exports: ALL_DIRECTIVES.slice()\n                },] },\n    ];\n    /** @nocollapse */\n    FlexModule.ctorParameters = function () { return []; };\n    return FlexModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nexport { FlexModule, FlexDirective, FlexAlignDirective, FlexFillDirective, FlexOffsetDirective, FlexOrderDirective, LayoutDirective, LayoutAlignDirective, LayoutGapDirective };\n//# sourceMappingURL=flex.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { __extends } from 'tslib';\nimport { Directive, ElementRef, Input, NgModule } from '@angular/core';\nimport { BaseDirective, MediaMonitor, StyleUtils, CoreModule } from '@angular/flex-layout/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar /** @type {?} */ CACHE_KEY = 'align';\nvar /** @type {?} */ ROW_DEFAULT = 'stretch';\nvar /** @type {?} */ COL_DEFAULT = 'stretch';\n/**\n * 'align' CSS Grid styling directive for grid children\n *  Defines positioning of child elements along row and column axis in a grid container\n *  Optional values: {row-axis} values or {row-axis column-axis} value pairs\n *\n *  \\@see https://css-tricks.com/snippets/css/complete-guide-grid/#prop-justify-self\n *  \\@see https://css-tricks.com/snippets/css/complete-guide-grid/#prop-align-self\n */\nvar GridAlignDirective = /** @class */ (function (_super) {\n    __extends(GridAlignDirective, _super);\n    /* tslint:enable */\n    function GridAlignDirective(monitor, elRef, styleUtils) {\n        return _super.call(this, monitor, elRef, styleUtils) || this;\n    }\n    Object.defineProperty(GridAlignDirective.prototype, \"align\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(\"\" + CACHE_KEY, val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAlignDirective.prototype, \"alignXs\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY + \"Xs\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAlignDirective.prototype, \"alignSm\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY + \"Sm\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAlignDirective.prototype, \"alignMd\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY + \"Md\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAlignDirective.prototype, \"alignLg\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY + \"Lg\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAlignDirective.prototype, \"alignXl\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY + \"Xl\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAlignDirective.prototype, \"alignGtXs\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY + \"GtXs\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAlignDirective.prototype, \"alignGtSm\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY + \"GtSm\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAlignDirective.prototype, \"alignGtMd\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY + \"GtMd\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAlignDirective.prototype, \"alignGtLg\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY + \"GtLg\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAlignDirective.prototype, \"alignLtSm\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY + \"LtSm\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAlignDirective.prototype, \"alignLtMd\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY + \"LtMd\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAlignDirective.prototype, \"alignLtLg\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY + \"LtLg\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAlignDirective.prototype, \"alignLtXl\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY + \"LtXl\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    // *********************************************\n    // Lifecycle Methods\n    // *********************************************\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    GridAlignDirective.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        if (changes[CACHE_KEY] != null || this._mqActivation) {\n            this._updateWithValue();\n        }\n    };\n    /**\n     * After the initial onChanges, build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     */\n    /**\n     * After the initial onChanges, build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     * @return {?}\n     */\n    GridAlignDirective.prototype.ngOnInit = /**\n     * After the initial onChanges, build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        _super.prototype.ngOnInit.call(this);\n        this._listenForMediaQueryChanges(CACHE_KEY, ROW_DEFAULT, function (changes) {\n            _this._updateWithValue(changes.value);\n        });\n        this._updateWithValue();\n    };\n    // *********************************************\n    // Protected methods\n    // *********************************************\n    /**\n     *\n     */\n    /**\n     *\n     * @param {?=} value\n     * @return {?}\n     */\n    GridAlignDirective.prototype._updateWithValue = /**\n     *\n     * @param {?=} value\n     * @return {?}\n     */\n    function (value) {\n        value = value || this._queryInput(CACHE_KEY) || ROW_DEFAULT;\n        if (this._mqActivation) {\n            value = this._mqActivation.activatedInput;\n        }\n        this._applyStyleToElement(this._buildCSS(value));\n    };\n    /**\n     * @param {?} align\n     * @return {?}\n     */\n    GridAlignDirective.prototype._buildCSS = /**\n     * @param {?} align\n     * @return {?}\n     */\n    function (align) {\n        var /** @type {?} */ css = {}, _a = align.split(' '), rowAxis = _a[0], columnAxis = _a[1];\n        // Row axis\n        switch (rowAxis) {\n            case 'end':\n                css['justify-self'] = 'end';\n                break;\n            case 'center':\n                css['justify-self'] = 'center';\n                break;\n            case 'stretch':\n                css['justify-self'] = 'stretch';\n                break;\n            case 'start':\n                css['justify-self'] = 'start';\n                break;\n            default:\n                css['justify-self'] = ROW_DEFAULT; // default row axis\n                break;\n        }\n        // Column axis\n        switch (columnAxis) {\n            case 'end':\n                css['align-self'] = 'end';\n                break;\n            case 'center':\n                css['align-self'] = 'center';\n                break;\n            case 'stretch':\n                css['align-self'] = 'stretch';\n                break;\n            case 'start':\n                css['align-self'] = 'start';\n                break;\n            default:\n                css['align-self'] = COL_DEFAULT; // default column axis\n                break;\n        }\n        return css;\n    };\n    GridAlignDirective.decorators = [\n        { type: Directive, args: [{ selector: \"\\n  [gdGridAlign],\\n  [gdGridAlign.xs], [gdGridAlign.sm], [gdGridAlign.md], [gdGridAlign.lg],[gdGridAlign.xl],\\n  [gdGridAlign.lt-sm], [gdGridAlign.lt-md], [gdGridAlign.lt-lg], [gdGridAlign.lt-xl],\\n  [gdGridAlign.gt-xs], [gdGridAlign.gt-sm], [gdGridAlign.gt-md], [gdGridAlign.gt-lg]\\n\" },] },\n    ];\n    /** @nocollapse */\n    GridAlignDirective.ctorParameters = function () { return [\n        { type: MediaMonitor, },\n        { type: ElementRef, },\n        { type: StyleUtils, },\n    ]; };\n    GridAlignDirective.propDecorators = {\n        \"align\": [{ type: Input, args: ['gdGridAlign',] },],\n        \"alignXs\": [{ type: Input, args: ['gdGridAlign.xs',] },],\n        \"alignSm\": [{ type: Input, args: ['gdGridAlign.sm',] },],\n        \"alignMd\": [{ type: Input, args: ['gdGridAlign.md',] },],\n        \"alignLg\": [{ type: Input, args: ['gdGridAlign.lg',] },],\n        \"alignXl\": [{ type: Input, args: ['gdGridAlign.xl',] },],\n        \"alignGtXs\": [{ type: Input, args: ['gdGridAlign.gt-xs',] },],\n        \"alignGtSm\": [{ type: Input, args: ['gdGridAlign.gt-sm',] },],\n        \"alignGtMd\": [{ type: Input, args: ['gdGridAlign.gt-md',] },],\n        \"alignGtLg\": [{ type: Input, args: ['gdGridAlign.gt-lg',] },],\n        \"alignLtSm\": [{ type: Input, args: ['gdGridAlign.lt-sm',] },],\n        \"alignLtMd\": [{ type: Input, args: ['gdGridAlign.lt-md',] },],\n        \"alignLtLg\": [{ type: Input, args: ['gdGridAlign.lt-lg',] },],\n        \"alignLtXl\": [{ type: Input, args: ['gdGridAlign.lt-xl',] },],\n    };\n    return GridAlignDirective;\n}(BaseDirective));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\n * similar to Object.assign.\n *\n * @param {?} dest The object which will have properties copied to it.\n * @param {...?} sources The source objects from which properties will be copied.\n * @return {?}\n */\nfunction extendObject(dest) {\n    var sources = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        sources[_i - 1] = arguments[_i];\n    }\n    if (dest == null) {\n        throw TypeError('Cannot convert undefined or null to object');\n    }\n    for (var _a = 0, sources_1 = sources; _a < sources_1.length; _a++) {\n        var source = sources_1[_a];\n        if (source != null) {\n            for (var /** @type {?} */ key in source) {\n                if (source.hasOwnProperty(key)) {\n                    dest[key] = source[key];\n                }\n            }\n        }\n    }\n    return dest;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar /** @type {?} */ CACHE_KEY$1 = 'alignColumns';\nvar /** @type {?} */ DEFAULT_MAIN = 'start';\nvar /** @type {?} */ DEFAULT_CROSS = 'stretch';\n/**\n * 'column alignment' CSS Grid styling directive\n * Configures the alignment in the column direction\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-19\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-21\n */\nvar GridAlignColumnsDirective = /** @class */ (function (_super) {\n    __extends(GridAlignColumnsDirective, _super);\n    /* tslint:enable */\n    function GridAlignColumnsDirective(monitor, elRef, styleUtils) {\n        return _super.call(this, monitor, elRef, styleUtils) || this;\n    }\n    Object.defineProperty(GridAlignColumnsDirective.prototype, \"align\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(\"\" + CACHE_KEY$1, val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAlignColumnsDirective.prototype, \"alignXs\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$1 + \"Xs\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAlignColumnsDirective.prototype, \"alignSm\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$1 + \"Sm\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAlignColumnsDirective.prototype, \"alignMd\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$1 + \"Md\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAlignColumnsDirective.prototype, \"alignLg\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$1 + \"Lg\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAlignColumnsDirective.prototype, \"alignXl\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$1 + \"Xl\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAlignColumnsDirective.prototype, \"alignGtXs\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$1 + \"GtXs\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAlignColumnsDirective.prototype, \"alignGtSm\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$1 + \"GtSm\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAlignColumnsDirective.prototype, \"alignGtMd\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$1 + \"GtMd\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAlignColumnsDirective.prototype, \"alignGtLg\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$1 + \"GtLg\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAlignColumnsDirective.prototype, \"alignLtSm\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$1 + \"LtSm\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAlignColumnsDirective.prototype, \"alignLtMd\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$1 + \"LtMd\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAlignColumnsDirective.prototype, \"alignLtLg\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$1 + \"LtLg\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAlignColumnsDirective.prototype, \"alignLtXl\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$1 + \"LtXl\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAlignColumnsDirective.prototype, \"inline\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('inline', coerceBooleanProperty(val)); },\n        enumerable: true,\n        configurable: true\n    });\n    // *********************************************\n    // Lifecycle Methods\n    // *********************************************\n    /**\n     * For @Input changes on the current mq activation property, see onMediaQueryChanges()\n     */\n    /**\n     * For \\@Input changes on the current mq activation property, see onMediaQueryChanges()\n     * @param {?} changes\n     * @return {?}\n     */\n    GridAlignColumnsDirective.prototype.ngOnChanges = /**\n     * For \\@Input changes on the current mq activation property, see onMediaQueryChanges()\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        if (changes[CACHE_KEY$1] != null || this._mqActivation) {\n            this._updateWithValue();\n        }\n    };\n    /**\n     * After the initial onChanges, build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     */\n    /**\n     * After the initial onChanges, build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     * @return {?}\n     */\n    GridAlignColumnsDirective.prototype.ngOnInit = /**\n     * After the initial onChanges, build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        _super.prototype.ngOnInit.call(this);\n        this._listenForMediaQueryChanges(CACHE_KEY$1, DEFAULT_MAIN + \" \" + DEFAULT_CROSS, function (changes) {\n            _this._updateWithValue(changes.value);\n        });\n        this._updateWithValue();\n    };\n    // *********************************************\n    // Protected methods\n    // *********************************************\n    /**\n     * @param {?=} value\n     * @return {?}\n     */\n    GridAlignColumnsDirective.prototype._updateWithValue = /**\n     * @param {?=} value\n     * @return {?}\n     */\n    function (value) {\n        value = value || this._queryInput(CACHE_KEY$1) || DEFAULT_MAIN + \" \" + DEFAULT_CROSS;\n        if (this._mqActivation) {\n            value = this._mqActivation.activatedInput;\n        }\n        this._applyStyleToElement(this._buildCSS(value));\n    };\n    /**\n     * @param {?} align\n     * @return {?}\n     */\n    GridAlignColumnsDirective.prototype._buildCSS = /**\n     * @param {?} align\n     * @return {?}\n     */\n    function (align) {\n        var /** @type {?} */ css = {}, _a = align.split(' '), mainAxis = _a[0], crossAxis = _a[1];\n        // Main axis\n        switch (mainAxis) {\n            case 'center':\n                css['align-content'] = 'center';\n                break;\n            case 'space-around':\n                css['align-content'] = 'space-around';\n                break;\n            case 'space-between':\n                css['align-content'] = 'space-between';\n                break;\n            case 'space-evenly':\n                css['align-content'] = 'space-evenly';\n                break;\n            case 'end':\n                css['align-content'] = 'end';\n                break;\n            case 'start':\n                css['align-content'] = 'start';\n                break;\n            case 'stretch':\n                css['align-content'] = 'stretch';\n                break;\n            default:\n                css['align-content'] = DEFAULT_MAIN; // default main axis\n                break;\n        }\n        // Cross-axis\n        switch (crossAxis) {\n            case 'start':\n                css['align-items'] = 'start';\n                break;\n            case 'center':\n                css['align-items'] = 'center';\n                break;\n            case 'end':\n                css['align-items'] = 'end';\n                break;\n            case 'stretch':\n                css['align-items'] = 'stretch';\n                break;\n            default:\n                // 'stretch'\n                css['align-items'] = DEFAULT_CROSS; // default cross axis\n                break;\n        }\n        return extendObject(css, { 'display': this._queryInput('inline') ? 'inline-grid' : 'grid' });\n    };\n    GridAlignColumnsDirective.decorators = [\n        { type: Directive, args: [{ selector: \"\\n  [gdAlignColumns],\\n  [gdAlignColumns.xs], [gdAlignColumns.sm], [gdAlignColumns.md],\\n  [gdAlignColumns.lg], [gdAlignColumns.xl], [gdAlignColumns.lt-sm],\\n  [gdAlignColumns.lt-md], [gdAlignColumns.lt-lg], [gdAlignColumns.lt-xl],\\n  [gdAlignColumns.gt-xs], [gdAlignColumns.gt-sm], [gdAlignColumns.gt-md],\\n  [gdAlignColumns.gt-lg]\\n\" },] },\n    ];\n    /** @nocollapse */\n    GridAlignColumnsDirective.ctorParameters = function () { return [\n        { type: MediaMonitor, },\n        { type: ElementRef, },\n        { type: StyleUtils, },\n    ]; };\n    GridAlignColumnsDirective.propDecorators = {\n        \"align\": [{ type: Input, args: ['gdAlignColumns',] },],\n        \"alignXs\": [{ type: Input, args: ['gdAlignColumns.xs',] },],\n        \"alignSm\": [{ type: Input, args: ['gdAlignColumns.sm',] },],\n        \"alignMd\": [{ type: Input, args: ['gdAlignColumns.md',] },],\n        \"alignLg\": [{ type: Input, args: ['gdAlignColumns.lg',] },],\n        \"alignXl\": [{ type: Input, args: ['gdAlignColumns.xl',] },],\n        \"alignGtXs\": [{ type: Input, args: ['gdAlignColumns.gt-xs',] },],\n        \"alignGtSm\": [{ type: Input, args: ['gdAlignColumns.gt-sm',] },],\n        \"alignGtMd\": [{ type: Input, args: ['gdAlignColumns.gt-md',] },],\n        \"alignGtLg\": [{ type: Input, args: ['gdAlignColumns.gt-lg',] },],\n        \"alignLtSm\": [{ type: Input, args: ['gdAlignColumns.lt-sm',] },],\n        \"alignLtMd\": [{ type: Input, args: ['gdAlignColumns.lt-md',] },],\n        \"alignLtLg\": [{ type: Input, args: ['gdAlignColumns.lt-lg',] },],\n        \"alignLtXl\": [{ type: Input, args: ['gdAlignColumns.lt-xl',] },],\n        \"inline\": [{ type: Input, args: ['gdInline',] },],\n    };\n    return GridAlignColumnsDirective;\n}(BaseDirective));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar /** @type {?} */ CACHE_KEY$2 = 'alignRows';\nvar /** @type {?} */ DEFAULT_MAIN$1 = 'start';\nvar /** @type {?} */ DEFAULT_CROSS$1 = 'stretch';\n/**\n * 'row alignment' CSS Grid styling directive\n * Configures the alignment in the row direction\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-18\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-20\n */\nvar GridAlignRowsDirective = /** @class */ (function (_super) {\n    __extends(GridAlignRowsDirective, _super);\n    /* tslint:enable */\n    function GridAlignRowsDirective(monitor, elRef, styleUtils) {\n        return _super.call(this, monitor, elRef, styleUtils) || this;\n    }\n    Object.defineProperty(GridAlignRowsDirective.prototype, \"align\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(\"\" + CACHE_KEY$2, val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAlignRowsDirective.prototype, \"alignXs\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$2 + \"Xs\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAlignRowsDirective.prototype, \"alignSm\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$2 + \"Sm\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAlignRowsDirective.prototype, \"alignMd\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$2 + \"Md\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAlignRowsDirective.prototype, \"alignLg\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$2 + \"Lg\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAlignRowsDirective.prototype, \"alignXl\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$2 + \"Xl\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAlignRowsDirective.prototype, \"alignGtXs\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$2 + \"GtXs\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAlignRowsDirective.prototype, \"alignGtSm\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$2 + \"GtSm\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAlignRowsDirective.prototype, \"alignGtMd\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$2 + \"GtMd\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAlignRowsDirective.prototype, \"alignGtLg\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$2 + \"GtLg\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAlignRowsDirective.prototype, \"alignLtSm\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$2 + \"LtSm\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAlignRowsDirective.prototype, \"alignLtMd\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$2 + \"LtMd\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAlignRowsDirective.prototype, \"alignLtLg\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$2 + \"LtLg\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAlignRowsDirective.prototype, \"alignLtXl\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$2 + \"LtXl\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAlignRowsDirective.prototype, \"inline\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('inline', coerceBooleanProperty(val)); },\n        enumerable: true,\n        configurable: true\n    });\n    // *********************************************\n    // Lifecycle Methods\n    // *********************************************\n    /**\n     * For @Input changes on the current mq activation property, see onMediaQueryChanges()\n     */\n    /**\n     * For \\@Input changes on the current mq activation property, see onMediaQueryChanges()\n     * @param {?} changes\n     * @return {?}\n     */\n    GridAlignRowsDirective.prototype.ngOnChanges = /**\n     * For \\@Input changes on the current mq activation property, see onMediaQueryChanges()\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        if (changes[CACHE_KEY$2] != null || this._mqActivation) {\n            this._updateWithValue();\n        }\n    };\n    /**\n     * After the initial onChanges, build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     */\n    /**\n     * After the initial onChanges, build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     * @return {?}\n     */\n    GridAlignRowsDirective.prototype.ngOnInit = /**\n     * After the initial onChanges, build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        _super.prototype.ngOnInit.call(this);\n        this._listenForMediaQueryChanges(CACHE_KEY$2, DEFAULT_MAIN$1 + \" \" + DEFAULT_CROSS$1, function (changes) {\n            _this._updateWithValue(changes.value);\n        });\n        this._updateWithValue();\n    };\n    // *********************************************\n    // Protected methods\n    // *********************************************\n    /**\n     * @param {?=} value\n     * @return {?}\n     */\n    GridAlignRowsDirective.prototype._updateWithValue = /**\n     * @param {?=} value\n     * @return {?}\n     */\n    function (value) {\n        value = value || this._queryInput(CACHE_KEY$2) || DEFAULT_MAIN$1 + \" \" + DEFAULT_CROSS$1;\n        if (this._mqActivation) {\n            value = this._mqActivation.activatedInput;\n        }\n        this._applyStyleToElement(this._buildCSS(value));\n    };\n    /**\n     * @param {?} align\n     * @return {?}\n     */\n    GridAlignRowsDirective.prototype._buildCSS = /**\n     * @param {?} align\n     * @return {?}\n     */\n    function (align) {\n        var /** @type {?} */ css = {}, _a = align.split(' '), mainAxis = _a[0], crossAxis = _a[1];\n        // Main axis\n        switch (mainAxis) {\n            case 'center':\n            case 'space-around':\n            case 'space-between':\n            case 'space-evenly':\n            case 'end':\n            case 'start':\n            case 'stretch':\n                css['justify-content'] = mainAxis;\n                break;\n            default:\n                css['justify-content'] = DEFAULT_MAIN$1; // default main axis\n                break;\n        }\n        // Cross-axis\n        switch (crossAxis) {\n            case 'start':\n            case 'center':\n            case 'end':\n            case 'stretch':\n                css['justify-items'] = crossAxis;\n                break;\n            default:\n                // 'stretch'\n                css['justify-items'] = DEFAULT_CROSS$1; // default cross axis\n                break;\n        }\n        return extendObject(css, { 'display': this._queryInput('inline') ? 'inline-grid' : 'grid' });\n    };\n    GridAlignRowsDirective.decorators = [\n        { type: Directive, args: [{ selector: \"\\n  [gdAlignRows],\\n  [gdAlignRows.xs], [gdAlignRows.sm], [gdAlignRows.md],\\n  [gdAlignRows.lg], [gdAlignRows.xl], [gdAlignRows.lt-sm],\\n  [gdAlignRows.lt-md], [gdAlignRows.lt-lg], [gdAlignRows.lt-xl],\\n  [gdAlignRows.gt-xs], [gdAlignRows.gt-sm], [gdAlignRows.gt-md],\\n  [gdAlignRows.gt-lg]\\n\" },] },\n    ];\n    /** @nocollapse */\n    GridAlignRowsDirective.ctorParameters = function () { return [\n        { type: MediaMonitor, },\n        { type: ElementRef, },\n        { type: StyleUtils, },\n    ]; };\n    GridAlignRowsDirective.propDecorators = {\n        \"align\": [{ type: Input, args: ['gdAlignRows',] },],\n        \"alignXs\": [{ type: Input, args: ['gdAlignRows.xs',] },],\n        \"alignSm\": [{ type: Input, args: ['gdAlignRows.sm',] },],\n        \"alignMd\": [{ type: Input, args: ['gdAlignRows.md',] },],\n        \"alignLg\": [{ type: Input, args: ['gdAlignRows.lg',] },],\n        \"alignXl\": [{ type: Input, args: ['gdAlignRows.xl',] },],\n        \"alignGtXs\": [{ type: Input, args: ['gdAlignRows.gt-xs',] },],\n        \"alignGtSm\": [{ type: Input, args: ['gdAlignRows.gt-sm',] },],\n        \"alignGtMd\": [{ type: Input, args: ['gdAlignRows.gt-md',] },],\n        \"alignGtLg\": [{ type: Input, args: ['gdAlignRows.gt-lg',] },],\n        \"alignLtSm\": [{ type: Input, args: ['gdAlignRows.lt-sm',] },],\n        \"alignLtMd\": [{ type: Input, args: ['gdAlignRows.lt-md',] },],\n        \"alignLtLg\": [{ type: Input, args: ['gdAlignRows.lt-lg',] },],\n        \"alignLtXl\": [{ type: Input, args: ['gdAlignRows.lt-xl',] },],\n        \"inline\": [{ type: Input, args: ['gdInline',] },],\n    };\n    return GridAlignRowsDirective;\n}(BaseDirective));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar /** @type {?} */ CACHE_KEY$3 = 'area';\nvar /** @type {?} */ DEFAULT_VALUE = 'auto';\n/**\n * 'grid-area' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-27\n */\nvar GridAreaDirective = /** @class */ (function (_super) {\n    __extends(GridAreaDirective, _super);\n    /* tslint:enable */\n    function GridAreaDirective(monitor, elRef, styleUtils) {\n        return _super.call(this, monitor, elRef, styleUtils) || this;\n    }\n    Object.defineProperty(GridAreaDirective.prototype, \"align\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(\"\" + CACHE_KEY$3, val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAreaDirective.prototype, \"alignXs\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$3 + \"Xs\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAreaDirective.prototype, \"alignSm\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$3 + \"Sm\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAreaDirective.prototype, \"alignMd\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$3 + \"Md\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAreaDirective.prototype, \"alignLg\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$3 + \"Lg\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAreaDirective.prototype, \"alignXl\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$3 + \"Xl\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAreaDirective.prototype, \"alignGtXs\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$3 + \"GtXs\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAreaDirective.prototype, \"alignGtSm\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$3 + \"GtSm\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAreaDirective.prototype, \"alignGtMd\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$3 + \"GtMd\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAreaDirective.prototype, \"alignGtLg\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$3 + \"GtLg\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAreaDirective.prototype, \"alignLtSm\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$3 + \"LtSm\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAreaDirective.prototype, \"alignLtMd\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$3 + \"LtMd\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAreaDirective.prototype, \"alignLtLg\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$3 + \"LtLg\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAreaDirective.prototype, \"alignLtXl\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$3 + \"LtXl\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    // *********************************************\n    // Lifecycle Methods\n    // *********************************************\n    /**\n     * For @Input changes on the current mq activation property, see onMediaQueryChanges()\n     */\n    /**\n     * For \\@Input changes on the current mq activation property, see onMediaQueryChanges()\n     * @param {?} changes\n     * @return {?}\n     */\n    GridAreaDirective.prototype.ngOnChanges = /**\n     * For \\@Input changes on the current mq activation property, see onMediaQueryChanges()\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        if (changes[CACHE_KEY$3] != null || this._mqActivation) {\n            this._updateWithValue();\n        }\n    };\n    /**\n     * After the initial onChanges, build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     */\n    /**\n     * After the initial onChanges, build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     * @return {?}\n     */\n    GridAreaDirective.prototype.ngOnInit = /**\n     * After the initial onChanges, build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        _super.prototype.ngOnInit.call(this);\n        this._listenForMediaQueryChanges(CACHE_KEY$3, DEFAULT_VALUE, function (changes) {\n            _this._updateWithValue(changes.value);\n        });\n        this._updateWithValue();\n    };\n    // *********************************************\n    // Protected methods\n    // *********************************************\n    /**\n     * @param {?=} value\n     * @return {?}\n     */\n    GridAreaDirective.prototype._updateWithValue = /**\n     * @param {?=} value\n     * @return {?}\n     */\n    function (value) {\n        value = value || this._queryInput(CACHE_KEY$3) || DEFAULT_VALUE;\n        if (this._mqActivation) {\n            value = this._mqActivation.activatedInput;\n        }\n        this._applyStyleToElement(this._buildCSS(value));\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    GridAreaDirective.prototype._buildCSS = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        return { 'grid-area': value };\n    };\n    GridAreaDirective.decorators = [\n        { type: Directive, args: [{ selector: \"\\n  [gdArea],\\n  [gdArea.xs], [gdArea.sm], [gdArea.md], [gdArea.lg], [gdArea.xl],\\n  [gdArea.lt-sm], [gdArea.lt-md], [gdArea.lt-lg], [gdArea.lt-xl],\\n  [gdArea.gt-xs], [gdArea.gt-sm], [gdArea.gt-md], [gdArea.gt-lg]\\n\" },] },\n    ];\n    /** @nocollapse */\n    GridAreaDirective.ctorParameters = function () { return [\n        { type: MediaMonitor, },\n        { type: ElementRef, },\n        { type: StyleUtils, },\n    ]; };\n    GridAreaDirective.propDecorators = {\n        \"align\": [{ type: Input, args: ['gdArea',] },],\n        \"alignXs\": [{ type: Input, args: ['gdArea.xs',] },],\n        \"alignSm\": [{ type: Input, args: ['gdArea.sm',] },],\n        \"alignMd\": [{ type: Input, args: ['gdArea.md',] },],\n        \"alignLg\": [{ type: Input, args: ['gdArea.lg',] },],\n        \"alignXl\": [{ type: Input, args: ['gdArea.xl',] },],\n        \"alignGtXs\": [{ type: Input, args: ['gdArea.gt-xs',] },],\n        \"alignGtSm\": [{ type: Input, args: ['gdArea.gt-sm',] },],\n        \"alignGtMd\": [{ type: Input, args: ['gdArea.gt-md',] },],\n        \"alignGtLg\": [{ type: Input, args: ['gdArea.gt-lg',] },],\n        \"alignLtSm\": [{ type: Input, args: ['gdArea.lt-sm',] },],\n        \"alignLtMd\": [{ type: Input, args: ['gdArea.lt-md',] },],\n        \"alignLtLg\": [{ type: Input, args: ['gdArea.lt-lg',] },],\n        \"alignLtXl\": [{ type: Input, args: ['gdArea.lt-xl',] },],\n    };\n    return GridAreaDirective;\n}(BaseDirective));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar /** @type {?} */ CACHE_KEY$4 = 'areas';\nvar /** @type {?} */ DEFAULT_VALUE$1 = 'none';\nvar /** @type {?} */ DELIMETER = '|';\n/**\n * 'grid-template-areas' CSS Grid styling directive\n * Configures the names of elements within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-14\n */\nvar GridAreasDirective = /** @class */ (function (_super) {\n    __extends(GridAreasDirective, _super);\n    /* tslint:enable */\n    function GridAreasDirective(monitor, elRef, styleUtils) {\n        return _super.call(this, monitor, elRef, styleUtils) || this;\n    }\n    Object.defineProperty(GridAreasDirective.prototype, \"align\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(\"\" + CACHE_KEY$4, val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAreasDirective.prototype, \"alignXs\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$4 + \"Xs\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAreasDirective.prototype, \"alignSm\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$4 + \"Sm\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAreasDirective.prototype, \"alignMd\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$4 + \"Md\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAreasDirective.prototype, \"alignLg\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$4 + \"Lg\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAreasDirective.prototype, \"alignXl\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$4 + \"Xl\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAreasDirective.prototype, \"alignGtXs\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$4 + \"GtXs\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAreasDirective.prototype, \"alignGtSm\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$4 + \"GtSm\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAreasDirective.prototype, \"alignGtMd\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$4 + \"GtMd\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAreasDirective.prototype, \"alignGtLg\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$4 + \"GtLg\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAreasDirective.prototype, \"alignLtSm\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$4 + \"LtSm\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAreasDirective.prototype, \"alignLtMd\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$4 + \"LtMd\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAreasDirective.prototype, \"alignLtLg\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$4 + \"LtLg\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAreasDirective.prototype, \"alignLtXl\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$4 + \"LtXl\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAreasDirective.prototype, \"inline\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('inline', coerceBooleanProperty(val)); },\n        enumerable: true,\n        configurable: true\n    });\n    // *********************************************\n    // Lifecycle Methods\n    // *********************************************\n    /**\n     * For @Input changes on the current mq activation property, see onMediaQueryChanges()\n     */\n    /**\n     * For \\@Input changes on the current mq activation property, see onMediaQueryChanges()\n     * @param {?} changes\n     * @return {?}\n     */\n    GridAreasDirective.prototype.ngOnChanges = /**\n     * For \\@Input changes on the current mq activation property, see onMediaQueryChanges()\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        if (changes[CACHE_KEY$4] != null || this._mqActivation) {\n            this._updateWithValue();\n        }\n    };\n    /**\n     * After the initial onChanges, build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     */\n    /**\n     * After the initial onChanges, build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     * @return {?}\n     */\n    GridAreasDirective.prototype.ngOnInit = /**\n     * After the initial onChanges, build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        _super.prototype.ngOnInit.call(this);\n        this._listenForMediaQueryChanges(CACHE_KEY$4, DEFAULT_VALUE$1, function (changes) {\n            _this._updateWithValue(changes.value);\n        });\n        this._updateWithValue();\n    };\n    // *********************************************\n    // Protected methods\n    // *********************************************\n    /**\n     * @param {?=} value\n     * @return {?}\n     */\n    GridAreasDirective.prototype._updateWithValue = /**\n     * @param {?=} value\n     * @return {?}\n     */\n    function (value) {\n        value = value || this._queryInput(CACHE_KEY$4) || DEFAULT_VALUE$1;\n        if (this._mqActivation) {\n            value = this._mqActivation.activatedInput;\n        }\n        this._applyStyleToElement(this._buildCSS(value));\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    GridAreasDirective.prototype._buildCSS = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        var /** @type {?} */ areas = value.split(DELIMETER).map(function (v) { return \"\\\"\" + v.trim() + \"\\\"\"; });\n        return {\n            'display': this._queryInput('inline') ? 'inline-grid' : 'grid',\n            'grid-template-areas': areas.join(' ')\n        };\n    };\n    GridAreasDirective.decorators = [\n        { type: Directive, args: [{ selector: \"\\n  [gdAreas],\\n  [gdAreas.xs], [gdAreas.sm], [gdAreas.md], [gdAreas.lg], [gdAreas.xl],\\n  [gdAreas.lt-sm], [gdAreas.lt-md], [gdAreas.lt-lg], [gdAreas.lt-xl],\\n  [gdAreas.gt-xs], [gdAreas.gt-sm], [gdAreas.gt-md], [gdAreas.gt-lg]\\n\" },] },\n    ];\n    /** @nocollapse */\n    GridAreasDirective.ctorParameters = function () { return [\n        { type: MediaMonitor, },\n        { type: ElementRef, },\n        { type: StyleUtils, },\n    ]; };\n    GridAreasDirective.propDecorators = {\n        \"align\": [{ type: Input, args: ['gdAreas',] },],\n        \"alignXs\": [{ type: Input, args: ['gdAreas.xs',] },],\n        \"alignSm\": [{ type: Input, args: ['gdAreas.sm',] },],\n        \"alignMd\": [{ type: Input, args: ['gdAreas.md',] },],\n        \"alignLg\": [{ type: Input, args: ['gdAreas.lg',] },],\n        \"alignXl\": [{ type: Input, args: ['gdAreas.xl',] },],\n        \"alignGtXs\": [{ type: Input, args: ['gdAreas.gt-xs',] },],\n        \"alignGtSm\": [{ type: Input, args: ['gdAreas.gt-sm',] },],\n        \"alignGtMd\": [{ type: Input, args: ['gdAreas.gt-md',] },],\n        \"alignGtLg\": [{ type: Input, args: ['gdAreas.gt-lg',] },],\n        \"alignLtSm\": [{ type: Input, args: ['gdAreas.lt-sm',] },],\n        \"alignLtMd\": [{ type: Input, args: ['gdAreas.lt-md',] },],\n        \"alignLtLg\": [{ type: Input, args: ['gdAreas.lt-lg',] },],\n        \"alignLtXl\": [{ type: Input, args: ['gdAreas.lt-xl',] },],\n        \"inline\": [{ type: Input, args: ['gdInline',] },],\n    };\n    return GridAreasDirective;\n}(BaseDirective));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar /** @type {?} */ CACHE_KEY$5 = 'autoFlow';\nvar /** @type {?} */ DEFAULT_VALUE$2 = 'initial';\n/**\n * 'grid-auto-flow' CSS Grid styling directive\n * Configures the auto placement algorithm for the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-23\n */\nvar GridAutoDirective = /** @class */ (function (_super) {\n    __extends(GridAutoDirective, _super);\n    /* tslint:enable */\n    function GridAutoDirective(monitor, elRef, styleUtils) {\n        return _super.call(this, monitor, elRef, styleUtils) || this;\n    }\n    Object.defineProperty(GridAutoDirective.prototype, \"align\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(\"\" + CACHE_KEY$5, val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAutoDirective.prototype, \"alignXs\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$5 + \"Xs\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAutoDirective.prototype, \"alignSm\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$5 + \"Sm\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAutoDirective.prototype, \"alignMd\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$5 + \"Md\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAutoDirective.prototype, \"alignLg\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$5 + \"Lg\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAutoDirective.prototype, \"alignXl\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$5 + \"Xl\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAutoDirective.prototype, \"alignGtXs\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$5 + \"GtXs\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAutoDirective.prototype, \"alignGtSm\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$5 + \"GtSm\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAutoDirective.prototype, \"alignGtMd\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$5 + \"GtMd\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAutoDirective.prototype, \"alignGtLg\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$5 + \"GtLg\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAutoDirective.prototype, \"alignLtSm\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$5 + \"LtSm\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAutoDirective.prototype, \"alignLtMd\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$5 + \"LtMd\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAutoDirective.prototype, \"alignLtLg\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$5 + \"LtLg\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAutoDirective.prototype, \"alignLtXl\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$5 + \"LtXl\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridAutoDirective.prototype, \"inline\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('inline', coerceBooleanProperty(val)); },\n        enumerable: true,\n        configurable: true\n    });\n    // *********************************************\n    // Lifecycle Methods\n    // *********************************************\n    /**\n     * For @Input changes on the current mq activation property, see onMediaQueryChanges()\n     */\n    /**\n     * For \\@Input changes on the current mq activation property, see onMediaQueryChanges()\n     * @param {?} changes\n     * @return {?}\n     */\n    GridAutoDirective.prototype.ngOnChanges = /**\n     * For \\@Input changes on the current mq activation property, see onMediaQueryChanges()\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        if (changes[CACHE_KEY$5] != null || this._mqActivation) {\n            this._updateWithValue();\n        }\n    };\n    /**\n     * After the initial onChanges, build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     */\n    /**\n     * After the initial onChanges, build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     * @return {?}\n     */\n    GridAutoDirective.prototype.ngOnInit = /**\n     * After the initial onChanges, build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        _super.prototype.ngOnInit.call(this);\n        this._listenForMediaQueryChanges(CACHE_KEY$5, DEFAULT_VALUE$2, function (changes) {\n            _this._updateWithValue(changes.value);\n        });\n        this._updateWithValue();\n    };\n    // *********************************************\n    // Protected methods\n    // *********************************************\n    /**\n     * @param {?=} value\n     * @return {?}\n     */\n    GridAutoDirective.prototype._updateWithValue = /**\n     * @param {?=} value\n     * @return {?}\n     */\n    function (value) {\n        value = value || this._queryInput(CACHE_KEY$5) || DEFAULT_VALUE$2;\n        if (this._mqActivation) {\n            value = this._mqActivation.activatedInput;\n        }\n        this._applyStyleToElement(this._buildCSS(value));\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    GridAutoDirective.prototype._buildCSS = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        var _a = value.split(' '), direction = _a[0], dense = _a[1];\n        if (direction !== 'column' && direction !== 'row' && direction !== 'dense') {\n            direction = 'row';\n        }\n        dense = (dense === 'dense' && direction !== 'dense') ? ' dense' : '';\n        return {\n            'display': this._queryInput('inline') ? 'inline-grid' : 'grid',\n            'grid-auto-flow': direction + dense\n        };\n    };\n    GridAutoDirective.decorators = [\n        { type: Directive, args: [{ selector: \"\\n  [gdAuto],\\n  [gdAuto.xs], [gdAuto.sm], [gdAuto.md], [gdAuto.lg], [gdAuto.xl],\\n  [gdAuto.lt-sm], [gdAuto.lt-md], [gdAuto.lt-lg], [gdAuto.lt-xl],\\n  [gdAuto.gt-xs], [gdAuto.gt-sm], [gdAuto.gt-md], [gdAuto.gt-lg]\\n\" },] },\n    ];\n    /** @nocollapse */\n    GridAutoDirective.ctorParameters = function () { return [\n        { type: MediaMonitor, },\n        { type: ElementRef, },\n        { type: StyleUtils, },\n    ]; };\n    GridAutoDirective.propDecorators = {\n        \"align\": [{ type: Input, args: ['gdAuto',] },],\n        \"alignXs\": [{ type: Input, args: ['gdAuto.xs',] },],\n        \"alignSm\": [{ type: Input, args: ['gdAuto.sm',] },],\n        \"alignMd\": [{ type: Input, args: ['gdAuto.md',] },],\n        \"alignLg\": [{ type: Input, args: ['gdAuto.lg',] },],\n        \"alignXl\": [{ type: Input, args: ['gdAuto.xl',] },],\n        \"alignGtXs\": [{ type: Input, args: ['gdAuto.gt-xs',] },],\n        \"alignGtSm\": [{ type: Input, args: ['gdAuto.gt-sm',] },],\n        \"alignGtMd\": [{ type: Input, args: ['gdAuto.gt-md',] },],\n        \"alignGtLg\": [{ type: Input, args: ['gdAuto.gt-lg',] },],\n        \"alignLtSm\": [{ type: Input, args: ['gdAuto.lt-sm',] },],\n        \"alignLtMd\": [{ type: Input, args: ['gdAuto.lt-md',] },],\n        \"alignLtLg\": [{ type: Input, args: ['gdAuto.lt-lg',] },],\n        \"alignLtXl\": [{ type: Input, args: ['gdAuto.lt-xl',] },],\n        \"inline\": [{ type: Input, args: ['gdInline',] },],\n    };\n    return GridAutoDirective;\n}(BaseDirective));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar /** @type {?} */ CACHE_KEY$6 = 'column';\nvar /** @type {?} */ DEFAULT_VALUE$3 = 'auto';\n/**\n * 'grid-column' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-26\n */\nvar GridColumnDirective = /** @class */ (function (_super) {\n    __extends(GridColumnDirective, _super);\n    /* tslint:enable */\n    function GridColumnDirective(monitor, elRef, styleUtils) {\n        return _super.call(this, monitor, elRef, styleUtils) || this;\n    }\n    Object.defineProperty(GridColumnDirective.prototype, \"align\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(\"\" + CACHE_KEY$6, val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridColumnDirective.prototype, \"alignXs\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$6 + \"Xs\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridColumnDirective.prototype, \"alignSm\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$6 + \"Sm\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridColumnDirective.prototype, \"alignMd\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$6 + \"Md\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridColumnDirective.prototype, \"alignLg\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$6 + \"Lg\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridColumnDirective.prototype, \"alignXl\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$6 + \"Xl\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridColumnDirective.prototype, \"alignGtXs\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$6 + \"GtXs\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridColumnDirective.prototype, \"alignGtSm\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$6 + \"GtSm\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridColumnDirective.prototype, \"alignGtMd\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$6 + \"GtMd\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridColumnDirective.prototype, \"alignGtLg\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$6 + \"GtLg\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridColumnDirective.prototype, \"alignLtSm\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$6 + \"LtSm\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridColumnDirective.prototype, \"alignLtMd\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$6 + \"LtMd\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridColumnDirective.prototype, \"alignLtLg\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$6 + \"LtLg\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridColumnDirective.prototype, \"alignLtXl\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$6 + \"LtXl\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    // *********************************************\n    // Lifecycle Methods\n    // *********************************************\n    /**\n     * For @Input changes on the current mq activation property, see onMediaQueryChanges()\n     */\n    /**\n     * For \\@Input changes on the current mq activation property, see onMediaQueryChanges()\n     * @param {?} changes\n     * @return {?}\n     */\n    GridColumnDirective.prototype.ngOnChanges = /**\n     * For \\@Input changes on the current mq activation property, see onMediaQueryChanges()\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        if (changes[CACHE_KEY$6] != null || this._mqActivation) {\n            this._updateWithValue();\n        }\n    };\n    /**\n     * After the initial onChanges, build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     */\n    /**\n     * After the initial onChanges, build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     * @return {?}\n     */\n    GridColumnDirective.prototype.ngOnInit = /**\n     * After the initial onChanges, build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        _super.prototype.ngOnInit.call(this);\n        this._listenForMediaQueryChanges(CACHE_KEY$6, DEFAULT_VALUE$3, function (changes) {\n            _this._updateWithValue(changes.value);\n        });\n        this._updateWithValue();\n    };\n    // *********************************************\n    // Protected methods\n    // *********************************************\n    /**\n     * @param {?=} value\n     * @return {?}\n     */\n    GridColumnDirective.prototype._updateWithValue = /**\n     * @param {?=} value\n     * @return {?}\n     */\n    function (value) {\n        value = value || this._queryInput(CACHE_KEY$6) || DEFAULT_VALUE$3;\n        if (this._mqActivation) {\n            value = this._mqActivation.activatedInput;\n        }\n        this._applyStyleToElement(this._buildCSS(value));\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    GridColumnDirective.prototype._buildCSS = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        return { 'grid-column': value };\n    };\n    GridColumnDirective.decorators = [\n        { type: Directive, args: [{ selector: \"\\n  [gdColumn],\\n  [gdColumn.xs], [gdColumn.sm], [gdColumn.md], [gdColumn.lg], [gdColumn.xl],\\n  [gdColumn.lt-sm], [gdColumn.lt-md], [gdColumn.lt-lg], [gdColumn.lt-xl],\\n  [gdColumn.gt-xs], [gdColumn.gt-sm], [gdColumn.gt-md], [gdColumn.gt-lg]\\n\" },] },\n    ];\n    /** @nocollapse */\n    GridColumnDirective.ctorParameters = function () { return [\n        { type: MediaMonitor, },\n        { type: ElementRef, },\n        { type: StyleUtils, },\n    ]; };\n    GridColumnDirective.propDecorators = {\n        \"align\": [{ type: Input, args: ['gdColumn',] },],\n        \"alignXs\": [{ type: Input, args: ['gdColumn.xs',] },],\n        \"alignSm\": [{ type: Input, args: ['gdColumn.sm',] },],\n        \"alignMd\": [{ type: Input, args: ['gdColumn.md',] },],\n        \"alignLg\": [{ type: Input, args: ['gdColumn.lg',] },],\n        \"alignXl\": [{ type: Input, args: ['gdColumn.xl',] },],\n        \"alignGtXs\": [{ type: Input, args: ['gdColumn.gt-xs',] },],\n        \"alignGtSm\": [{ type: Input, args: ['gdColumn.gt-sm',] },],\n        \"alignGtMd\": [{ type: Input, args: ['gdColumn.gt-md',] },],\n        \"alignGtLg\": [{ type: Input, args: ['gdColumn.gt-lg',] },],\n        \"alignLtSm\": [{ type: Input, args: ['gdColumn.lt-sm',] },],\n        \"alignLtMd\": [{ type: Input, args: ['gdColumn.lt-md',] },],\n        \"alignLtLg\": [{ type: Input, args: ['gdColumn.lt-lg',] },],\n        \"alignLtXl\": [{ type: Input, args: ['gdColumn.lt-xl',] },],\n    };\n    return GridColumnDirective;\n}(BaseDirective));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar /** @type {?} */ CACHE_KEY$7 = 'columns';\nvar /** @type {?} */ DEFAULT_VALUE$4 = 'none';\nvar /** @type {?} */ AUTO_SPECIFIER = '!';\n/**\n * 'grid-template-columns' CSS Grid styling directive\n * Configures the sizing for the columns in the grid\n * Syntax: <column value> [auto]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-13\n */\nvar GridColumnsDirective = /** @class */ (function (_super) {\n    __extends(GridColumnsDirective, _super);\n    /* tslint:enable */\n    function GridColumnsDirective(monitor, elRef, styleUtils) {\n        return _super.call(this, monitor, elRef, styleUtils) || this;\n    }\n    Object.defineProperty(GridColumnsDirective.prototype, \"align\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(\"\" + CACHE_KEY$7, val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridColumnsDirective.prototype, \"alignXs\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$7 + \"Xs\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridColumnsDirective.prototype, \"alignSm\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$7 + \"Sm\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridColumnsDirective.prototype, \"alignMd\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$7 + \"Md\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridColumnsDirective.prototype, \"alignLg\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$7 + \"Lg\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridColumnsDirective.prototype, \"alignXl\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$7 + \"Xl\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridColumnsDirective.prototype, \"alignGtXs\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$7 + \"GtXs\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridColumnsDirective.prototype, \"alignGtSm\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$7 + \"GtSm\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridColumnsDirective.prototype, \"alignGtMd\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$7 + \"GtMd\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridColumnsDirective.prototype, \"alignGtLg\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$7 + \"GtLg\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridColumnsDirective.prototype, \"alignLtSm\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$7 + \"LtSm\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridColumnsDirective.prototype, \"alignLtMd\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$7 + \"LtMd\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridColumnsDirective.prototype, \"alignLtLg\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$7 + \"LtLg\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridColumnsDirective.prototype, \"alignLtXl\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$7 + \"LtXl\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridColumnsDirective.prototype, \"inline\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('inline', coerceBooleanProperty(val)); },\n        enumerable: true,\n        configurable: true\n    });\n    // *********************************************\n    // Lifecycle Methods\n    // *********************************************\n    /**\n     * For @Input changes on the current mq activation property, see onMediaQueryChanges()\n     */\n    /**\n     * For \\@Input changes on the current mq activation property, see onMediaQueryChanges()\n     * @param {?} changes\n     * @return {?}\n     */\n    GridColumnsDirective.prototype.ngOnChanges = /**\n     * For \\@Input changes on the current mq activation property, see onMediaQueryChanges()\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        if (changes[CACHE_KEY$7] != null || this._mqActivation) {\n            this._updateWithValue();\n        }\n    };\n    /**\n     * After the initial onChanges, build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     */\n    /**\n     * After the initial onChanges, build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     * @return {?}\n     */\n    GridColumnsDirective.prototype.ngOnInit = /**\n     * After the initial onChanges, build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        _super.prototype.ngOnInit.call(this);\n        this._listenForMediaQueryChanges(CACHE_KEY$7, DEFAULT_VALUE$4, function (changes) {\n            _this._updateWithValue(changes.value);\n        });\n        this._updateWithValue();\n    };\n    // *********************************************\n    // Protected methods\n    // *********************************************\n    /**\n     * @param {?=} value\n     * @return {?}\n     */\n    GridColumnsDirective.prototype._updateWithValue = /**\n     * @param {?=} value\n     * @return {?}\n     */\n    function (value) {\n        value = value || this._queryInput(CACHE_KEY$7) || DEFAULT_VALUE$4;\n        if (this._mqActivation) {\n            value = this._mqActivation.activatedInput;\n        }\n        this._applyStyleToElement(this._buildCSS(value));\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    GridColumnsDirective.prototype._buildCSS = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        var /** @type {?} */ auto = false;\n        if (value.endsWith(AUTO_SPECIFIER)) {\n            value = value.substring(0, value.indexOf(AUTO_SPECIFIER));\n            auto = true;\n        }\n        var /** @type {?} */ css = {\n            'display': this._queryInput('inline') ? 'inline-grid' : 'grid',\n            'grid-auto-columns': '',\n            'grid-template-columns': '',\n        };\n        var /** @type {?} */ key = (auto ? 'grid-auto-columns' : 'grid-template-columns');\n        css[key] = value;\n        return css;\n    };\n    GridColumnsDirective.decorators = [\n        { type: Directive, args: [{ selector: \"\\n  [gdColumns],\\n  [gdColumns.xs], [gdColumns.sm], [gdColumns.md], [gdColumns.lg], [gdColumns.xl],\\n  [gdColumns.lt-sm], [gdColumns.lt-md], [gdColumns.lt-lg], [gdColumns.lt-xl],\\n  [gdColumns.gt-xs], [gdColumns.gt-sm], [gdColumns.gt-md], [gdColumns.gt-lg]\\n\" },] },\n    ];\n    /** @nocollapse */\n    GridColumnsDirective.ctorParameters = function () { return [\n        { type: MediaMonitor, },\n        { type: ElementRef, },\n        { type: StyleUtils, },\n    ]; };\n    GridColumnsDirective.propDecorators = {\n        \"align\": [{ type: Input, args: ['gdColumns',] },],\n        \"alignXs\": [{ type: Input, args: ['gdColumns.xs',] },],\n        \"alignSm\": [{ type: Input, args: ['gdColumns.sm',] },],\n        \"alignMd\": [{ type: Input, args: ['gdColumns.md',] },],\n        \"alignLg\": [{ type: Input, args: ['gdColumns.lg',] },],\n        \"alignXl\": [{ type: Input, args: ['gdColumns.xl',] },],\n        \"alignGtXs\": [{ type: Input, args: ['gdColumns.gt-xs',] },],\n        \"alignGtSm\": [{ type: Input, args: ['gdColumns.gt-sm',] },],\n        \"alignGtMd\": [{ type: Input, args: ['gdColumns.gt-md',] },],\n        \"alignGtLg\": [{ type: Input, args: ['gdColumns.gt-lg',] },],\n        \"alignLtSm\": [{ type: Input, args: ['gdColumns.lt-sm',] },],\n        \"alignLtMd\": [{ type: Input, args: ['gdColumns.lt-md',] },],\n        \"alignLtLg\": [{ type: Input, args: ['gdColumns.lt-lg',] },],\n        \"alignLtXl\": [{ type: Input, args: ['gdColumns.lt-xl',] },],\n        \"inline\": [{ type: Input, args: ['gdInline',] },],\n    };\n    return GridColumnsDirective;\n}(BaseDirective));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar /** @type {?} */ CACHE_KEY$8 = 'gap';\nvar /** @type {?} */ DEFAULT_VALUE$5 = '0';\n/**\n * 'grid-gap' CSS Grid styling directive\n * Configures the gap between items in the grid\n * Syntax: <row gap> [<column-gap>]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-17\n */\nvar GridGapDirective = /** @class */ (function (_super) {\n    __extends(GridGapDirective, _super);\n    /* tslint:enable */\n    function GridGapDirective(monitor, elRef, styleUtils) {\n        return _super.call(this, monitor, elRef, styleUtils) || this;\n    }\n    Object.defineProperty(GridGapDirective.prototype, \"align\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(\"\" + CACHE_KEY$8, val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridGapDirective.prototype, \"alignXs\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$8 + \"Xs\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridGapDirective.prototype, \"alignSm\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$8 + \"Sm\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridGapDirective.prototype, \"alignMd\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$8 + \"Md\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridGapDirective.prototype, \"alignLg\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$8 + \"Lg\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridGapDirective.prototype, \"alignXl\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$8 + \"Xl\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridGapDirective.prototype, \"alignGtXs\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$8 + \"GtXs\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridGapDirective.prototype, \"alignGtSm\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$8 + \"GtSm\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridGapDirective.prototype, \"alignGtMd\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$8 + \"GtMd\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridGapDirective.prototype, \"alignGtLg\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$8 + \"GtLg\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridGapDirective.prototype, \"alignLtSm\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$8 + \"LtSm\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridGapDirective.prototype, \"alignLtMd\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$8 + \"LtMd\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridGapDirective.prototype, \"alignLtLg\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$8 + \"LtLg\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridGapDirective.prototype, \"alignLtXl\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$8 + \"LtXl\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridGapDirective.prototype, \"inline\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('inline', coerceBooleanProperty(val)); },\n        enumerable: true,\n        configurable: true\n    });\n    // *********************************************\n    // Lifecycle Methods\n    // *********************************************\n    /**\n     * For @Input changes on the current mq activation property, see onMediaQueryChanges()\n     */\n    /**\n     * For \\@Input changes on the current mq activation property, see onMediaQueryChanges()\n     * @param {?} changes\n     * @return {?}\n     */\n    GridGapDirective.prototype.ngOnChanges = /**\n     * For \\@Input changes on the current mq activation property, see onMediaQueryChanges()\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        if (changes[CACHE_KEY$8] != null || this._mqActivation) {\n            this._updateWithValue();\n        }\n    };\n    /**\n     * After the initial onChanges, build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     */\n    /**\n     * After the initial onChanges, build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     * @return {?}\n     */\n    GridGapDirective.prototype.ngOnInit = /**\n     * After the initial onChanges, build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        _super.prototype.ngOnInit.call(this);\n        this._listenForMediaQueryChanges(CACHE_KEY$8, DEFAULT_VALUE$5, function (changes) {\n            _this._updateWithValue(changes.value);\n        });\n        this._updateWithValue();\n    };\n    // *********************************************\n    // Protected methods\n    // *********************************************\n    /**\n     * @param {?=} value\n     * @return {?}\n     */\n    GridGapDirective.prototype._updateWithValue = /**\n     * @param {?=} value\n     * @return {?}\n     */\n    function (value) {\n        value = value || this._queryInput(CACHE_KEY$8) || DEFAULT_VALUE$5;\n        if (this._mqActivation) {\n            value = this._mqActivation.activatedInput;\n        }\n        this._applyStyleToElement(this._buildCSS(value));\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    GridGapDirective.prototype._buildCSS = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        return {\n            'display': this._queryInput('inline') ? 'inline-grid' : 'grid',\n            'grid-gap': value\n        };\n    };\n    GridGapDirective.decorators = [\n        { type: Directive, args: [{ selector: \"\\n  [gdGap],\\n  [gdGap.xs], [gdGap.sm], [gdGap.md], [gdGap.lg], [gdGap.xl],\\n  [gdGap.lt-sm], [gdGap.lt-md], [gdGap.lt-lg], [gdGap.lt-xl],\\n  [gdGap.gt-xs], [gdGap.gt-sm], [gdGap.gt-md], [gdGap.gt-lg]\\n\" },] },\n    ];\n    /** @nocollapse */\n    GridGapDirective.ctorParameters = function () { return [\n        { type: MediaMonitor, },\n        { type: ElementRef, },\n        { type: StyleUtils, },\n    ]; };\n    GridGapDirective.propDecorators = {\n        \"align\": [{ type: Input, args: ['gdGap',] },],\n        \"alignXs\": [{ type: Input, args: ['gdGap.xs',] },],\n        \"alignSm\": [{ type: Input, args: ['gdGap.sm',] },],\n        \"alignMd\": [{ type: Input, args: ['gdGap.md',] },],\n        \"alignLg\": [{ type: Input, args: ['gdGap.lg',] },],\n        \"alignXl\": [{ type: Input, args: ['gdGap.xl',] },],\n        \"alignGtXs\": [{ type: Input, args: ['gdGap.gt-xs',] },],\n        \"alignGtSm\": [{ type: Input, args: ['gdGap.gt-sm',] },],\n        \"alignGtMd\": [{ type: Input, args: ['gdGap.gt-md',] },],\n        \"alignGtLg\": [{ type: Input, args: ['gdGap.gt-lg',] },],\n        \"alignLtSm\": [{ type: Input, args: ['gdGap.lt-sm',] },],\n        \"alignLtMd\": [{ type: Input, args: ['gdGap.lt-md',] },],\n        \"alignLtLg\": [{ type: Input, args: ['gdGap.lt-lg',] },],\n        \"alignLtXl\": [{ type: Input, args: ['gdGap.lt-xl',] },],\n        \"inline\": [{ type: Input, args: ['gdInline',] },],\n    };\n    return GridGapDirective;\n}(BaseDirective));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar /** @type {?} */ CACHE_KEY$9 = 'row';\nvar /** @type {?} */ DEFAULT_VALUE$6 = 'auto';\n/**\n * 'grid-row' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-26\n */\nvar GridRowDirective = /** @class */ (function (_super) {\n    __extends(GridRowDirective, _super);\n    /* tslint:enable */\n    function GridRowDirective(monitor, elRef, styleUtils) {\n        return _super.call(this, monitor, elRef, styleUtils) || this;\n    }\n    Object.defineProperty(GridRowDirective.prototype, \"align\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(\"\" + CACHE_KEY$9, val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridRowDirective.prototype, \"alignXs\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$9 + \"Xs\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridRowDirective.prototype, \"alignSm\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$9 + \"Sm\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridRowDirective.prototype, \"alignMd\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$9 + \"Md\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridRowDirective.prototype, \"alignLg\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$9 + \"Lg\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridRowDirective.prototype, \"alignXl\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$9 + \"Xl\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridRowDirective.prototype, \"alignGtXs\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$9 + \"GtXs\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridRowDirective.prototype, \"alignGtSm\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$9 + \"GtSm\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridRowDirective.prototype, \"alignGtMd\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$9 + \"GtMd\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridRowDirective.prototype, \"alignGtLg\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$9 + \"GtLg\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridRowDirective.prototype, \"alignLtSm\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$9 + \"LtSm\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridRowDirective.prototype, \"alignLtMd\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$9 + \"LtMd\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridRowDirective.prototype, \"alignLtLg\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$9 + \"LtLg\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridRowDirective.prototype, \"alignLtXl\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$9 + \"LtXl\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    // *********************************************\n    // Lifecycle Methods\n    // *********************************************\n    /**\n     * For @Input changes on the current mq activation property, see onMediaQueryChanges()\n     */\n    /**\n     * For \\@Input changes on the current mq activation property, see onMediaQueryChanges()\n     * @param {?} changes\n     * @return {?}\n     */\n    GridRowDirective.prototype.ngOnChanges = /**\n     * For \\@Input changes on the current mq activation property, see onMediaQueryChanges()\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        if (changes[CACHE_KEY$9] != null || this._mqActivation) {\n            this._updateWithValue();\n        }\n    };\n    /**\n     * After the initial onChanges, build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     */\n    /**\n     * After the initial onChanges, build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     * @return {?}\n     */\n    GridRowDirective.prototype.ngOnInit = /**\n     * After the initial onChanges, build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        _super.prototype.ngOnInit.call(this);\n        this._listenForMediaQueryChanges(CACHE_KEY$9, DEFAULT_VALUE$6, function (changes) {\n            _this._updateWithValue(changes.value);\n        });\n        this._updateWithValue();\n    };\n    // *********************************************\n    // Protected methods\n    // *********************************************\n    /**\n     * @param {?=} value\n     * @return {?}\n     */\n    GridRowDirective.prototype._updateWithValue = /**\n     * @param {?=} value\n     * @return {?}\n     */\n    function (value) {\n        value = value || this._queryInput(CACHE_KEY$9) || DEFAULT_VALUE$6;\n        if (this._mqActivation) {\n            value = this._mqActivation.activatedInput;\n        }\n        this._applyStyleToElement(this._buildCSS(value));\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    GridRowDirective.prototype._buildCSS = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        return { 'grid-row': value };\n    };\n    GridRowDirective.decorators = [\n        { type: Directive, args: [{ selector: \"\\n  [gdRow],\\n  [gdRow.xs], [gdRow.sm], [gdRow.md], [gdRow.lg], [gdRow.xl],\\n  [gdRow.lt-sm], [gdRow.lt-md], [gdRow.lt-lg], [gdRow.lt-xl],\\n  [gdRow.gt-xs], [gdRow.gt-sm], [gdRow.gt-md], [gdRow.gt-lg]\\n\" },] },\n    ];\n    /** @nocollapse */\n    GridRowDirective.ctorParameters = function () { return [\n        { type: MediaMonitor, },\n        { type: ElementRef, },\n        { type: StyleUtils, },\n    ]; };\n    GridRowDirective.propDecorators = {\n        \"align\": [{ type: Input, args: ['gdRow',] },],\n        \"alignXs\": [{ type: Input, args: ['gdRow.xs',] },],\n        \"alignSm\": [{ type: Input, args: ['gdRow.sm',] },],\n        \"alignMd\": [{ type: Input, args: ['gdRow.md',] },],\n        \"alignLg\": [{ type: Input, args: ['gdRow.lg',] },],\n        \"alignXl\": [{ type: Input, args: ['gdRow.xl',] },],\n        \"alignGtXs\": [{ type: Input, args: ['gdRow.gt-xs',] },],\n        \"alignGtSm\": [{ type: Input, args: ['gdRow.gt-sm',] },],\n        \"alignGtMd\": [{ type: Input, args: ['gdRow.gt-md',] },],\n        \"alignGtLg\": [{ type: Input, args: ['gdRow.gt-lg',] },],\n        \"alignLtSm\": [{ type: Input, args: ['gdRow.lt-sm',] },],\n        \"alignLtMd\": [{ type: Input, args: ['gdRow.lt-md',] },],\n        \"alignLtLg\": [{ type: Input, args: ['gdRow.lt-lg',] },],\n        \"alignLtXl\": [{ type: Input, args: ['gdRow.lt-xl',] },],\n    };\n    return GridRowDirective;\n}(BaseDirective));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar /** @type {?} */ CACHE_KEY$10 = 'rows';\nvar /** @type {?} */ DEFAULT_VALUE$7 = 'none';\nvar /** @type {?} */ AUTO_SPECIFIER$1 = '!';\n/**\n * 'grid-template-rows' CSS Grid styling directive\n * Configures the sizing for the rows in the grid\n * Syntax: <row value> [auto]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-13\n */\nvar GridRowsDirective = /** @class */ (function (_super) {\n    __extends(GridRowsDirective, _super);\n    /* tslint:enable */\n    function GridRowsDirective(monitor, elRef, styleUtils) {\n        return _super.call(this, monitor, elRef, styleUtils) || this;\n    }\n    Object.defineProperty(GridRowsDirective.prototype, \"align\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(\"\" + CACHE_KEY$10, val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridRowsDirective.prototype, \"alignXs\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$10 + \"Xs\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridRowsDirective.prototype, \"alignSm\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$10 + \"Sm\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridRowsDirective.prototype, \"alignMd\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$10 + \"Md\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridRowsDirective.prototype, \"alignLg\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$10 + \"Lg\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridRowsDirective.prototype, \"alignXl\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$10 + \"Xl\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridRowsDirective.prototype, \"alignGtXs\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$10 + \"GtXs\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridRowsDirective.prototype, \"alignGtSm\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$10 + \"GtSm\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridRowsDirective.prototype, \"alignGtMd\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$10 + \"GtMd\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridRowsDirective.prototype, \"alignGtLg\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$10 + \"GtLg\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridRowsDirective.prototype, \"alignLtSm\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$10 + \"LtSm\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridRowsDirective.prototype, \"alignLtMd\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$10 + \"LtMd\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridRowsDirective.prototype, \"alignLtLg\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$10 + \"LtLg\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridRowsDirective.prototype, \"alignLtXl\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput(CACHE_KEY$10 + \"LtXl\", val); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridRowsDirective.prototype, \"inline\", {\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) { this._cacheInput('inline', coerceBooleanProperty(val)); },\n        enumerable: true,\n        configurable: true\n    });\n    // *********************************************\n    // Lifecycle Methods\n    // *********************************************\n    /**\n     * For @Input changes on the current mq activation property, see onMediaQueryChanges()\n     */\n    /**\n     * For \\@Input changes on the current mq activation property, see onMediaQueryChanges()\n     * @param {?} changes\n     * @return {?}\n     */\n    GridRowsDirective.prototype.ngOnChanges = /**\n     * For \\@Input changes on the current mq activation property, see onMediaQueryChanges()\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        if (changes[CACHE_KEY$10] != null || this._mqActivation) {\n            this._updateWithValue();\n        }\n    };\n    /**\n     * After the initial onChanges, build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     */\n    /**\n     * After the initial onChanges, build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     * @return {?}\n     */\n    GridRowsDirective.prototype.ngOnInit = /**\n     * After the initial onChanges, build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        _super.prototype.ngOnInit.call(this);\n        this._listenForMediaQueryChanges(CACHE_KEY$10, DEFAULT_VALUE$7, function (changes) {\n            _this._updateWithValue(changes.value);\n        });\n        this._updateWithValue();\n    };\n    // *********************************************\n    // Protected methods\n    // *********************************************\n    /**\n     * @param {?=} value\n     * @return {?}\n     */\n    GridRowsDirective.prototype._updateWithValue = /**\n     * @param {?=} value\n     * @return {?}\n     */\n    function (value) {\n        value = value || this._queryInput(CACHE_KEY$10) || DEFAULT_VALUE$7;\n        if (this._mqActivation) {\n            value = this._mqActivation.activatedInput;\n        }\n        this._applyStyleToElement(this._buildCSS(value));\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    GridRowsDirective.prototype._buildCSS = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        var /** @type {?} */ auto = false;\n        if (value.endsWith(AUTO_SPECIFIER$1)) {\n            value = value.substring(0, value.indexOf(AUTO_SPECIFIER$1));\n            auto = true;\n        }\n        var /** @type {?} */ css = {\n            'display': this._queryInput('inline') ? 'inline-grid' : 'grid',\n            'grid-auto-rows': '',\n            'grid-template-rows': '',\n        };\n        var /** @type {?} */ key = (auto ? 'grid-auto-rows' : 'grid-template-rows');\n        css[key] = value;\n        return css;\n    };\n    GridRowsDirective.decorators = [\n        { type: Directive, args: [{ selector: \"\\n  [gdRows],\\n  [gdRows.xs], [gdRows.sm], [gdRows.md], [gdRows.lg], [gdRows.xl],\\n  [gdRows.lt-sm], [gdRows.lt-md], [gdRows.lt-lg], [gdRows.lt-xl],\\n  [gdRows.gt-xs], [gdRows.gt-sm], [gdRows.gt-md], [gdRows.gt-lg]\\n\" },] },\n    ];\n    /** @nocollapse */\n    GridRowsDirective.ctorParameters = function () { return [\n        { type: MediaMonitor, },\n        { type: ElementRef, },\n        { type: StyleUtils, },\n    ]; };\n    GridRowsDirective.propDecorators = {\n        \"align\": [{ type: Input, args: ['gdRows',] },],\n        \"alignXs\": [{ type: Input, args: ['gdRows.xs',] },],\n        \"alignSm\": [{ type: Input, args: ['gdRows.sm',] },],\n        \"alignMd\": [{ type: Input, args: ['gdRows.md',] },],\n        \"alignLg\": [{ type: Input, args: ['gdRows.lg',] },],\n        \"alignXl\": [{ type: Input, args: ['gdRows.xl',] },],\n        \"alignGtXs\": [{ type: Input, args: ['gdRows.gt-xs',] },],\n        \"alignGtSm\": [{ type: Input, args: ['gdRows.gt-sm',] },],\n        \"alignGtMd\": [{ type: Input, args: ['gdRows.gt-md',] },],\n        \"alignGtLg\": [{ type: Input, args: ['gdRows.gt-lg',] },],\n        \"alignLtSm\": [{ type: Input, args: ['gdRows.lt-sm',] },],\n        \"alignLtMd\": [{ type: Input, args: ['gdRows.lt-md',] },],\n        \"alignLtLg\": [{ type: Input, args: ['gdRows.lt-lg',] },],\n        \"alignLtXl\": [{ type: Input, args: ['gdRows.lt-xl',] },],\n        \"inline\": [{ type: Input, args: ['gdInline',] },],\n    };\n    return GridRowsDirective;\n}(BaseDirective));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar /** @type {?} */ ALL_DIRECTIVES = [\n    GridAlignDirective,\n    GridAlignColumnsDirective,\n    GridAlignRowsDirective,\n    GridAreaDirective,\n    GridAreasDirective,\n    GridAutoDirective,\n    GridColumnDirective,\n    GridColumnsDirective,\n    GridGapDirective,\n    GridRowDirective,\n    GridRowsDirective,\n];\n/**\n * *****************************************************************\n * Define module for the CSS Grid API\n * *****************************************************************\n */\nvar GridModule = /** @class */ (function () {\n    function GridModule() {\n    }\n    GridModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [CoreModule],\n                    declarations: ALL_DIRECTIVES.slice(),\n                    exports: ALL_DIRECTIVES.slice()\n                },] },\n    ];\n    /** @nocollapse */\n    GridModule.ctorParameters = function () { return []; };\n    return GridModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nexport { GridModule, GridAlignColumnsDirective as ɵb, GridAlignRowsDirective as ɵc, GridAreaDirective as ɵd, GridAreasDirective as ɵe, GridAutoDirective as ɵf, GridColumnDirective as ɵg, GridColumnsDirective as ɵh, GridGapDirective as ɵi, GridAlignDirective as ɵa, GridRowDirective as ɵj, GridRowsDirective as ɵk };\n//# sourceMappingURL=grid.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { NgModule, InjectionToken, Optional, Inject, isDevMode, inject, LOCALE_ID, Injectable, Directive, ElementRef, Input, NgZone, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, EventEmitter, Output, defineInjectable } from '@angular/core';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { __extends, __assign } from 'tslib';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, Observable } from 'rxjs';\nimport { Platform, PlatformModule, supportsPassiveEventListeners } from '@angular/cdk/platform';\nimport { HammerGestureConfig } from '@angular/platform-browser';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * \\@docs-private\n */\nvar AnimationCurves = /** @class */ (function () {\n    function AnimationCurves() {\n    }\n    AnimationCurves.STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\n    AnimationCurves.DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\n    AnimationCurves.ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\n    AnimationCurves.SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\n    return AnimationCurves;\n}());\n/**\n * \\@docs-private\n */\nvar AnimationDurations = /** @class */ (function () {\n    function AnimationDurations() {\n    }\n    AnimationDurations.COMPLEX = '375ms';\n    AnimationDurations.ENTERING = '225ms';\n    AnimationDurations.EXITING = '195ms';\n    return AnimationDurations;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Injection token that configures whether the Material sanity checks are enabled.\n */\nvar /** @type {?} */ MATERIAL_SANITY_CHECKS = new InjectionToken('mat-sanity-checks', {\n    providedIn: 'root',\n    factory: MATERIAL_SANITY_CHECKS_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MATERIAL_SANITY_CHECKS_FACTORY() {\n    return true;\n}\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\nvar MatCommonModule = /** @class */ (function () {\n    function MatCommonModule(_sanityChecksEnabled) {\n        this._sanityChecksEnabled = _sanityChecksEnabled;\n        /**\n         * Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n         */\n        this._hasDoneGlobalChecks = false;\n        /**\n         * Whether we've already checked for HammerJs availability.\n         */\n        this._hasCheckedHammer = false;\n        /**\n         * Reference to the global `document` object.\n         */\n        this._document = typeof document === 'object' && document ? document : null;\n        /**\n         * Reference to the global 'window' object.\n         */\n        this._window = typeof window === 'object' && window ? window : null;\n        if (this._areChecksEnabled() && !this._hasDoneGlobalChecks) {\n            this._checkDoctypeIsDefined();\n            this._checkThemeIsPresent();\n            this._hasDoneGlobalChecks = true;\n        }\n    }\n    /**\n     * Whether any sanity checks are enabled\n     * @return {?}\n     */\n    MatCommonModule.prototype._areChecksEnabled = /**\n     * Whether any sanity checks are enabled\n     * @return {?}\n     */\n    function () {\n        return this._sanityChecksEnabled && isDevMode() && !this._isTestEnv();\n    };\n    /**\n     * Whether the code is running in tests.\n     * @return {?}\n     */\n    MatCommonModule.prototype._isTestEnv = /**\n     * Whether the code is running in tests.\n     * @return {?}\n     */\n    function () {\n        return this._window && (this._window['__karma__'] || this._window['jasmine']);\n    };\n    /**\n     * @return {?}\n     */\n    MatCommonModule.prototype._checkDoctypeIsDefined = /**\n     * @return {?}\n     */\n    function () {\n        if (this._document && !this._document.doctype) {\n            console.warn('Current document does not have a doctype. This may cause ' +\n                'some Angular Material components not to behave as expected.');\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatCommonModule.prototype._checkThemeIsPresent = /**\n     * @return {?}\n     */\n    function () {\n        if (this._document && typeof getComputedStyle === 'function') {\n            var /** @type {?} */ testElement = this._document.createElement('div');\n            testElement.classList.add('mat-theme-loaded-marker');\n            this._document.body.appendChild(testElement);\n            var /** @type {?} */ computedStyle = getComputedStyle(testElement);\n            // In some situations, the computed style of the test element can be null. For example in\n            // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n            // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n            if (computedStyle && computedStyle.display !== 'none') {\n                console.warn('Could not find Angular Material core theme. Most Material ' +\n                    'components may not work as expected. For more info refer ' +\n                    'to the theming guide: https://material.angular.io/guide/theming');\n            }\n            this._document.body.removeChild(testElement);\n        }\n    };\n    /** Checks whether HammerJS is available. */\n    /**\n     * Checks whether HammerJS is available.\n     * @return {?}\n     */\n    MatCommonModule.prototype._checkHammerIsAvailable = /**\n     * Checks whether HammerJS is available.\n     * @return {?}\n     */\n    function () {\n        if (this._hasCheckedHammer || !this._window) {\n            return;\n        }\n        if (this._areChecksEnabled() && !this._window['Hammer']) {\n            console.warn('Could not find HammerJS. Certain Angular Material components may not work correctly.');\n        }\n        this._hasCheckedHammer = true;\n    };\n    MatCommonModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [BidiModule],\n                    exports: [BidiModule],\n                },] },\n    ];\n    /** @nocollapse */\n    MatCommonModule.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MATERIAL_SANITY_CHECKS,] },] },\n    ]; };\n    return MatCommonModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Mixin to augment a directive with a `disabled` property.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinDisabled(base) {\n    return /** @class */ (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _this = _super.apply(this, args) || this;\n            _this._disabled = false;\n            return _this;\n        }\n        Object.defineProperty(class_1.prototype, \"disabled\", {\n            get: /**\n             * @return {?}\n             */\n            function () { return this._disabled; },\n            set: /**\n             * @param {?} value\n             * @return {?}\n             */\n            function (value) { this._disabled = coerceBooleanProperty(value); },\n            enumerable: true,\n            configurable: true\n        });\n        return class_1;\n    }(base));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Mixin to augment a directive with a `color` property.\n * @template T\n * @param {?} base\n * @param {?=} defaultColor\n * @return {?}\n */\nfunction mixinColor(base, defaultColor) {\n    return /** @class */ (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _this = _super.apply(this, args) || this;\n            // Set the default color that can be specified from the mixin.\n            // Set the default color that can be specified from the mixin.\n            _this.color = defaultColor;\n            return _this;\n        }\n        Object.defineProperty(class_1.prototype, \"color\", {\n            get: /**\n             * @return {?}\n             */\n            function () { return this._color; },\n            set: /**\n             * @param {?} value\n             * @return {?}\n             */\n            function (value) {\n                var /** @type {?} */ colorPalette = value || defaultColor;\n                if (colorPalette !== this._color) {\n                    if (this._color) {\n                        this._elementRef.nativeElement.classList.remove(\"mat-\" + this._color);\n                    }\n                    if (colorPalette) {\n                        this._elementRef.nativeElement.classList.add(\"mat-\" + colorPalette);\n                    }\n                    this._color = colorPalette;\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return class_1;\n    }(base));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Mixin to augment a directive with a `disableRipple` property.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinDisableRipple(base) {\n    return /** @class */ (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _this = _super.apply(this, args) || this;\n            _this._disableRipple = false;\n            return _this;\n        }\n        Object.defineProperty(class_1.prototype, \"disableRipple\", {\n            /** Whether the ripple effect is disabled or not. */\n            get: /**\n             * Whether the ripple effect is disabled or not.\n             * @return {?}\n             */\n            function () { return this._disableRipple; },\n            set: /**\n             * @param {?} value\n             * @return {?}\n             */\n            function (value) { this._disableRipple = coerceBooleanProperty(value); },\n            enumerable: true,\n            configurable: true\n        });\n        return class_1;\n    }(base));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Mixin to augment a directive with a `tabIndex` property.\n * @template T\n * @param {?} base\n * @param {?=} defaultTabIndex\n * @return {?}\n */\nfunction mixinTabIndex(base, defaultTabIndex) {\n    if (defaultTabIndex === void 0) { defaultTabIndex = 0; }\n    return /** @class */ (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _this = _super.apply(this, args) || this;\n            _this._tabIndex = defaultTabIndex;\n            return _this;\n        }\n        Object.defineProperty(class_1.prototype, \"tabIndex\", {\n            get: /**\n             * @return {?}\n             */\n            function () { return this.disabled ? -1 : this._tabIndex; },\n            set: /**\n             * @param {?} value\n             * @return {?}\n             */\n            function (value) {\n                // If the specified tabIndex value is null or undefined, fall back to the default value.\n                this._tabIndex = value != null ? value : defaultTabIndex;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return class_1;\n    }(base));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Mixin to augment a directive with updateErrorState method.\n * For component with `errorState` and need to update `errorState`.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinErrorState(base) {\n    return /** @class */ (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _this = _super.apply(this, args) || this;\n            /**\n             * Whether the component is in an error state.\n             */\n            _this.errorState = false;\n            /**\n             * Stream that emits whenever the state of the input changes such that the wrapping\n             * `MatFormField` needs to run change detection.\n             */\n            _this.stateChanges = new Subject();\n            return _this;\n        }\n        /**\n         * @return {?}\n         */\n        class_1.prototype.updateErrorState = /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ oldState = this.errorState;\n            var /** @type {?} */ parent = this._parentFormGroup || this._parentForm;\n            var /** @type {?} */ matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n            var /** @type {?} */ control = this.ngControl ? /** @type {?} */ (this.ngControl.control) : null;\n            var /** @type {?} */ newState = matcher.isErrorState(control, parent);\n            if (newState !== oldState) {\n                this.errorState = newState;\n                this.stateChanges.next();\n            }\n        };\n        return class_1;\n    }(base));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Mixin to augment a directive with an initialized property that will emits when ngOnInit ends.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinInitialized(base) {\n    return /** @class */ (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _this = _super.apply(this, args) || this;\n            /**\n             * Whether this directive has been marked as initialized.\n             */\n            _this._isInitialized = false;\n            /**\n             * List of subscribers that subscribed before the directive was initialized. Should be notified\n             * during _markInitialized. Set to null after pending subscribers are notified, and should\n             * not expect to be populated after.\n             */\n            _this._pendingSubscribers = [];\n            /**\n             * Observable stream that emits when the directive initializes. If already initialized, the\n             * subscriber is stored to be notified once _markInitialized is called.\n             */\n            _this.initialized = new Observable(function (subscriber) {\n                // If initialized, immediately notify the subscriber. Otherwise store the subscriber to notify\n                // when _markInitialized is called.\n                if (_this._isInitialized) {\n                    _this._notifySubscriber(subscriber);\n                }\n                else {\n                    /** @type {?} */ ((_this._pendingSubscribers)).push(subscriber);\n                }\n            });\n            return _this;\n        }\n        /**\n         * Marks the state as initialized and notifies pending subscribers. Should be called at the end\n         * of ngOnInit.\n         * @docs-private\n         */\n        /**\n         * Marks the state as initialized and notifies pending subscribers. Should be called at the end\n         * of ngOnInit.\n         * \\@docs-private\n         * @return {?}\n         */\n        class_1.prototype._markInitialized = /**\n         * Marks the state as initialized and notifies pending subscribers. Should be called at the end\n         * of ngOnInit.\n         * \\@docs-private\n         * @return {?}\n         */\n        function () {\n            if (this._isInitialized) {\n                throw Error('This directive has already been marked as initialized and ' +\n                    'should not be called twice.');\n            }\n            this._isInitialized = true; /** @type {?} */\n            ((this._pendingSubscribers)).forEach(this._notifySubscriber);\n            this._pendingSubscribers = null;\n        };\n        /** Emits and completes the subscriber stream (should only emit once). */\n        /**\n         * Emits and completes the subscriber stream (should only emit once).\n         * @param {?} subscriber\n         * @return {?}\n         */\n        class_1.prototype._notifySubscriber = /**\n         * Emits and completes the subscriber stream (should only emit once).\n         * @param {?} subscriber\n         * @return {?}\n         */\n        function (subscriber) {\n            subscriber.next();\n            subscriber.complete();\n        };\n        return class_1;\n    }(base));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * InjectionToken for datepicker that can be used to override default locale code.\n */\nvar /** @type {?} */ MAT_DATE_LOCALE = new InjectionToken('MAT_DATE_LOCALE', {\n    providedIn: 'root',\n    factory: MAT_DATE_LOCALE_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_DATE_LOCALE_FACTORY() {\n    return inject(LOCALE_ID);\n}\n/**\n * No longer needed since MAT_DATE_LOCALE has been changed to a scoped injectable.\n * If you are importing and providing this in your code you can simply remove it.\n * @deprecated\n * \\@deletion-target 7.0.0\n */\nvar /** @type {?} */ MAT_DATE_LOCALE_PROVIDER = { provide: MAT_DATE_LOCALE, useExisting: LOCALE_ID };\n/**\n * Adapts type `D` to be usable as a date by cdk-based components that work with dates.\n * @abstract\n * @template D\n */\nvar  /**\n * Adapts type `D` to be usable as a date by cdk-based components that work with dates.\n * @abstract\n * @template D\n */\nDateAdapter = /** @class */ (function () {\n    function DateAdapter() {\n        this._localeChanges = new Subject();\n    }\n    Object.defineProperty(DateAdapter.prototype, \"localeChanges\", {\n        /** A stream that emits when the locale changes. */\n        get: /**\n         * A stream that emits when the locale changes.\n         * @return {?}\n         */\n        function () { return this._localeChanges; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n     * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n     * string). The default implementation does not allow any deserialization, it simply checks that\n     * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n     * method on all of it's `@Input()` properties that accept dates. It is therefore possible to\n     * support passing values from your backend directly to these properties by overriding this method\n     * to also deserialize the format used by your backend.\n     * @param value The value to be deserialized into a date object.\n     * @returns The deserialized date object, either a valid date, null if the value can be\n     *     deserialized into a null date (e.g. the empty string), or an invalid date.\n     */\n    /**\n     * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n     * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n     * string). The default implementation does not allow any deserialization, it simply checks that\n     * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n     * method on all of it's `\\@Input()` properties that accept dates. It is therefore possible to\n     * support passing values from your backend directly to these properties by overriding this method\n     * to also deserialize the format used by your backend.\n     * @param {?} value The value to be deserialized into a date object.\n     * @return {?} The deserialized date object, either a valid date, null if the value can be\n     *     deserialized into a null date (e.g. the empty string), or an invalid date.\n     */\n    DateAdapter.prototype.deserialize = /**\n     * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n     * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n     * string). The default implementation does not allow any deserialization, it simply checks that\n     * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n     * method on all of it's `\\@Input()` properties that accept dates. It is therefore possible to\n     * support passing values from your backend directly to these properties by overriding this method\n     * to also deserialize the format used by your backend.\n     * @param {?} value The value to be deserialized into a date object.\n     * @return {?} The deserialized date object, either a valid date, null if the value can be\n     *     deserialized into a null date (e.g. the empty string), or an invalid date.\n     */\n    function (value) {\n        if (value == null || this.isDateInstance(value) && this.isValid(value)) {\n            return value;\n        }\n        return this.invalid();\n    };\n    /**\n     * Sets the locale used for all dates.\n     * @param locale The new locale.\n     */\n    /**\n     * Sets the locale used for all dates.\n     * @param {?} locale The new locale.\n     * @return {?}\n     */\n    DateAdapter.prototype.setLocale = /**\n     * Sets the locale used for all dates.\n     * @param {?} locale The new locale.\n     * @return {?}\n     */\n    function (locale) {\n        this.locale = locale;\n        this._localeChanges.next();\n    };\n    /**\n     * Compares two dates.\n     * @param first The first date to compare.\n     * @param second The second date to compare.\n     * @returns 0 if the dates are equal, a number less than 0 if the first date is earlier,\n     *     a number greater than 0 if the first date is later.\n     */\n    /**\n     * Compares two dates.\n     * @param {?} first The first date to compare.\n     * @param {?} second The second date to compare.\n     * @return {?} 0 if the dates are equal, a number less than 0 if the first date is earlier,\n     *     a number greater than 0 if the first date is later.\n     */\n    DateAdapter.prototype.compareDate = /**\n     * Compares two dates.\n     * @param {?} first The first date to compare.\n     * @param {?} second The second date to compare.\n     * @return {?} 0 if the dates are equal, a number less than 0 if the first date is earlier,\n     *     a number greater than 0 if the first date is later.\n     */\n    function (first, second) {\n        return this.getYear(first) - this.getYear(second) ||\n            this.getMonth(first) - this.getMonth(second) ||\n            this.getDate(first) - this.getDate(second);\n    };\n    /**\n     * Checks if two dates are equal.\n     * @param first The first date to check.\n     * @param second The second date to check.\n     * @returns Whether the two dates are equal.\n     *     Null dates are considered equal to other null dates.\n     */\n    /**\n     * Checks if two dates are equal.\n     * @param {?} first The first date to check.\n     * @param {?} second The second date to check.\n     * @return {?} Whether the two dates are equal.\n     *     Null dates are considered equal to other null dates.\n     */\n    DateAdapter.prototype.sameDate = /**\n     * Checks if two dates are equal.\n     * @param {?} first The first date to check.\n     * @param {?} second The second date to check.\n     * @return {?} Whether the two dates are equal.\n     *     Null dates are considered equal to other null dates.\n     */\n    function (first, second) {\n        if (first && second) {\n            var /** @type {?} */ firstValid = this.isValid(first);\n            var /** @type {?} */ secondValid = this.isValid(second);\n            if (firstValid && secondValid) {\n                return !this.compareDate(first, second);\n            }\n            return firstValid == secondValid;\n        }\n        return first == second;\n    };\n    /**\n     * Clamp the given date between min and max dates.\n     * @param date The date to clamp.\n     * @param min The minimum value to allow. If null or omitted no min is enforced.\n     * @param max The maximum value to allow. If null or omitted no max is enforced.\n     * @returns `min` if `date` is less than `min`, `max` if date is greater than `max`,\n     *     otherwise `date`.\n     */\n    /**\n     * Clamp the given date between min and max dates.\n     * @param {?} date The date to clamp.\n     * @param {?=} min The minimum value to allow. If null or omitted no min is enforced.\n     * @param {?=} max The maximum value to allow. If null or omitted no max is enforced.\n     * @return {?} `min` if `date` is less than `min`, `max` if date is greater than `max`,\n     *     otherwise `date`.\n     */\n    DateAdapter.prototype.clampDate = /**\n     * Clamp the given date between min and max dates.\n     * @param {?} date The date to clamp.\n     * @param {?=} min The minimum value to allow. If null or omitted no min is enforced.\n     * @param {?=} max The maximum value to allow. If null or omitted no max is enforced.\n     * @return {?} `min` if `date` is less than `min`, `max` if date is greater than `max`,\n     *     otherwise `date`.\n     */\n    function (date, min, max) {\n        if (min && this.compareDate(date, min) < 0) {\n            return min;\n        }\n        if (max && this.compareDate(date, max) > 0) {\n            return max;\n        }\n        return date;\n    };\n    return DateAdapter;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar /** @type {?} */ MAT_DATE_FORMATS = new InjectionToken('mat-date-formats');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Whether the browser supports the Intl API.\n */\nvar /** @type {?} */ SUPPORTS_INTL_API = typeof Intl != 'undefined';\n/**\n * The default month names to use if Intl API is not available.\n */\nvar /** @type {?} */ DEFAULT_MONTH_NAMES = {\n    'long': [\n        'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n        'October', 'November', 'December'\n    ],\n    'short': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    'narrow': ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\n};\nvar ɵ0 = function (i) { return String(i + 1); };\n/**\n * The default date names to use if Intl API is not available.\n */\nvar /** @type {?} */ DEFAULT_DATE_NAMES = range(31, ɵ0);\n/**\n * The default day of the week names to use if Intl API is not available.\n */\nvar /** @type {?} */ DEFAULT_DAY_OF_WEEK_NAMES = {\n    'long': ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n    'short': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    'narrow': ['S', 'M', 'T', 'W', 'T', 'F', 'S']\n};\n/**\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings an with out of bounds month, date, etc.\n */\nvar /** @type {?} */ ISO_8601_REGEX = /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n/**\n * Creates an array and fills it with values.\n * @template T\n * @param {?} length\n * @param {?} valueFunction\n * @return {?}\n */\nfunction range(length, valueFunction) {\n    var /** @type {?} */ valuesArray = Array(length);\n    for (var /** @type {?} */ i = 0; i < length; i++) {\n        valuesArray[i] = valueFunction(i);\n    }\n    return valuesArray;\n}\n/**\n * Adapts the native JS Date for use with cdk-based components that work with dates.\n */\nvar NativeDateAdapter = /** @class */ (function (_super) {\n    __extends(NativeDateAdapter, _super);\n    function NativeDateAdapter(matDateLocale, platform) {\n        var _this = _super.call(this) || this;\n        /**\n         * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\n         * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\n         * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\n         * will produce `'8/13/1800'`.\n         *\n         * TODO(mmalerba): drop this variable. It's not being used in the code right now. We're now\n         * getting the string representation of a Date object from it's utc representation. We're keeping\n         * it here for sometime, just for precaution, in case we decide to revert some of these changes\n         * though.\n         */\n        _this.useUtcForDisplay = true;\n        _super.prototype.setLocale.call(_this, matDateLocale);\n        // IE does its own time zone correction, so we disable this on IE.\n        // IE does its own time zone correction, so we disable this on IE.\n        _this.useUtcForDisplay = !platform.TRIDENT;\n        _this._clampDate = platform.TRIDENT || platform.EDGE;\n        return _this;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.getYear = /**\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        return date.getFullYear();\n    };\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.getMonth = /**\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        return date.getMonth();\n    };\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.getDate = /**\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        return date.getDate();\n    };\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.getDayOfWeek = /**\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        return date.getDay();\n    };\n    /**\n     * @param {?} style\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.getMonthNames = /**\n     * @param {?} style\n     * @return {?}\n     */\n    function (style) {\n        var _this = this;\n        if (SUPPORTS_INTL_API) {\n            var /** @type {?} */ dtf_1 = new Intl.DateTimeFormat(this.locale, { month: style, timeZone: 'utc' });\n            return range(12, function (i) {\n                return _this._stripDirectionalityCharacters(_this._format(dtf_1, new Date(2017, i, 1)));\n            });\n        }\n        return DEFAULT_MONTH_NAMES[style];\n    };\n    /**\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.getDateNames = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (SUPPORTS_INTL_API) {\n            var /** @type {?} */ dtf_2 = new Intl.DateTimeFormat(this.locale, { day: 'numeric', timeZone: 'utc' });\n            return range(31, function (i) {\n                return _this._stripDirectionalityCharacters(_this._format(dtf_2, new Date(2017, 0, i + 1)));\n            });\n        }\n        return DEFAULT_DATE_NAMES;\n    };\n    /**\n     * @param {?} style\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.getDayOfWeekNames = /**\n     * @param {?} style\n     * @return {?}\n     */\n    function (style) {\n        var _this = this;\n        if (SUPPORTS_INTL_API) {\n            var /** @type {?} */ dtf_3 = new Intl.DateTimeFormat(this.locale, { weekday: style, timeZone: 'utc' });\n            return range(7, function (i) {\n                return _this._stripDirectionalityCharacters(_this._format(dtf_3, new Date(2017, 0, i + 1)));\n            });\n        }\n        return DEFAULT_DAY_OF_WEEK_NAMES[style];\n    };\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.getYearName = /**\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        if (SUPPORTS_INTL_API) {\n            var /** @type {?} */ dtf = new Intl.DateTimeFormat(this.locale, { year: 'numeric', timeZone: 'utc' });\n            return this._stripDirectionalityCharacters(this._format(dtf, date));\n        }\n        return String(this.getYear(date));\n    };\n    /**\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.getFirstDayOfWeek = /**\n     * @return {?}\n     */\n    function () {\n        // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n        return 0;\n    };\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.getNumDaysInMonth = /**\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        return this.getDate(this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + 1, 0));\n    };\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.clone = /**\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        return this.createDate(this.getYear(date), this.getMonth(date), this.getDate(date));\n    };\n    /**\n     * @param {?} year\n     * @param {?} month\n     * @param {?} date\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.createDate = /**\n     * @param {?} year\n     * @param {?} month\n     * @param {?} date\n     * @return {?}\n     */\n    function (year, month, date) {\n        // Check for invalid month and date (except upper bound on date which we have to check after\n        // creating the Date).\n        if (month < 0 || month > 11) {\n            throw Error(\"Invalid month index \\\"\" + month + \"\\\". Month index has to be between 0 and 11.\");\n        }\n        if (date < 1) {\n            throw Error(\"Invalid date \\\"\" + date + \"\\\". Date has to be greater than 0.\");\n        }\n        var /** @type {?} */ result = this._createDateWithOverflow(year, month, date);\n        // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n        if (result.getMonth() != month) {\n            throw Error(\"Invalid date \\\"\" + date + \"\\\" for month with index \\\"\" + month + \"\\\".\");\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.today = /**\n     * @return {?}\n     */\n    function () {\n        return new Date();\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.parse = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n        // parameters.\n        if (typeof value == 'number') {\n            return new Date(value);\n        }\n        return value ? new Date(Date.parse(value)) : null;\n    };\n    /**\n     * @param {?} date\n     * @param {?} displayFormat\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.format = /**\n     * @param {?} date\n     * @param {?} displayFormat\n     * @return {?}\n     */\n    function (date, displayFormat) {\n        if (!this.isValid(date)) {\n            throw Error('NativeDateAdapter: Cannot format invalid date.');\n        }\n        if (SUPPORTS_INTL_API) {\n            // On IE and Edge the i18n API will throw a hard error that can crash the entire app\n            // if we attempt to format a date whose year is less than 1 or greater than 9999.\n            if (this._clampDate && (date.getFullYear() < 1 || date.getFullYear() > 9999)) {\n                date = this.clone(date);\n                date.setFullYear(Math.max(1, Math.min(9999, date.getFullYear())));\n            }\n            displayFormat = __assign({}, displayFormat, { timeZone: 'utc' });\n            var /** @type {?} */ dtf = new Intl.DateTimeFormat(this.locale, displayFormat);\n            return this._stripDirectionalityCharacters(this._format(dtf, date));\n        }\n        return this._stripDirectionalityCharacters(date.toDateString());\n    };\n    /**\n     * @param {?} date\n     * @param {?} years\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.addCalendarYears = /**\n     * @param {?} date\n     * @param {?} years\n     * @return {?}\n     */\n    function (date, years) {\n        return this.addCalendarMonths(date, years * 12);\n    };\n    /**\n     * @param {?} date\n     * @param {?} months\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.addCalendarMonths = /**\n     * @param {?} date\n     * @param {?} months\n     * @return {?}\n     */\n    function (date, months) {\n        var /** @type {?} */ newDate = this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + months, this.getDate(date));\n        // It's possible to wind up in the wrong month if the original month has more days than the new\n        // month. In this case we want to go to the last day of the desired month.\n        // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n        // guarantee this.\n        if (this.getMonth(newDate) != ((this.getMonth(date) + months) % 12 + 12) % 12) {\n            newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n        }\n        return newDate;\n    };\n    /**\n     * @param {?} date\n     * @param {?} days\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.addCalendarDays = /**\n     * @param {?} date\n     * @param {?} days\n     * @return {?}\n     */\n    function (date, days) {\n        return this._createDateWithOverflow(this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n    };\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.toIso8601 = /**\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        return [\n            date.getUTCFullYear(),\n            this._2digit(date.getUTCMonth() + 1),\n            this._2digit(date.getUTCDate())\n        ].join('-');\n    };\n    /**\n     * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n     * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n     * invalid date for all other values.\n     */\n    /**\n     * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n     * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n     * invalid date for all other values.\n     * @param {?} value\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.deserialize = /**\n     * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n     * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n     * invalid date for all other values.\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        if (typeof value === 'string') {\n            if (!value) {\n                return null;\n            }\n            // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n            // string is the right format first.\n            if (ISO_8601_REGEX.test(value)) {\n                var /** @type {?} */ date = new Date(value);\n                if (this.isValid(date)) {\n                    return date;\n                }\n            }\n        }\n        return _super.prototype.deserialize.call(this, value);\n    };\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.isDateInstance = /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function (obj) {\n        return obj instanceof Date;\n    };\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.isValid = /**\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        return !isNaN(date.getTime());\n    };\n    /**\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.invalid = /**\n     * @return {?}\n     */\n    function () {\n        return new Date(NaN);\n    };\n    /**\n     * Creates a date but allows the month and date to overflow.\n     * @param {?} year\n     * @param {?} month\n     * @param {?} date\n     * @return {?}\n     */\n    NativeDateAdapter.prototype._createDateWithOverflow = /**\n     * Creates a date but allows the month and date to overflow.\n     * @param {?} year\n     * @param {?} month\n     * @param {?} date\n     * @return {?}\n     */\n    function (year, month, date) {\n        var /** @type {?} */ result = new Date(year, month, date);\n        // We need to correct for the fact that JS native Date treats years in range [0, 99] as\n        // abbreviations for 19xx.\n        if (year >= 0 && year < 100) {\n            result.setFullYear(this.getYear(result) - 1900);\n        }\n        return result;\n    };\n    /**\n     * Pads a number to make it two digits.\n     * @param {?} n The number to pad.\n     * @return {?} The padded number.\n     */\n    NativeDateAdapter.prototype._2digit = /**\n     * Pads a number to make it two digits.\n     * @param {?} n The number to pad.\n     * @return {?} The padded number.\n     */\n    function (n) {\n        return ('00' + n).slice(-2);\n    };\n    /**\n     * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\n     * other browsers do not. We remove them to make output consistent and because they interfere with\n     * date parsing.\n     * @param {?} str The string to strip direction characters from.\n     * @return {?} The stripped string.\n     */\n    NativeDateAdapter.prototype._stripDirectionalityCharacters = /**\n     * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\n     * other browsers do not. We remove them to make output consistent and because they interfere with\n     * date parsing.\n     * @param {?} str The string to strip direction characters from.\n     * @return {?} The stripped string.\n     */\n    function (str) {\n        return str.replace(/[\\u200e\\u200f]/g, '');\n    };\n    /**\n     * When converting Date object to string, javascript built-in functions may return wrong\n     * results because it applies its internal DST rules. The DST rules around the world change\n     * very frequently, and the current valid rule is not always valid in previous years though.\n     * We work around this problem building a new Date object which has its internal UTC\n     * representation with the local date and time.\n     * @param {?} dtf Intl.DateTimeFormat object, containg the desired string format. It must have\n     *    timeZone set to 'utc' to work fine.\n     * @param {?} date Date from which we want to get the string representation according to dtf\n     * @return {?} A Date object with its UTC representation based on the passed in date info\n     */\n    NativeDateAdapter.prototype._format = /**\n     * When converting Date object to string, javascript built-in functions may return wrong\n     * results because it applies its internal DST rules. The DST rules around the world change\n     * very frequently, and the current valid rule is not always valid in previous years though.\n     * We work around this problem building a new Date object which has its internal UTC\n     * representation with the local date and time.\n     * @param {?} dtf Intl.DateTimeFormat object, containg the desired string format. It must have\n     *    timeZone set to 'utc' to work fine.\n     * @param {?} date Date from which we want to get the string representation according to dtf\n     * @return {?} A Date object with its UTC representation based on the passed in date info\n     */\n    function (dtf, date) {\n        var /** @type {?} */ d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n        return dtf.format(d);\n    };\n    NativeDateAdapter.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    NativeDateAdapter.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_LOCALE,] },] },\n        { type: Platform, },\n    ]; };\n    return NativeDateAdapter;\n}(DateAdapter));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nvar /** @type {?} */ MAT_NATIVE_DATE_FORMATS = {\n    parse: {\n        dateInput: null,\n    },\n    display: {\n        dateInput: { year: 'numeric', month: 'numeric', day: 'numeric' },\n        monthYearLabel: { year: 'numeric', month: 'short' },\n        dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\n        monthYearA11yLabel: { year: 'numeric', month: 'long' },\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NativeDateModule = /** @class */ (function () {\n    function NativeDateModule() {\n    }\n    NativeDateModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [PlatformModule],\n                    providers: [\n                        { provide: DateAdapter, useClass: NativeDateAdapter },\n                    ],\n                },] },\n    ];\n    return NativeDateModule;\n}());\nvar ɵ0$1 = MAT_NATIVE_DATE_FORMATS;\nvar MatNativeDateModule = /** @class */ (function () {\n    function MatNativeDateModule() {\n    }\n    MatNativeDateModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [NativeDateModule],\n                    providers: [{ provide: MAT_DATE_FORMATS, useValue: ɵ0$1 }],\n                },] },\n    ];\n    return MatNativeDateModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Error state matcher that matches when a control is invalid and dirty.\n */\nvar ShowOnDirtyErrorStateMatcher = /** @class */ (function () {\n    function ShowOnDirtyErrorStateMatcher() {\n    }\n    /**\n     * @param {?} control\n     * @param {?} form\n     * @return {?}\n     */\n    ShowOnDirtyErrorStateMatcher.prototype.isErrorState = /**\n     * @param {?} control\n     * @param {?} form\n     * @return {?}\n     */\n    function (control, form) {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    };\n    ShowOnDirtyErrorStateMatcher.decorators = [\n        { type: Injectable },\n    ];\n    return ShowOnDirtyErrorStateMatcher;\n}());\n/**\n * Provider that defines how form controls behave with regards to displaying error messages.\n */\nvar ErrorStateMatcher = /** @class */ (function () {\n    function ErrorStateMatcher() {\n    }\n    /**\n     * @param {?} control\n     * @param {?} form\n     * @return {?}\n     */\n    ErrorStateMatcher.prototype.isErrorState = /**\n     * @param {?} control\n     * @param {?} form\n     * @return {?}\n     */\n    function (control, form) {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    };\n    ErrorStateMatcher.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */ ErrorStateMatcher.ngInjectableDef = defineInjectable({ factory: function ErrorStateMatcher_Factory() { return new ErrorStateMatcher(); }, token: ErrorStateMatcher, providedIn: \"root\" });\n    return ErrorStateMatcher;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Injection token that can be used to provide options to the Hammerjs instance.\n * More info at http://hammerjs.github.io/api/.\n */\nvar /** @type {?} */ MAT_HAMMER_OPTIONS = new InjectionToken('MAT_HAMMER_OPTIONS');\n/**\n * Adjusts configuration of our gesture library, Hammer.\n */\nvar GestureConfig = /** @class */ (function (_super) {\n    __extends(GestureConfig, _super);\n    function GestureConfig(_hammerOptions, commonModule) {\n        var _this = _super.call(this) || this;\n        _this._hammerOptions = _hammerOptions;\n        _this._hammer = typeof window !== 'undefined' ? (/** @type {?} */ (window)).Hammer : null;\n        /**\n         * List of new event names to add to the gesture support list\n         */\n        _this.events = _this._hammer ? [\n            'longpress',\n            'slide',\n            'slidestart',\n            'slideend',\n            'slideright',\n            'slideleft'\n        ] : [];\n        if (commonModule) {\n            commonModule._checkHammerIsAvailable();\n        }\n        return _this;\n    }\n    /**\n     * Builds Hammer instance manually to add custom recognizers that match the Material Design spec.\n     *\n     * Our gesture names come from the Material Design gestures spec:\n     * https://material.io/design/#gestures-touch-mechanics\n     *\n     * More information on default recognizers can be found in Hammer docs:\n     * http://hammerjs.github.io/recognizer-pan/\n     * http://hammerjs.github.io/recognizer-press/\n     *\n     * @param element Element to which to assign the new HammerJS gestures.\n     * @returns Newly-created HammerJS instance.\n     */\n    /**\n     * Builds Hammer instance manually to add custom recognizers that match the Material Design spec.\n     *\n     * Our gesture names come from the Material Design gestures spec:\n     * https://material.io/design/#gestures-touch-mechanics\n     *\n     * More information on default recognizers can be found in Hammer docs:\n     * http://hammerjs.github.io/recognizer-pan/\n     * http://hammerjs.github.io/recognizer-press/\n     *\n     * @param {?} element Element to which to assign the new HammerJS gestures.\n     * @return {?} Newly-created HammerJS instance.\n     */\n    GestureConfig.prototype.buildHammer = /**\n     * Builds Hammer instance manually to add custom recognizers that match the Material Design spec.\n     *\n     * Our gesture names come from the Material Design gestures spec:\n     * https://material.io/design/#gestures-touch-mechanics\n     *\n     * More information on default recognizers can be found in Hammer docs:\n     * http://hammerjs.github.io/recognizer-pan/\n     * http://hammerjs.github.io/recognizer-press/\n     *\n     * @param {?} element Element to which to assign the new HammerJS gestures.\n     * @return {?} Newly-created HammerJS instance.\n     */\n    function (element) {\n        var /** @type {?} */ mc = new this._hammer(element, this._hammerOptions || undefined);\n        // Default Hammer Recognizers.\n        var /** @type {?} */ pan = new this._hammer.Pan();\n        var /** @type {?} */ swipe = new this._hammer.Swipe();\n        var /** @type {?} */ press = new this._hammer.Press();\n        // Notice that a HammerJS recognizer can only depend on one other recognizer once.\n        // Otherwise the previous `recognizeWith` will be dropped.\n        // TODO: Confirm threshold numbers with Material Design UX Team\n        var /** @type {?} */ slide = this._createRecognizer(pan, { event: 'slide', threshold: 0 }, swipe);\n        var /** @type {?} */ longpress = this._createRecognizer(press, { event: 'longpress', time: 500 });\n        // Overwrite the default `pan` event to use the swipe event.\n        pan.recognizeWith(swipe);\n        // Add customized gestures to Hammer manager\n        mc.add([swipe, press, pan, slide, longpress]);\n        return /** @type {?} */ (mc);\n    };\n    /**\n     * Creates a new recognizer, without affecting the default recognizers of HammerJS\n     * @param {?} base\n     * @param {?} options\n     * @param {...?} inheritances\n     * @return {?}\n     */\n    GestureConfig.prototype._createRecognizer = /**\n     * Creates a new recognizer, without affecting the default recognizers of HammerJS\n     * @param {?} base\n     * @param {?} options\n     * @param {...?} inheritances\n     * @return {?}\n     */\n    function (base, options) {\n        var inheritances = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            inheritances[_i - 2] = arguments[_i];\n        }\n        var /** @type {?} */ recognizer = new (/** @type {?} */ (base.constructor))(options);\n        inheritances.push(base);\n        inheritances.forEach(function (item) { return recognizer.recognizeWith(item); });\n        return recognizer;\n    };\n    GestureConfig.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    GestureConfig.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_HAMMER_OPTIONS,] },] },\n        { type: MatCommonModule, decorators: [{ type: Optional },] },\n    ]; };\n    return GestureConfig;\n}(HammerGestureConfig));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a \\@ContentChildren(MatLine) query, then\n * counted by checking the query list's length.\n */\nvar MatLine = /** @class */ (function () {\n    function MatLine() {\n    }\n    MatLine.decorators = [\n        { type: Directive, args: [{\n                    selector: '[mat-line], [matLine]',\n                    host: { 'class': 'mat-line' }\n                },] },\n    ];\n    return MatLine;\n}());\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * \\@docs-private\n */\nvar  /**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * \\@docs-private\n */\nMatLineSetter = /** @class */ (function () {\n    function MatLineSetter(_lines, _element) {\n        var _this = this;\n        this._lines = _lines;\n        this._element = _element;\n        this._setLineClass(this._lines.length);\n        this._lines.changes.subscribe(function () {\n            _this._setLineClass(_this._lines.length);\n        });\n    }\n    /**\n     * @param {?} count\n     * @return {?}\n     */\n    MatLineSetter.prototype._setLineClass = /**\n     * @param {?} count\n     * @return {?}\n     */\n    function (count) {\n        this._resetClasses();\n        if (count === 2 || count === 3) {\n            this._setClass(\"mat-\" + count + \"-line\", true);\n        }\n        else if (count > 3) {\n            this._setClass(\"mat-multi-line\", true);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatLineSetter.prototype._resetClasses = /**\n     * @return {?}\n     */\n    function () {\n        this._setClass('mat-2-line', false);\n        this._setClass('mat-3-line', false);\n        this._setClass('mat-multi-line', false);\n    };\n    /**\n     * @param {?} className\n     * @param {?} isAdd\n     * @return {?}\n     */\n    MatLineSetter.prototype._setClass = /**\n     * @param {?} className\n     * @param {?} isAdd\n     * @return {?}\n     */\n    function (className, isAdd) {\n        if (isAdd) {\n            this._element.nativeElement.classList.add(className);\n        }\n        else {\n            this._element.nativeElement.classList.remove(className);\n        }\n    };\n    return MatLineSetter;\n}());\nvar MatLineModule = /** @class */ (function () {\n    function MatLineModule() {\n    }\n    MatLineModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatLine, MatCommonModule],\n                    declarations: [MatLine],\n                },] },\n    ];\n    return MatLineModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/** @enum {number} */\nvar RippleState = {\n    FADING_IN: 0,\n    VISIBLE: 1,\n    FADING_OUT: 2,\n    HIDDEN: 3,\n};\nRippleState[RippleState.FADING_IN] = \"FADING_IN\";\nRippleState[RippleState.VISIBLE] = \"VISIBLE\";\nRippleState[RippleState.FADING_OUT] = \"FADING_OUT\";\nRippleState[RippleState.HIDDEN] = \"HIDDEN\";\n/**\n * Reference to a previously launched ripple element.\n */\nvar  /**\n * Reference to a previously launched ripple element.\n */\nRippleRef = /** @class */ (function () {\n    function RippleRef(_renderer, element, config) {\n        this._renderer = _renderer;\n        this.element = element;\n        this.config = config;\n        /**\n         * Current state of the ripple reference.\n         */\n        this.state = RippleState.HIDDEN;\n    }\n    /** Fades out the ripple element. */\n    /**\n     * Fades out the ripple element.\n     * @return {?}\n     */\n    RippleRef.prototype.fadeOut = /**\n     * Fades out the ripple element.\n     * @return {?}\n     */\n    function () {\n        this._renderer.fadeOutRipple(this);\n    };\n    return RippleRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Default ripple animation configuration for ripples without an explicit\n * animation config specified.\n */\nvar /** @type {?} */ defaultRippleAnimationConfig = {\n    enterDuration: 450,\n    exitDuration: 400\n};\n/**\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\n * events to avoid synthetic mouse events.\n */\nvar /** @type {?} */ ignoreMouseEventsTimeout = 800;\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * \\@docs-private\n */\nvar  /**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * \\@docs-private\n */\nRippleRenderer = /** @class */ (function () {\n    function RippleRenderer(_target, _ngZone, elementRef, platform) {\n        var _this = this;\n        this._target = _target;\n        this._ngZone = _ngZone;\n        /**\n         * Whether the pointer is currently down or not.\n         */\n        this._isPointerDown = false;\n        /**\n         * Events to be registered on the trigger element.\n         */\n        this._triggerEvents = new Map();\n        /**\n         * Set of currently active ripple references.\n         */\n        this._activeRipples = new Set();\n        /**\n         * Options that apply to all the event listeners that are bound by the renderer.\n         */\n        this._eventOptions = supportsPassiveEventListeners() ? (/** @type {?} */ ({ passive: true })) : false;\n        /**\n         * Function being called whenever the trigger is being pressed using mouse.\n         */\n        this.onMousedown = function (event) {\n            var /** @type {?} */ isSyntheticEvent = _this._lastTouchStartEvent &&\n                Date.now() < _this._lastTouchStartEvent + ignoreMouseEventsTimeout;\n            if (!_this._target.rippleDisabled && !isSyntheticEvent) {\n                _this._isPointerDown = true;\n                _this.fadeInRipple(event.clientX, event.clientY, _this._target.rippleConfig);\n            }\n        };\n        /**\n         * Function being called whenever the trigger is being pressed using touch.\n         */\n        this.onTouchStart = function (event) {\n            if (!_this._target.rippleDisabled) {\n                // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\n                // events will launch a second ripple if we don't ignore mouse events for a specific\n                // time after a touchstart event.\n                // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\n                // events will launch a second ripple if we don't ignore mouse events for a specific\n                // time after a touchstart event.\n                _this._lastTouchStartEvent = Date.now();\n                _this._isPointerDown = true;\n                _this.fadeInRipple(event.touches[0].clientX, event.touches[0].clientY, _this._target.rippleConfig);\n            }\n        };\n        /**\n         * Function being called whenever the trigger is being released.\n         */\n        this.onPointerUp = function () {\n            if (!_this._isPointerDown) {\n                return;\n            }\n            _this._isPointerDown = false;\n            // Fade-out all ripples that are visible and not persistent.\n            // Fade-out all ripples that are visible and not persistent.\n            _this._activeRipples.forEach(function (ripple) {\n                // By default, only ripples that are completely visible will fade out on pointer release.\n                // If the `terminateOnPointerUp` option is set, ripples that still fade in will also fade out.\n                var /** @type {?} */ isVisible = ripple.state === RippleState.VISIBLE ||\n                    ripple.config.terminateOnPointerUp && ripple.state === RippleState.FADING_IN;\n                if (!ripple.config.persistent && isVisible) {\n                    ripple.fadeOut();\n                }\n            });\n        };\n        // Only do anything if we're on the browser.\n        if (platform.isBrowser) {\n            this._containerElement = elementRef.nativeElement;\n            // Specify events which need to be registered on the trigger.\n            this._triggerEvents.set('mousedown', this.onMousedown);\n            this._triggerEvents.set('mouseup', this.onPointerUp);\n            this._triggerEvents.set('mouseleave', this.onPointerUp);\n            this._triggerEvents.set('touchstart', this.onTouchStart);\n            this._triggerEvents.set('touchend', this.onPointerUp);\n        }\n    }\n    /**\n     * Fades in a ripple at the given coordinates.\n     * @param x Coordinate within the element, along the X axis at which to start the ripple.\n     * @param y Coordinate within the element, along the Y axis at which to start the ripple.\n     * @param config Extra ripple options.\n     */\n    /**\n     * Fades in a ripple at the given coordinates.\n     * @param {?} x Coordinate within the element, along the X axis at which to start the ripple.\n     * @param {?} y Coordinate within the element, along the Y axis at which to start the ripple.\n     * @param {?=} config Extra ripple options.\n     * @return {?}\n     */\n    RippleRenderer.prototype.fadeInRipple = /**\n     * Fades in a ripple at the given coordinates.\n     * @param {?} x Coordinate within the element, along the X axis at which to start the ripple.\n     * @param {?} y Coordinate within the element, along the Y axis at which to start the ripple.\n     * @param {?=} config Extra ripple options.\n     * @return {?}\n     */\n    function (x, y, config) {\n        var _this = this;\n        if (config === void 0) { config = {}; }\n        var /** @type {?} */ containerRect = this._containerRect =\n            this._containerRect || this._containerElement.getBoundingClientRect();\n        var /** @type {?} */ animationConfig = __assign({}, defaultRippleAnimationConfig, config.animation);\n        if (config.centered) {\n            x = containerRect.left + containerRect.width / 2;\n            y = containerRect.top + containerRect.height / 2;\n        }\n        var /** @type {?} */ radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\n        var /** @type {?} */ offsetX = x - containerRect.left;\n        var /** @type {?} */ offsetY = y - containerRect.top;\n        var /** @type {?} */ duration = animationConfig.enterDuration / (config.speedFactor || 1);\n        var /** @type {?} */ ripple = document.createElement('div');\n        ripple.classList.add('mat-ripple-element');\n        ripple.style.left = offsetX - radius + \"px\";\n        ripple.style.top = offsetY - radius + \"px\";\n        ripple.style.height = radius * 2 + \"px\";\n        ripple.style.width = radius * 2 + \"px\";\n        // If the color is not set, the default CSS color will be used.\n        ripple.style.backgroundColor = config.color || null;\n        ripple.style.transitionDuration = duration + \"ms\";\n        this._containerElement.appendChild(ripple);\n        // By default the browser does not recalculate the styles of dynamically created\n        // ripple elements. This is critical because then the `scale` would not animate properly.\n        enforceStyleRecalculation(ripple);\n        ripple.style.transform = 'scale(1)';\n        // Exposed reference to the ripple that will be returned.\n        var /** @type {?} */ rippleRef = new RippleRef(this, ripple, config);\n        rippleRef.state = RippleState.FADING_IN;\n        // Add the ripple reference to the list of all active ripples.\n        this._activeRipples.add(rippleRef);\n        if (!config.persistent) {\n            this._mostRecentTransientRipple = rippleRef;\n        }\n        // Wait for the ripple element to be completely faded in.\n        // Once it's faded in, the ripple can be hidden immediately if the mouse is released.\n        this.runTimeoutOutsideZone(function () {\n            var /** @type {?} */ isMostRecentTransientRipple = rippleRef === _this._mostRecentTransientRipple;\n            rippleRef.state = RippleState.VISIBLE;\n            // When the timer runs out while the user has kept their pointer down, we want to\n            // keep only the persistent ripples and the latest transient ripple. We do this,\n            // because we don't want stacked transient ripples to appear after their enter\n            // animation has finished.\n            if (!config.persistent && (!isMostRecentTransientRipple || !_this._isPointerDown)) {\n                rippleRef.fadeOut();\n            }\n        }, duration);\n        return rippleRef;\n    };\n    /** Fades out a ripple reference. */\n    /**\n     * Fades out a ripple reference.\n     * @param {?} rippleRef\n     * @return {?}\n     */\n    RippleRenderer.prototype.fadeOutRipple = /**\n     * Fades out a ripple reference.\n     * @param {?} rippleRef\n     * @return {?}\n     */\n    function (rippleRef) {\n        var /** @type {?} */ wasActive = this._activeRipples.delete(rippleRef);\n        if (rippleRef === this._mostRecentTransientRipple) {\n            this._mostRecentTransientRipple = null;\n        }\n        // Clear out the cached bounding rect if we have no more ripples.\n        if (!this._activeRipples.size) {\n            this._containerRect = null;\n        }\n        // For ripples that are not active anymore, don't re-un the fade-out animation.\n        if (!wasActive) {\n            return;\n        }\n        var /** @type {?} */ rippleEl = rippleRef.element;\n        var /** @type {?} */ animationConfig = __assign({}, defaultRippleAnimationConfig, rippleRef.config.animation);\n        rippleEl.style.transitionDuration = animationConfig.exitDuration + \"ms\";\n        rippleEl.style.opacity = '0';\n        rippleRef.state = RippleState.FADING_OUT;\n        // Once the ripple faded out, the ripple can be safely removed from the DOM.\n        this.runTimeoutOutsideZone(function () {\n            rippleRef.state = RippleState.HIDDEN; /** @type {?} */\n            ((rippleEl.parentNode)).removeChild(rippleEl);\n        }, animationConfig.exitDuration);\n    };\n    /** Fades out all currently active ripples. */\n    /**\n     * Fades out all currently active ripples.\n     * @return {?}\n     */\n    RippleRenderer.prototype.fadeOutAll = /**\n     * Fades out all currently active ripples.\n     * @return {?}\n     */\n    function () {\n        this._activeRipples.forEach(function (ripple) { return ripple.fadeOut(); });\n    };\n    /** Sets up the trigger event listeners */\n    /**\n     * Sets up the trigger event listeners\n     * @param {?} element\n     * @return {?}\n     */\n    RippleRenderer.prototype.setupTriggerEvents = /**\n     * Sets up the trigger event listeners\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        var _this = this;\n        if (!element || element === this._triggerElement) {\n            return;\n        }\n        // Remove all previously registered event listeners from the trigger element.\n        this._removeTriggerEvents();\n        this._ngZone.runOutsideAngular(function () {\n            _this._triggerEvents.forEach(function (fn, type) {\n                return element.addEventListener(type, fn, _this._eventOptions);\n            });\n        });\n        this._triggerElement = element;\n    };\n    /**\n     * Runs a timeout outside of the Angular zone to avoid triggering the change detection.\n     * @param {?} fn\n     * @param {?=} delay\n     * @return {?}\n     */\n    RippleRenderer.prototype.runTimeoutOutsideZone = /**\n     * Runs a timeout outside of the Angular zone to avoid triggering the change detection.\n     * @param {?} fn\n     * @param {?=} delay\n     * @return {?}\n     */\n    function (fn, delay) {\n        if (delay === void 0) { delay = 0; }\n        this._ngZone.runOutsideAngular(function () { return setTimeout(fn, delay); });\n    };\n    /** Removes previously registered event listeners from the trigger element. */\n    /**\n     * Removes previously registered event listeners from the trigger element.\n     * @return {?}\n     */\n    RippleRenderer.prototype._removeTriggerEvents = /**\n     * Removes previously registered event listeners from the trigger element.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this._triggerElement) {\n            this._triggerEvents.forEach(function (fn, type) {\n                /** @type {?} */ ((_this._triggerElement)).removeEventListener(type, fn, _this._eventOptions);\n            });\n        }\n    };\n    return RippleRenderer;\n}());\n/**\n * Enforces a style recalculation of a DOM element by computing its styles.\n * @param {?} element\n * @return {?}\n */\nfunction enforceStyleRecalculation(element) {\n    // Enforce a style recalculation by calling `getComputedStyle` and accessing any property.\n    // Calling `getPropertyValue` is important to let optimizers know that this is not a noop.\n    // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n    window.getComputedStyle(element).getPropertyValue('opacity');\n}\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n * @param {?} x\n * @param {?} y\n * @param {?} rect\n * @return {?}\n */\nfunction distanceToFurthestCorner(x, y, rect) {\n    var /** @type {?} */ distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n    var /** @type {?} */ distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n    return Math.sqrt(distX * distX + distY * distY);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Injection token that can be used to specify the global ripple options.\n */\nvar /** @type {?} */ MAT_RIPPLE_GLOBAL_OPTIONS = new InjectionToken('mat-ripple-global-options');\nvar MatRipple = /** @class */ (function () {\n    function MatRipple(_elementRef, ngZone, platform, globalOptions, animationMode) {\n        this._elementRef = _elementRef;\n        /**\n         * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n         * will be the distance from the center of the ripple to the furthest corner of the host element's\n         * bounding rectangle.\n         */\n        this.radius = 0;\n        /**\n         * If set, the normal duration of ripple animations is divided by this value. For example,\n         * setting it to 0.5 will cause the animations to take twice as long.\n         * A changed speedFactor will not modify the fade-out duration of the ripples.\n         * @deprecated Use the [matRippleAnimation] binding instead.\n         * \\@deletion-target 7.0.0\n         */\n        this.speedFactor = 1;\n        this._disabled = false;\n        /**\n         * Whether ripple directive is initialized and the input bindings are set.\n         */\n        this._isInitialized = false;\n        this._globalOptions = globalOptions || {};\n        this._rippleRenderer = new RippleRenderer(this, ngZone, _elementRef, platform);\n        if (animationMode === 'NoopAnimations') {\n            this._globalOptions.animation = { enterDuration: 0, exitDuration: 0 };\n        }\n    }\n    Object.defineProperty(MatRipple.prototype, \"disabled\", {\n        get: /**\n         * Whether click events will not trigger the ripple. Ripples can be still launched manually\n         * by using the `launch()` method.\n         * @return {?}\n         */\n        function () { return this._disabled; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._disabled = value;\n            this._setupTriggerEventsIfEnabled();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatRipple.prototype, \"trigger\", {\n        get: /**\n         * The element that triggers the ripple when click events are received.\n         * Defaults to the directive's host element.\n         * @return {?}\n         */\n        function () { return this._trigger || this._elementRef.nativeElement; },\n        set: /**\n         * @param {?} trigger\n         * @return {?}\n         */\n        function (trigger) {\n            this._trigger = trigger;\n            this._setupTriggerEventsIfEnabled();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MatRipple.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        this._isInitialized = true;\n        this._setupTriggerEventsIfEnabled();\n    };\n    /**\n     * @return {?}\n     */\n    MatRipple.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._rippleRenderer._removeTriggerEvents();\n    };\n    /** Fades out all currently showing ripple elements. */\n    /**\n     * Fades out all currently showing ripple elements.\n     * @return {?}\n     */\n    MatRipple.prototype.fadeOutAll = /**\n     * Fades out all currently showing ripple elements.\n     * @return {?}\n     */\n    function () {\n        this._rippleRenderer.fadeOutAll();\n    };\n    Object.defineProperty(MatRipple.prototype, \"rippleConfig\", {\n        /** Ripple configuration from the directive's input values. */\n        get: /**\n         * Ripple configuration from the directive's input values.\n         * @return {?}\n         */\n        function () {\n            return {\n                centered: this.centered,\n                radius: this.radius,\n                color: this.color,\n                animation: __assign({}, this._globalOptions.animation, this.animation),\n                terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,\n                speedFactor: this.speedFactor * (this._globalOptions.baseSpeedFactor || 1),\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatRipple.prototype, \"rippleDisabled\", {\n        /** Whether ripples on pointer-down are disabled or not. */\n        get: /**\n         * Whether ripples on pointer-down are disabled or not.\n         * @return {?}\n         */\n        function () {\n            return this.disabled || !!this._globalOptions.disabled;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets up the the trigger event listeners if ripples are enabled.\n     * @return {?}\n     */\n    MatRipple.prototype._setupTriggerEventsIfEnabled = /**\n     * Sets up the the trigger event listeners if ripples are enabled.\n     * @return {?}\n     */\n    function () {\n        if (!this.disabled && this._isInitialized) {\n            this._rippleRenderer.setupTriggerEvents(this.trigger);\n        }\n    };\n    /** Launches a manual ripple at the specified coordinated or just by the ripple config. */\n    /**\n     * Launches a manual ripple at the specified coordinated or just by the ripple config.\n     * @param {?} configOrX\n     * @param {?=} y\n     * @param {?=} config\n     * @return {?}\n     */\n    MatRipple.prototype.launch = /**\n     * Launches a manual ripple at the specified coordinated or just by the ripple config.\n     * @param {?} configOrX\n     * @param {?=} y\n     * @param {?=} config\n     * @return {?}\n     */\n    function (configOrX, y, config) {\n        if (y === void 0) { y = 0; }\n        if (typeof configOrX === 'number') {\n            return this._rippleRenderer.fadeInRipple(configOrX, y, __assign({}, this.rippleConfig, config));\n        }\n        else {\n            return this._rippleRenderer.fadeInRipple(0, 0, __assign({}, this.rippleConfig, configOrX));\n        }\n    };\n    MatRipple.decorators = [\n        { type: Directive, args: [{\n                    selector: '[mat-ripple], [matRipple]',\n                    exportAs: 'matRipple',\n                    host: {\n                        'class': 'mat-ripple',\n                        '[class.mat-ripple-unbounded]': 'unbounded'\n                    }\n                },] },\n    ];\n    /** @nocollapse */\n    MatRipple.ctorParameters = function () { return [\n        { type: ElementRef, },\n        { type: NgZone, },\n        { type: Platform, },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] },] },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] },] },\n    ]; };\n    MatRipple.propDecorators = {\n        \"color\": [{ type: Input, args: ['matRippleColor',] },],\n        \"unbounded\": [{ type: Input, args: ['matRippleUnbounded',] },],\n        \"centered\": [{ type: Input, args: ['matRippleCentered',] },],\n        \"radius\": [{ type: Input, args: ['matRippleRadius',] },],\n        \"speedFactor\": [{ type: Input, args: ['matRippleSpeedFactor',] },],\n        \"animation\": [{ type: Input, args: ['matRippleAnimation',] },],\n        \"disabled\": [{ type: Input, args: ['matRippleDisabled',] },],\n        \"trigger\": [{ type: Input, args: ['matRippleTrigger',] },],\n    };\n    return MatRipple;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar MatRippleModule = /** @class */ (function () {\n    function MatRippleModule() {\n    }\n    MatRippleModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [MatCommonModule, PlatformModule],\n                    exports: [MatRipple, MatCommonModule],\n                    declarations: [MatRipple],\n                },] },\n    ];\n    return MatRippleModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mat-primary .mat-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * \\@docs-private\n */\nvar MatPseudoCheckbox = /** @class */ (function () {\n    function MatPseudoCheckbox(_animationMode) {\n        this._animationMode = _animationMode;\n        /**\n         * Display state of the checkbox.\n         */\n        this.state = 'unchecked';\n        /**\n         * Whether the checkbox is disabled.\n         */\n        this.disabled = false;\n    }\n    MatPseudoCheckbox.decorators = [\n        { type: Component, args: [{encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    selector: 'mat-pseudo-checkbox',\n                    styles: [\".mat-pseudo-checkbox{width:20px;height:20px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0,0,.2,.1),background-color 90ms cubic-bezier(0,0,.2,.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:'';border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0,0,.2,.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:7px;left:0;width:16px;opacity:1}.mat-pseudo-checkbox-checked::after{top:3px;left:1px;width:12px;height:5px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1}\"],\n                    template: '',\n                    host: {\n                        'class': 'mat-pseudo-checkbox',\n                        '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n                        '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\n                        '[class.mat-pseudo-checkbox-disabled]': 'disabled',\n                        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    },\n                },] },\n    ];\n    /** @nocollapse */\n    MatPseudoCheckbox.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] },] },\n    ]; };\n    MatPseudoCheckbox.propDecorators = {\n        \"state\": [{ type: Input },],\n        \"disabled\": [{ type: Input },],\n    };\n    return MatPseudoCheckbox;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar MatPseudoCheckboxModule = /** @class */ (function () {\n    function MatPseudoCheckboxModule() {\n    }\n    MatPseudoCheckboxModule.decorators = [\n        { type: NgModule, args: [{\n                    exports: [MatPseudoCheckbox],\n                    declarations: [MatPseudoCheckbox]\n                },] },\n    ];\n    return MatPseudoCheckboxModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@docs-private\n */\nvar  /**\n * \\@docs-private\n */\nMatOptgroupBase = /** @class */ (function () {\n    function MatOptgroupBase() {\n    }\n    return MatOptgroupBase;\n}());\nvar /** @type {?} */ _MatOptgroupMixinBase = mixinDisabled(MatOptgroupBase);\n// Counter for unique group ids.\nvar /** @type {?} */ _uniqueOptgroupIdCounter = 0;\n/**\n * Component that is used to group instances of `mat-option`.\n */\nvar MatOptgroup = /** @class */ (function (_super) {\n    __extends(MatOptgroup, _super);\n    function MatOptgroup() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Unique id for the underlying label.\n         */\n        _this._labelId = \"mat-optgroup-label-\" + _uniqueOptgroupIdCounter++;\n        return _this;\n    }\n    MatOptgroup.decorators = [\n        { type: Component, args: [{selector: 'mat-optgroup',\n                    exportAs: 'matOptgroup',\n                    template: \"<label class=\\\"mat-optgroup-label\\\" [id]=\\\"_labelId\\\">{{ label }}</label><ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\",\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    inputs: ['disabled'],\n                    styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\"],\n                    host: {\n                        'class': 'mat-optgroup',\n                        'role': 'group',\n                        '[class.mat-optgroup-disabled]': 'disabled',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '[attr.aria-labelledby]': '_labelId',\n                    }\n                },] },\n    ];\n    /** @nocollapse */\n    MatOptgroup.propDecorators = {\n        \"label\": [{ type: Input },],\n    };\n    return MatOptgroup;\n}(_MatOptgroupMixinBase));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nvar /** @type {?} */ _uniqueIdCounter = 0;\n/**\n * Event object emitted by MatOption when selected or deselected.\n */\nvar  /**\n * Event object emitted by MatOption when selected or deselected.\n */\nMatOptionSelectionChange = /** @class */ (function () {\n    function MatOptionSelectionChange(source, isUserInput) {\n        if (isUserInput === void 0) { isUserInput = false; }\n        this.source = source;\n        this.isUserInput = isUserInput;\n    }\n    return MatOptionSelectionChange;\n}());\n/**\n * Injection token used to provide the parent component to options.\n */\nvar /** @type {?} */ MAT_OPTION_PARENT_COMPONENT = new InjectionToken('MAT_OPTION_PARENT_COMPONENT');\n/**\n * Single option inside of a `<mat-select>` element.\n */\nvar MatOption = /** @class */ (function () {\n    function MatOption(_element, _changeDetectorRef, _parent, group) {\n        this._element = _element;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._parent = _parent;\n        this.group = group;\n        this._selected = false;\n        this._active = false;\n        this._disabled = false;\n        this._id = \"mat-option-\" + _uniqueIdCounter++;\n        this._mostRecentViewValue = '';\n        /**\n         * Event emitted when the option is selected or deselected.\n         */\n        this.onSelectionChange = new EventEmitter();\n        /**\n         * Emits when the state of the option changes and any parents have to be notified.\n         */\n        this._stateChanges = new Subject();\n    }\n    Object.defineProperty(MatOption.prototype, \"multiple\", {\n        /** Whether the wrapping component is in multiple selection mode. */\n        get: /**\n         * Whether the wrapping component is in multiple selection mode.\n         * @return {?}\n         */\n        function () { return this._parent && this._parent.multiple; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatOption.prototype, \"id\", {\n        /** The unique ID of the option. */\n        get: /**\n         * The unique ID of the option.\n         * @return {?}\n         */\n        function () { return this._id; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatOption.prototype, \"selected\", {\n        /** Whether or not the option is currently selected. */\n        get: /**\n         * Whether or not the option is currently selected.\n         * @return {?}\n         */\n        function () { return this._selected; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatOption.prototype, \"disabled\", {\n        get: /**\n         * Whether the option is disabled.\n         * @return {?}\n         */\n        function () { return (this.group && this.group.disabled) || this._disabled; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this._disabled = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatOption.prototype, \"disableRipple\", {\n        /** Whether ripples for the option are disabled. */\n        get: /**\n         * Whether ripples for the option are disabled.\n         * @return {?}\n         */\n        function () { return this._parent && this._parent.disableRipple; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatOption.prototype, \"active\", {\n        /**\n         * Whether or not the option is currently active and ready to be selected.\n         * An active option displays styles as if it is focused, but the\n         * focus is actually retained somewhere else. This comes in handy\n         * for components like autocomplete where focus must remain on the input.\n         */\n        get: /**\n         * Whether or not the option is currently active and ready to be selected.\n         * An active option displays styles as if it is focused, but the\n         * focus is actually retained somewhere else. This comes in handy\n         * for components like autocomplete where focus must remain on the input.\n         * @return {?}\n         */\n        function () {\n            return this._active;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatOption.prototype, \"viewValue\", {\n        /**\n         * The displayed value of the option. It is necessary to show the selected option in the\n         * select's trigger.\n         */\n        get: /**\n         * The displayed value of the option. It is necessary to show the selected option in the\n         * select's trigger.\n         * @return {?}\n         */\n        function () {\n            // TODO(kara): Add input property alternative for node envs.\n            return (this._getHostElement().textContent || '').trim();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** Selects the option. */\n    /**\n     * Selects the option.\n     * @return {?}\n     */\n    MatOption.prototype.select = /**\n     * Selects the option.\n     * @return {?}\n     */\n    function () {\n        if (!this._selected) {\n            this._selected = true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    };\n    /** Deselects the option. */\n    /**\n     * Deselects the option.\n     * @return {?}\n     */\n    MatOption.prototype.deselect = /**\n     * Deselects the option.\n     * @return {?}\n     */\n    function () {\n        if (this._selected) {\n            this._selected = false;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    };\n    /** Sets focus onto this option. */\n    /**\n     * Sets focus onto this option.\n     * @return {?}\n     */\n    MatOption.prototype.focus = /**\n     * Sets focus onto this option.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ element = this._getHostElement();\n        if (typeof element.focus === 'function') {\n            element.focus();\n        }\n    };\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     * @return {?}\n     */\n    MatOption.prototype.setActiveStyles = /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     * @return {?}\n     */\n    function () {\n        if (!this._active) {\n            this._active = true;\n            this._changeDetectorRef.markForCheck();\n        }\n    };\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     * @return {?}\n     */\n    MatOption.prototype.setInactiveStyles = /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     * @return {?}\n     */\n    function () {\n        if (this._active) {\n            this._active = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    };\n    /** Gets the label to be used when determining whether the option should be focused. */\n    /**\n     * Gets the label to be used when determining whether the option should be focused.\n     * @return {?}\n     */\n    MatOption.prototype.getLabel = /**\n     * Gets the label to be used when determining whether the option should be focused.\n     * @return {?}\n     */\n    function () {\n        return this.viewValue;\n    };\n    /** Ensures the option is selected when activated from the keyboard. */\n    /**\n     * Ensures the option is selected when activated from the keyboard.\n     * @param {?} event\n     * @return {?}\n     */\n    MatOption.prototype._handleKeydown = /**\n     * Ensures the option is selected when activated from the keyboard.\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        if (event.keyCode === ENTER || event.keyCode === SPACE) {\n            this._selectViaInteraction();\n            // Prevent the page from scrolling down and form submits.\n            event.preventDefault();\n        }\n    };\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     */\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     * @return {?}\n     */\n    MatOption.prototype._selectViaInteraction = /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     * @return {?}\n     */\n    function () {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent(true);\n        }\n    };\n    /** Returns the correct tabindex for the option depending on disabled state. */\n    /**\n     * Returns the correct tabindex for the option depending on disabled state.\n     * @return {?}\n     */\n    MatOption.prototype._getTabIndex = /**\n     * Returns the correct tabindex for the option depending on disabled state.\n     * @return {?}\n     */\n    function () {\n        return this.disabled ? '-1' : '0';\n    };\n    /** Gets the host DOM element. */\n    /**\n     * Gets the host DOM element.\n     * @return {?}\n     */\n    MatOption.prototype._getHostElement = /**\n     * Gets the host DOM element.\n     * @return {?}\n     */\n    function () {\n        return this._element.nativeElement;\n    };\n    /**\n     * @return {?}\n     */\n    MatOption.prototype.ngAfterViewChecked = /**\n     * @return {?}\n     */\n    function () {\n        // Since parent components could be using the option's label to display the selected values\n        // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n        // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n        // relatively cheap, however we still limit them only to selected options in order to avoid\n        // hitting the DOM too often.\n        if (this._selected) {\n            var /** @type {?} */ viewValue = this.viewValue;\n            if (viewValue !== this._mostRecentViewValue) {\n                this._mostRecentViewValue = viewValue;\n                this._stateChanges.next();\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatOption.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._stateChanges.complete();\n    };\n    /**\n     * Emits the selection change event.\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n    MatOption.prototype._emitSelectionChangeEvent = /**\n     * Emits the selection change event.\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n    function (isUserInput) {\n        if (isUserInput === void 0) { isUserInput = false; }\n        this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\n    };\n    MatOption.decorators = [\n        { type: Component, args: [{selector: 'mat-option',\n                    exportAs: 'matOption',\n                    host: {\n                        'role': 'option',\n                        '[attr.tabindex]': '_getTabIndex()',\n                        '[class.mat-selected]': 'selected',\n                        '[class.mat-option-multiple]': 'multiple',\n                        '[class.mat-active]': 'active',\n                        '[id]': 'id',\n                        '[attr.aria-selected]': 'selected.toString()',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '[class.mat-option-disabled]': 'disabled',\n                        '(click)': '_selectViaInteraction()',\n                        '(keydown)': '_handleKeydown($event)',\n                        'class': 'mat-option',\n                    },\n                    styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;position:relative;cursor:pointer;outline:0;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}@media screen and (-ms-high-contrast:active){.mat-option{margin:0 1px}.mat-option.mat-active{border:solid 1px currentColor;margin:0}}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}@media screen and (-ms-high-contrast:active){.mat-option-ripple{opacity:.5}}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\"],\n                    template: \"<mat-pseudo-checkbox *ngIf=\\\"multiple\\\" class=\\\"mat-option-pseudo-checkbox\\\" [state]=\\\"selected ? 'checked' : ''\\\" [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox><span class=\\\"mat-option-text\\\"><ng-content></ng-content></span><div class=\\\"mat-option-ripple\\\" mat-ripple [matRippleTrigger]=\\\"_getHostElement()\\\" [matRippleDisabled]=\\\"disabled || disableRipple\\\"></div>\",\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                },] },\n    ];\n    /** @nocollapse */\n    MatOption.ctorParameters = function () { return [\n        { type: ElementRef, },\n        { type: ChangeDetectorRef, },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_OPTION_PARENT_COMPONENT,] },] },\n        { type: MatOptgroup, decorators: [{ type: Optional },] },\n    ]; };\n    MatOption.propDecorators = {\n        \"value\": [{ type: Input },],\n        \"disabled\": [{ type: Input },],\n        \"onSelectionChange\": [{ type: Output },],\n    };\n    return MatOption;\n}());\n/**\n * Counts the amount of option group labels that precede the specified option.\n * \\@docs-private\n * @param {?} optionIndex Index of the option at which to start counting.\n * @param {?} options Flat list of all of the options.\n * @param {?} optionGroups Flat list of all of the option groups.\n * @return {?}\n */\nfunction _countGroupLabelsBeforeOption(optionIndex, options, optionGroups) {\n    if (optionGroups.length) {\n        var /** @type {?} */ optionsArray = options.toArray();\n        var /** @type {?} */ groups = optionGroups.toArray();\n        var /** @type {?} */ groupCounter = 0;\n        for (var /** @type {?} */ i = 0; i < optionIndex + 1; i++) {\n            if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n                groupCounter++;\n            }\n        }\n        return groupCounter;\n    }\n    return 0;\n}\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * \\@docs-private\n * @param {?} optionIndex Index of the option to be scrolled into the view.\n * @param {?} optionHeight Height of the options.\n * @param {?} currentScrollPosition Current scroll position of the panel.\n * @param {?} panelHeight Height of the panel.\n * @return {?}\n */\nfunction _getOptionScrollPosition(optionIndex, optionHeight, currentScrollPosition, panelHeight) {\n    var /** @type {?} */ optionOffset = optionIndex * optionHeight;\n    if (optionOffset < currentScrollPosition) {\n        return optionOffset;\n    }\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n        return Math.max(0, optionOffset - panelHeight + optionHeight);\n    }\n    return currentScrollPosition;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar MatOptionModule = /** @class */ (function () {\n    function MatOptionModule() {\n    }\n    MatOptionModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [MatRippleModule, CommonModule, MatPseudoCheckboxModule],\n                    exports: [MatOption, MatOptgroup],\n                    declarations: [MatOption, MatOptgroup]\n                },] },\n    ];\n    return MatOptionModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * InjectionToken that can be used to specify the global label options.\n */\nvar /** @type {?} */ MAT_LABEL_GLOBAL_OPTIONS = new InjectionToken('mat-label-global-options');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\n */\nvar /** @type {?} */ JAN = 0, /** @type {?} */ FEB = 1, /** @type {?} */ MAR = 2, /** @type {?} */ APR = 3, /** @type {?} */ MAY = 4, /** @type {?} */ JUN = 5, /** @type {?} */ JUL = 6, /** @type {?} */ AUG = 7, /** @type {?} */ SEP = 8, /** @type {?} */\nOCT = 9, /** @type {?} */ NOV = 10, /** @type {?} */ DEC = 11;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nexport { AnimationCurves, AnimationDurations, MatCommonModule, MATERIAL_SANITY_CHECKS, mixinDisabled, mixinColor, mixinDisableRipple, mixinTabIndex, mixinErrorState, mixinInitialized, NativeDateModule, MatNativeDateModule, MAT_DATE_LOCALE, MAT_DATE_LOCALE_FACTORY, MAT_DATE_LOCALE_PROVIDER, DateAdapter, MAT_DATE_FORMATS, NativeDateAdapter, MAT_NATIVE_DATE_FORMATS, ShowOnDirtyErrorStateMatcher, ErrorStateMatcher, MAT_HAMMER_OPTIONS, GestureConfig, MatLine, MatLineSetter, MatLineModule, MatOptionModule, MatOptionSelectionChange, MAT_OPTION_PARENT_COMPONENT, MatOption, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MatOptgroupBase, _MatOptgroupMixinBase, MatOptgroup, MAT_LABEL_GLOBAL_OPTIONS, MatRippleModule, MAT_RIPPLE_GLOBAL_OPTIONS, MatRipple, RippleState, RippleRef, defaultRippleAnimationConfig, RippleRenderer, MatPseudoCheckboxModule, MatPseudoCheckbox, JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC, MATERIAL_SANITY_CHECKS_FACTORY as ɵa1 };\n//# sourceMappingURL=core.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Directive, TemplateRef, ComponentFactoryResolver, ApplicationRef, Injector, ViewContainerRef, Inject, InjectionToken, ChangeDetectionStrategy, Component, ElementRef, ViewEncapsulation, Optional, ContentChild, ContentChildren, EventEmitter, Input, NgZone, Output, ViewChild, Self, NgModule } from '@angular/core';\nimport { TemplatePortal, DomPortalOutlet } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { trigger, state, style, animate, transition, query, group, sequence } from '@angular/animations';\nimport { __extends } from 'tslib';\nimport { FocusMonitor, FocusKeyManager, isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { mixinDisabled, mixinDisableRipple, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { Subject, merge, Subscription, asapScheduler, of } from 'rxjs';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, LEFT_ARROW, RIGHT_ARROW, DOWN_ARROW, UP_ARROW } from '@angular/cdk/keycodes';\nimport { startWith, switchMap, take, delay, filter, takeUntil } from 'rxjs/operators';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Menu content that will be rendered lazily once the menu is opened.\n */\nvar MatMenuContent = /** @class */ (function () {\n    function MatMenuContent(_template, _componentFactoryResolver, _appRef, _injector, _viewContainerRef, _document) {\n        this._template = _template;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._appRef = _appRef;\n        this._injector = _injector;\n        this._viewContainerRef = _viewContainerRef;\n        this._document = _document;\n    }\n    /**\n     * Attaches the content with a particular context.\n     * @docs-private\n     */\n    /**\n     * Attaches the content with a particular context.\n     * \\@docs-private\n     * @param {?=} context\n     * @return {?}\n     */\n    MatMenuContent.prototype.attach = /**\n     * Attaches the content with a particular context.\n     * \\@docs-private\n     * @param {?=} context\n     * @return {?}\n     */\n    function (context) {\n        if (context === void 0) { context = {}; }\n        if (!this._portal) {\n            this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n        }\n        this.detach();\n        if (!this._outlet) {\n            this._outlet = new DomPortalOutlet(this._document.createElement('div'), this._componentFactoryResolver, this._appRef, this._injector);\n        }\n        var /** @type {?} */ element = this._template.elementRef.nativeElement; /** @type {?} */\n        ((\n        // Because we support opening the same menu from different triggers (which in turn have their\n        // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n        // risk it staying attached to a pane that's no longer in the DOM.\n        element.parentNode)).insertBefore(this._outlet.outletElement, element);\n        this._portal.attach(this._outlet, context);\n    };\n    /**\n     * Detaches the content.\n     * @docs-private\n     */\n    /**\n     * Detaches the content.\n     * \\@docs-private\n     * @return {?}\n     */\n    MatMenuContent.prototype.detach = /**\n     * Detaches the content.\n     * \\@docs-private\n     * @return {?}\n     */\n    function () {\n        if (this._portal.isAttached) {\n            this._portal.detach();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatMenuContent.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this._outlet) {\n            this._outlet.dispose();\n        }\n    };\n    MatMenuContent.decorators = [\n        { type: Directive, args: [{\n                    selector: 'ng-template[matMenuContent]'\n                },] },\n    ];\n    /** @nocollapse */\n    MatMenuContent.ctorParameters = function () { return [\n        { type: TemplateRef, },\n        { type: ComponentFactoryResolver, },\n        { type: ApplicationRef, },\n        { type: Injector, },\n        { type: ViewContainerRef, },\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] },] },\n    ]; };\n    return MatMenuContent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Animations used by the mat-menu component.\n * Animation duration and timing values are based on:\n * https://material.io/guidelines/components/menus.html#menus-usage\n */\nvar /** @type {?} */ matMenuAnimations = {\n    /**\n       * This animation controls the menu panel's entry and exit from the page.\n       *\n       * When the menu panel is added to the DOM, it scales in and fades in its border.\n       *\n       * When the menu panel is removed from the DOM, it simply fades out after a brief\n       * delay to display the ripple.\n       */\n    transformMenu: trigger('transformMenu', [\n        state('void', style({\n            opacity: 0,\n            // This starts off from 0.01, instead of 0, because there's an issue in the Angular animations\n            // as of 4.2, which causes the animation to be skipped if it starts from 0.\n            transform: 'scale(0.01, 0.01)'\n        })),\n        transition('void => enter', sequence([\n            query('.mat-menu-content', style({ opacity: 0 })),\n            animate('100ms linear', style({ opacity: 1, transform: 'scale(1, 0.5)' })),\n            group([\n                query('.mat-menu-content', animate('400ms cubic-bezier(0.55, 0, 0.55, 0.2)', style({ opacity: 1 }))),\n                animate('300ms cubic-bezier(0.25, 0.8, 0.25, 1)', style({ transform: 'scale(1, 1)' })),\n            ])\n        ])),\n        transition('* => void', animate('150ms 50ms linear', style({ opacity: 0 })))\n    ]),\n    /**\n       * This animation fades in the background color and content of the menu panel\n       * after its containing element is scaled in.\n       */\n    fadeInItems: trigger('fadeInItems', [\n        // TODO(crisbeto): this is inside the `transformMenu`\n        // now. Remove next time we do breaking changes.\n        state('showing', style({ opacity: 1 })),\n        transition('void => *', [\n            style({ opacity: 0 }),\n            animate('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n/**\n * @deprecated\n * \\@deletion-target 7.0.0\n */\nvar /** @type {?} */ fadeInItems = matMenuAnimations.fadeInItems;\n/**\n * @deprecated\n * \\@deletion-target 7.0.0\n */\nvar /** @type {?} */ transformMenu = matMenuAnimations.transformMenu;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Throws an exception for the case when menu trigger doesn't have a valid mat-menu instance\n * \\@docs-private\n * @return {?}\n */\nfunction throwMatMenuMissingError() {\n    throw Error(\"mat-menu-trigger: must pass in an mat-menu instance.\\n\\n    Example:\\n      <mat-menu #menu=\\\"matMenu\\\"></mat-menu>\\n      <button [matMenuTriggerFor]=\\\"menu\\\"></button>\");\n}\n/**\n * Throws an exception for the case when menu's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * \\@docs-private\n * @return {?}\n */\nfunction throwMatMenuInvalidPositionX() {\n    throw Error(\"x-position value must be either 'before' or after'.\\n      Example: <mat-menu x-position=\\\"before\\\" #menu=\\\"matMenu\\\"></mat-menu>\");\n}\n/**\n * Throws an exception for the case when menu's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * \\@docs-private\n * @return {?}\n */\nfunction throwMatMenuInvalidPositionY() {\n    throw Error(\"y-position value must be either 'above' or below'.\\n      Example: <mat-menu y-position=\\\"above\\\" #menu=\\\"matMenu\\\"></mat-menu>\");\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Injection token used to provide the parent menu to menu-specific components.\n * \\@docs-private\n */\nvar /** @type {?} */ MAT_MENU_PANEL = new InjectionToken('MAT_MENU_PANEL');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@docs-private\n */\nvar  /**\n * \\@docs-private\n */\nMatMenuItemBase = /** @class */ (function () {\n    function MatMenuItemBase() {\n    }\n    return MatMenuItemBase;\n}());\nvar /** @type {?} */ _MatMenuItemMixinBase = mixinDisableRipple(mixinDisabled(MatMenuItemBase));\n/**\n * This directive is intended to be used inside an mat-menu tag.\n * It exists mostly to set the role attribute.\n */\nvar MatMenuItem = /** @class */ (function (_super) {\n    __extends(MatMenuItem, _super);\n    function MatMenuItem(_elementRef, document, _focusMonitor, _parentMenu) {\n        var _this = \n        // @deletion-target 7.0.0 make `_focusMonitor` and `document` required params.\n        _super.call(this) || this;\n        _this._elementRef = _elementRef;\n        _this._focusMonitor = _focusMonitor;\n        _this._parentMenu = _parentMenu;\n        /**\n         * Stream that emits when the menu item is hovered.\n         */\n        _this._hovered = new Subject();\n        /**\n         * Whether the menu item is highlighted.\n         */\n        _this._highlighted = false;\n        /**\n         * Whether the menu item acts as a trigger for a sub-menu.\n         */\n        _this._triggersSubmenu = false;\n        if (_focusMonitor) {\n            // Start monitoring the element so it gets the appropriate focused classes. We want\n            // to show the focus style for menu items only when the focus was not caused by a\n            // mouse or touch interaction.\n            _focusMonitor.monitor(_this._getHostElement(), false);\n        }\n        if (_parentMenu && _parentMenu.addItem) {\n            _parentMenu.addItem(_this);\n        }\n        _this._document = document;\n        return _this;\n    }\n    /** Focuses the menu item. */\n    /**\n     * Focuses the menu item.\n     * @param {?=} origin\n     * @return {?}\n     */\n    MatMenuItem.prototype.focus = /**\n     * Focuses the menu item.\n     * @param {?=} origin\n     * @return {?}\n     */\n    function (origin) {\n        if (origin === void 0) { origin = 'program'; }\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._getHostElement(), origin);\n        }\n        else {\n            this._getHostElement().focus();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatMenuItem.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this._focusMonitor) {\n            this._focusMonitor.stopMonitoring(this._getHostElement());\n        }\n        if (this._parentMenu && this._parentMenu.removeItem) {\n            this._parentMenu.removeItem(this);\n        }\n        this._hovered.complete();\n    };\n    /** Used to set the `tabindex`. */\n    /**\n     * Used to set the `tabindex`.\n     * @return {?}\n     */\n    MatMenuItem.prototype._getTabIndex = /**\n     * Used to set the `tabindex`.\n     * @return {?}\n     */\n    function () {\n        return this.disabled ? '-1' : '0';\n    };\n    /** Returns the host DOM element. */\n    /**\n     * Returns the host DOM element.\n     * @return {?}\n     */\n    MatMenuItem.prototype._getHostElement = /**\n     * Returns the host DOM element.\n     * @return {?}\n     */\n    function () {\n        return this._elementRef.nativeElement;\n    };\n    /** Prevents the default element actions if it is disabled. */\n    /**\n     * Prevents the default element actions if it is disabled.\n     * @param {?} event\n     * @return {?}\n     */\n    MatMenuItem.prototype._checkDisabled = /**\n     * Prevents the default element actions if it is disabled.\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n    /** Emits to the hover stream. */\n    /**\n     * Emits to the hover stream.\n     * @return {?}\n     */\n    MatMenuItem.prototype._handleMouseEnter = /**\n     * Emits to the hover stream.\n     * @return {?}\n     */\n    function () {\n        this._hovered.next(this);\n    };\n    /** Gets the label to be used when determining whether the option should be focused. */\n    /**\n     * Gets the label to be used when determining whether the option should be focused.\n     * @return {?}\n     */\n    MatMenuItem.prototype.getLabel = /**\n     * Gets the label to be used when determining whether the option should be focused.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ element = this._elementRef.nativeElement;\n        var /** @type {?} */ textNodeType = this._document ? this._document.TEXT_NODE : 3;\n        var /** @type {?} */ output = '';\n        if (element.childNodes) {\n            var /** @type {?} */ length_1 = element.childNodes.length;\n            // Go through all the top-level text nodes and extract their text.\n            // We skip anything that's not a text node to prevent the text from\n            // being thrown off by something like an icon.\n            for (var /** @type {?} */ i = 0; i < length_1; i++) {\n                if (element.childNodes[i].nodeType === textNodeType) {\n                    output += element.childNodes[i].textContent;\n                }\n            }\n        }\n        return output.trim();\n    };\n    MatMenuItem.decorators = [\n        { type: Component, args: [{selector: '[mat-menu-item]',\n                    exportAs: 'matMenuItem',\n                    inputs: ['disabled', 'disableRipple'],\n                    host: {\n                        'role': 'menuitem',\n                        'class': 'mat-menu-item',\n                        '[class.mat-menu-item-highlighted]': '_highlighted',\n                        '[class.mat-menu-item-submenu-trigger]': '_triggersSubmenu',\n                        '[attr.tabindex]': '_getTabIndex()',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '[attr.disabled]': 'disabled || null',\n                        '(click)': '_checkDisabled($event)',\n                        '(mouseenter)': '_handleMouseEnter()',\n                    },\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    template: \"<ng-content></ng-content><div class=\\\"mat-menu-ripple\\\" matRipple [matRippleDisabled]=\\\"disableRipple || disabled\\\" [matRippleTrigger]=\\\"_getHostElement()\\\"></div>\",\n                },] },\n    ];\n    /** @nocollapse */\n    MatMenuItem.ctorParameters = function () { return [\n        { type: ElementRef, },\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] },] },\n        { type: FocusMonitor, },\n        { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_PANEL,] }, { type: Optional },] },\n    ]; };\n    return MatMenuItem;\n}(_MatMenuItemMixinBase));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Injection token to be used to override the default options for `mat-menu`.\n */\nvar /** @type {?} */ MAT_MENU_DEFAULT_OPTIONS = new InjectionToken('mat-menu-default-options', {\n    providedIn: 'root',\n    factory: MAT_MENU_DEFAULT_OPTIONS_FACTORY\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_MENU_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        overlapTrigger: true,\n        xPosition: 'after',\n        yPosition: 'below',\n        backdropClass: 'cdk-overlay-transparent-backdrop',\n    };\n}\n/**\n * Start elevation for the menu panel.\n * \\@docs-private\n */\nvar /** @type {?} */ MAT_MENU_BASE_ELEVATION = 2;\nvar MatMenu = /** @class */ (function () {\n    function MatMenu(_elementRef, _ngZone, _defaultOptions) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._defaultOptions = _defaultOptions;\n        this._xPosition = this._defaultOptions.xPosition;\n        this._yPosition = this._defaultOptions.yPosition;\n        /**\n         * Menu items inside the current menu.\n         */\n        this._items = [];\n        /**\n         * Emits whenever the amount of menu items changes.\n         */\n        this._itemChanges = new Subject();\n        /**\n         * Subscription to tab events on the menu panel\n         */\n        this._tabSubscription = Subscription.EMPTY;\n        /**\n         * Config object to be passed into the menu's ngClass\n         */\n        this._classList = {};\n        /**\n         * Current state of the panel animation.\n         */\n        this._panelAnimationState = 'void';\n        /**\n         * Emits whenever an animation on the menu completes.\n         */\n        this._animationDone = new Subject();\n        /**\n         * Class to be added to the backdrop element.\n         */\n        this.backdropClass = this._defaultOptions.backdropClass;\n        this._overlapTrigger = this._defaultOptions.overlapTrigger;\n        this._hasBackdrop = this._defaultOptions.hasBackdrop;\n        /**\n         * Event emitted when the menu is closed.\n         */\n        this.closed = new EventEmitter();\n        /**\n         * Event emitted when the menu is closed.\n         * @deprecated Switch to `closed` instead\n         * \\@deletion-target 7.0.0\n         */\n        this.close = this.closed;\n    }\n    Object.defineProperty(MatMenu.prototype, \"xPosition\", {\n        get: /**\n         * Position of the menu in the X axis.\n         * @return {?}\n         */\n        function () { return this._xPosition; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            if (value !== 'before' && value !== 'after') {\n                throwMatMenuInvalidPositionX();\n            }\n            this._xPosition = value;\n            this.setPositionClasses();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatMenu.prototype, \"yPosition\", {\n        get: /**\n         * Position of the menu in the Y axis.\n         * @return {?}\n         */\n        function () { return this._yPosition; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            if (value !== 'above' && value !== 'below') {\n                throwMatMenuInvalidPositionY();\n            }\n            this._yPosition = value;\n            this.setPositionClasses();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatMenu.prototype, \"overlapTrigger\", {\n        get: /**\n         * Whether the menu should overlap its trigger.\n         * @return {?}\n         */\n        function () { return this._overlapTrigger; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._overlapTrigger = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatMenu.prototype, \"hasBackdrop\", {\n        get: /**\n         * Whether the menu has a backdrop.\n         * @return {?}\n         */\n        function () { return this._hasBackdrop; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._hasBackdrop = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatMenu.prototype, \"panelClass\", {\n        set: /**\n         * This method takes classes set on the host mat-menu element and applies them on the\n         * menu template that displays in the overlay container.  Otherwise, it's difficult\n         * to style the containing menu from outside the component.\n         * @param {?} classes list of class names\n         * @return {?}\n         */\n        function (classes) {\n            if (classes && classes.length) {\n                this._classList = classes.split(' ').reduce(function (obj, className) {\n                    obj[className] = true;\n                    return obj;\n                }, {});\n                this._elementRef.nativeElement.className = '';\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatMenu.prototype, \"classList\", {\n        get: /**\n         * This method takes classes set on the host mat-menu element and applies them on the\n         * menu template that displays in the overlay container.  Otherwise, it's difficult\n         * to style the containing menu from outside the component.\n         * @deprecated Use `panelClass` instead.\n         * \\@deletion-target 7.0.0\n         * @return {?}\n         */\n        function () { return this.panelClass; },\n        set: /**\n         * @param {?} classes\n         * @return {?}\n         */\n        function (classes) { this.panelClass = classes; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MatMenu.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        this.setPositionClasses();\n    };\n    /**\n     * @return {?}\n     */\n    MatMenu.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._keyManager = new FocusKeyManager(this._items).withWrap().withTypeAhead();\n        this._tabSubscription = this._keyManager.tabOut.subscribe(function () { return _this.closed.emit('tab'); });\n    };\n    /**\n     * @return {?}\n     */\n    MatMenu.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._tabSubscription.unsubscribe();\n        this.closed.complete();\n    };\n    /** Stream that emits whenever the hovered menu item changes. */\n    /**\n     * Stream that emits whenever the hovered menu item changes.\n     * @return {?}\n     */\n    MatMenu.prototype._hovered = /**\n     * Stream that emits whenever the hovered menu item changes.\n     * @return {?}\n     */\n    function () {\n        return this._itemChanges.pipe(startWith(this._items), switchMap(function (items) { return merge.apply(void 0, items.map(function (item) { return item._hovered; })); }));\n    };\n    /** Handle a keyboard event from the menu, delegating to the appropriate action. */\n    /**\n     * Handle a keyboard event from the menu, delegating to the appropriate action.\n     * @param {?} event\n     * @return {?}\n     */\n    MatMenu.prototype._handleKeydown = /**\n     * Handle a keyboard event from the menu, delegating to the appropriate action.\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        var /** @type {?} */ keyCode = event.keyCode;\n        switch (keyCode) {\n            case ESCAPE:\n                this.closed.emit('keydown');\n                event.stopPropagation();\n                break;\n            case LEFT_ARROW:\n                if (this.parentMenu && this.direction === 'ltr') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            case RIGHT_ARROW:\n                if (this.parentMenu && this.direction === 'rtl') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            default:\n                if (keyCode === UP_ARROW || keyCode === DOWN_ARROW) {\n                    this._keyManager.setFocusOrigin('keyboard');\n                }\n                this._keyManager.onKeydown(event);\n        }\n    };\n    /**\n     * Focus the first item in the menu.\n     * @param origin Action from which the focus originated. Used to set the correct styling.\n     */\n    /**\n     * Focus the first item in the menu.\n     * @param {?=} origin Action from which the focus originated. Used to set the correct styling.\n     * @return {?}\n     */\n    MatMenu.prototype.focusFirstItem = /**\n     * Focus the first item in the menu.\n     * @param {?=} origin Action from which the focus originated. Used to set the correct styling.\n     * @return {?}\n     */\n    function (origin) {\n        var _this = this;\n        if (origin === void 0) { origin = 'program'; }\n        // When the content is rendered lazily, it takes a bit before the items are inside the DOM.\n        if (this.lazyContent) {\n            this._ngZone.onStable.asObservable()\n                .pipe(take(1))\n                .subscribe(function () { return _this._keyManager.setFocusOrigin(origin).setFirstItemActive(); });\n        }\n        else {\n            this._keyManager.setFocusOrigin(origin).setFirstItemActive();\n        }\n    };\n    /**\n     * Resets the active item in the menu. This is used when the menu is opened, allowing\n     * the user to start from the first option when pressing the down arrow.\n     */\n    /**\n     * Resets the active item in the menu. This is used when the menu is opened, allowing\n     * the user to start from the first option when pressing the down arrow.\n     * @return {?}\n     */\n    MatMenu.prototype.resetActiveItem = /**\n     * Resets the active item in the menu. This is used when the menu is opened, allowing\n     * the user to start from the first option when pressing the down arrow.\n     * @return {?}\n     */\n    function () {\n        this._keyManager.setActiveItem(-1);\n    };\n    /**\n     * Sets the menu panel elevation.\n     * @param depth Number of parent menus that come before the menu.\n     */\n    /**\n     * Sets the menu panel elevation.\n     * @param {?} depth Number of parent menus that come before the menu.\n     * @return {?}\n     */\n    MatMenu.prototype.setElevation = /**\n     * Sets the menu panel elevation.\n     * @param {?} depth Number of parent menus that come before the menu.\n     * @return {?}\n     */\n    function (depth) {\n        // The elevation starts at the base and increases by one for each level.\n        var /** @type {?} */ newElevation = \"mat-elevation-z\" + (MAT_MENU_BASE_ELEVATION + depth);\n        var /** @type {?} */ customElevation = Object.keys(this._classList).find(function (c) { return c.startsWith('mat-elevation-z'); });\n        if (!customElevation || customElevation === this._previousElevation) {\n            if (this._previousElevation) {\n                this._classList[this._previousElevation] = false;\n            }\n            this._classList[newElevation] = true;\n            this._previousElevation = newElevation;\n        }\n    };\n    /**\n     * Registers a menu item with the menu.\n     * @docs-private\n     */\n    /**\n     * Registers a menu item with the menu.\n     * \\@docs-private\n     * @param {?} item\n     * @return {?}\n     */\n    MatMenu.prototype.addItem = /**\n     * Registers a menu item with the menu.\n     * \\@docs-private\n     * @param {?} item\n     * @return {?}\n     */\n    function (item) {\n        // We register the items through this method, rather than picking them up through\n        // `ContentChildren`, because we need the items to be picked up by their closest\n        // `mat-menu` ancestor. If we used `@ContentChildren(MatMenuItem, {descendants: true})`,\n        // all descendant items will bleed into the top-level menu in the case where the consumer\n        // has `mat-menu` instances nested inside each other.\n        if (this._items.indexOf(item) === -1) {\n            this._items.push(item);\n            this._itemChanges.next(this._items);\n        }\n    };\n    /**\n     * Removes an item from the menu.\n     * @docs-private\n     */\n    /**\n     * Removes an item from the menu.\n     * \\@docs-private\n     * @param {?} item\n     * @return {?}\n     */\n    MatMenu.prototype.removeItem = /**\n     * Removes an item from the menu.\n     * \\@docs-private\n     * @param {?} item\n     * @return {?}\n     */\n    function (item) {\n        var /** @type {?} */ index = this._items.indexOf(item);\n        if (this._items.indexOf(item) > -1) {\n            this._items.splice(index, 1);\n            this._itemChanges.next(this._items);\n        }\n    };\n    /**\n     * Adds classes to the menu panel based on its position. Can be used by\n     * consumers to add specific styling based on the position.\n     * @param posX Position of the menu along the x axis.\n     * @param posY Position of the menu along the y axis.\n     * @docs-private\n     */\n    /**\n     * Adds classes to the menu panel based on its position. Can be used by\n     * consumers to add specific styling based on the position.\n     * \\@docs-private\n     * @param {?=} posX Position of the menu along the x axis.\n     * @param {?=} posY Position of the menu along the y axis.\n     * @return {?}\n     */\n    MatMenu.prototype.setPositionClasses = /**\n     * Adds classes to the menu panel based on its position. Can be used by\n     * consumers to add specific styling based on the position.\n     * \\@docs-private\n     * @param {?=} posX Position of the menu along the x axis.\n     * @param {?=} posY Position of the menu along the y axis.\n     * @return {?}\n     */\n    function (posX, posY) {\n        if (posX === void 0) { posX = this.xPosition; }\n        if (posY === void 0) { posY = this.yPosition; }\n        var /** @type {?} */ classes = this._classList;\n        classes['mat-menu-before'] = posX === 'before';\n        classes['mat-menu-after'] = posX === 'after';\n        classes['mat-menu-above'] = posY === 'above';\n        classes['mat-menu-below'] = posY === 'below';\n    };\n    /** Starts the enter animation. */\n    /**\n     * Starts the enter animation.\n     * @return {?}\n     */\n    MatMenu.prototype._startAnimation = /**\n     * Starts the enter animation.\n     * @return {?}\n     */\n    function () {\n        // @deletion-target 7.0.0 Combine with _resetAnimation.\n        this._panelAnimationState = 'enter';\n    };\n    /** Resets the panel animation to its initial state. */\n    /**\n     * Resets the panel animation to its initial state.\n     * @return {?}\n     */\n    MatMenu.prototype._resetAnimation = /**\n     * Resets the panel animation to its initial state.\n     * @return {?}\n     */\n    function () {\n        // @deletion-target 7.0.0 Combine with _startAnimation.\n        this._panelAnimationState = 'void';\n    };\n    /** Callback that is invoked when the panel animation completes. */\n    /**\n     * Callback that is invoked when the panel animation completes.\n     * @param {?} event\n     * @return {?}\n     */\n    MatMenu.prototype._onAnimationDone = /**\n     * Callback that is invoked when the panel animation completes.\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        this._animationDone.next(event);\n        this._isAnimating = false;\n        // Scroll the content element to the top once the animation is done. This is necessary, because\n        // we move focus to the first item while it's still being animated, which can throw the browser\n        // off when it determines the scroll position. Alternatively we can move focus when the\n        // animation is done, however moving focus asynchronously will interrupt screen readers\n        // which are in the process of reading out the menu already. We take the `element` from\n        // the `event` since we can't use a `ViewChild` to access the pane.\n        if (event.toState === 'enter' && this._keyManager.activeItemIndex === 0) {\n            event.element.scrollTop = 0;\n        }\n    };\n    MatMenu.decorators = [\n        { type: Component, args: [{selector: 'mat-menu',\n                    template: \"<ng-template><div class=\\\"mat-menu-panel\\\" [ngClass]=\\\"_classList\\\" (keydown)=\\\"_handleKeydown($event)\\\" (click)=\\\"closed.emit('click')\\\" [@transformMenu]=\\\"_panelAnimationState\\\" (@transformMenu.start)=\\\"_isAnimating = true\\\" (@transformMenu.done)=\\\"_onAnimationDone($event)\\\" tabindex=\\\"-1\\\" role=\\\"menu\\\"><div class=\\\"mat-menu-content\\\"><ng-content></ng-content></div></div></ng-template>\",\n                    styles: [\".mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:2px;outline:0}.mat-menu-panel:not([class*=mat-elevation-z]){box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}@media screen and (-ms-high-contrast:active){.mat-menu-panel{outline:solid 1px}}.mat-menu-content{padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}.mat-menu-item-submenu-trigger{padding-right:32px}.mat-menu-item-submenu-trigger::after{width:0;height:0;border-style:solid;border-width:5px 0 5px 5px;border-color:transparent transparent transparent currentColor;content:'';display:inline-block;position:absolute;top:50%;right:16px;transform:translateY(-50%)}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}[dir=rtl] .mat-menu-item-submenu-trigger::after{right:auto;left:16px;transform:rotateY(180deg) translateY(-50%)}.mat-menu-panel.ng-animating .mat-menu-item-submenu-trigger{pointer-events:none}button.mat-menu-item{width:100%}.mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\"],\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    exportAs: 'matMenu',\n                    animations: [\n                        matMenuAnimations.transformMenu,\n                        matMenuAnimations.fadeInItems\n                    ],\n                    providers: [\n                        { provide: MAT_MENU_PANEL, useExisting: MatMenu }\n                    ]\n                },] },\n    ];\n    /** @nocollapse */\n    MatMenu.ctorParameters = function () { return [\n        { type: ElementRef, },\n        { type: NgZone, },\n        { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_DEFAULT_OPTIONS,] },] },\n    ]; };\n    MatMenu.propDecorators = {\n        \"backdropClass\": [{ type: Input },],\n        \"xPosition\": [{ type: Input },],\n        \"yPosition\": [{ type: Input },],\n        \"templateRef\": [{ type: ViewChild, args: [TemplateRef,] },],\n        \"items\": [{ type: ContentChildren, args: [MatMenuItem,] },],\n        \"lazyContent\": [{ type: ContentChild, args: [MatMenuContent,] },],\n        \"overlapTrigger\": [{ type: Input },],\n        \"hasBackdrop\": [{ type: Input },],\n        \"panelClass\": [{ type: Input, args: ['class',] },],\n        \"classList\": [{ type: Input },],\n        \"closed\": [{ type: Output },],\n        \"close\": [{ type: Output },],\n    };\n    return MatMenu;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Injection token that determines the scroll handling while the menu is open.\n */\nvar /** @type {?} */ MAT_MENU_SCROLL_STRATEGY = new InjectionToken('mat-menu-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_MENU_SCROLL_STRATEGY_FACTORY(overlay) {\n    return function () { return overlay.scrollStrategies.reposition(); };\n}\n/**\n * \\@docs-private\n */\nvar /** @type {?} */ MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_MENU_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_MENU_SCROLL_STRATEGY_FACTORY,\n};\n/**\n * Default top padding of the menu panel.\n */\nvar /** @type {?} */ MENU_PANEL_TOP_PADDING = 8;\n/**\n * This directive is intended to be used in conjunction with an mat-menu tag.  It is\n * responsible for toggling the display of the provided menu instance.\n */\nvar MatMenuTrigger = /** @class */ (function () {\n    function MatMenuTrigger(_overlay, _element, _viewContainerRef, _scrollStrategy, _parentMenu, _menuItemInstance, _dir, _focusMonitor) {\n        this._overlay = _overlay;\n        this._element = _element;\n        this._viewContainerRef = _viewContainerRef;\n        this._scrollStrategy = _scrollStrategy;\n        this._parentMenu = _parentMenu;\n        this._menuItemInstance = _menuItemInstance;\n        this._dir = _dir;\n        this._focusMonitor = _focusMonitor;\n        this._overlayRef = null;\n        this._menuOpen = false;\n        this._closeSubscription = Subscription.EMPTY;\n        this._hoverSubscription = Subscription.EMPTY;\n        this._openedByMouse = false;\n        /**\n         * Event emitted when the associated menu is opened.\n         */\n        this.menuOpened = new EventEmitter();\n        /**\n         * Event emitted when the associated menu is opened.\n         * @deprecated Switch to `menuOpened` instead\n         * \\@deletion-target 7.0.0\n         */\n        this.onMenuOpen = this.menuOpened;\n        /**\n         * Event emitted when the associated menu is closed.\n         */\n        this.menuClosed = new EventEmitter();\n        /**\n         * Event emitted when the associated menu is closed.\n         * @deprecated Switch to `menuClosed` instead\n         * \\@deletion-target 7.0.0\n         */\n        this.onMenuClose = this.menuClosed;\n        if (_menuItemInstance) {\n            _menuItemInstance._triggersSubmenu = this.triggersSubmenu();\n        }\n    }\n    Object.defineProperty(MatMenuTrigger.prototype, \"_deprecatedMatMenuTriggerFor\", {\n        get: /**\n         * @deprecated\n         * \\@deletion-target 7.0.0\n         * @return {?}\n         */\n        function () {\n            return this.menu;\n        },\n        set: /**\n         * @param {?} v\n         * @return {?}\n         */\n        function (v) {\n            this.menu = v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MatMenuTrigger.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._checkMenu();\n        this.menu.close.subscribe(function (reason) {\n            _this._destroyMenu();\n            // If a click closed the menu, we should close the entire chain of nested menus.\n            if ((reason === 'click' || reason === 'tab') && _this._parentMenu) {\n                _this._parentMenu.closed.emit(reason);\n            }\n        });\n        this._handleHover();\n    };\n    /**\n     * @return {?}\n     */\n    MatMenuTrigger.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n        this._cleanUpSubscriptions();\n    };\n    Object.defineProperty(MatMenuTrigger.prototype, \"menuOpen\", {\n        /** Whether the menu is open. */\n        get: /**\n         * Whether the menu is open.\n         * @return {?}\n         */\n        function () {\n            return this._menuOpen;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatMenuTrigger.prototype, \"dir\", {\n        /** The text direction of the containing app. */\n        get: /**\n         * The text direction of the containing app.\n         * @return {?}\n         */\n        function () {\n            return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** Whether the menu triggers a sub-menu or a top-level one. */\n    /**\n     * Whether the menu triggers a sub-menu or a top-level one.\n     * @return {?}\n     */\n    MatMenuTrigger.prototype.triggersSubmenu = /**\n     * Whether the menu triggers a sub-menu or a top-level one.\n     * @return {?}\n     */\n    function () {\n        return !!(this._menuItemInstance && this._parentMenu);\n    };\n    /** Toggles the menu between the open and closed states. */\n    /**\n     * Toggles the menu between the open and closed states.\n     * @return {?}\n     */\n    MatMenuTrigger.prototype.toggleMenu = /**\n     * Toggles the menu between the open and closed states.\n     * @return {?}\n     */\n    function () {\n        return this._menuOpen ? this.closeMenu() : this.openMenu();\n    };\n    /** Opens the menu. */\n    /**\n     * Opens the menu.\n     * @return {?}\n     */\n    MatMenuTrigger.prototype.openMenu = /**\n     * Opens the menu.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this._menuOpen) {\n            return;\n        }\n        var /** @type {?} */ overlayRef = this._createOverlay();\n        this._setPosition(/** @type {?} */ (overlayRef.getConfig().positionStrategy));\n        overlayRef.attach(this._portal);\n        if (this.menu.lazyContent) {\n            this.menu.lazyContent.attach(this.menuData);\n        }\n        this._closeSubscription = this._menuClosingActions().subscribe(function () { return _this.closeMenu(); });\n        this._initMenu();\n        if (this.menu instanceof MatMenu) {\n            this.menu._startAnimation();\n        }\n    };\n    /** Closes the menu. */\n    /**\n     * Closes the menu.\n     * @return {?}\n     */\n    MatMenuTrigger.prototype.closeMenu = /**\n     * Closes the menu.\n     * @return {?}\n     */\n    function () {\n        this.menu.close.emit();\n    };\n    /**\n     * Focuses the menu trigger.\n     * @param origin Source of the menu trigger's focus.\n     */\n    /**\n     * Focuses the menu trigger.\n     * @param {?=} origin Source of the menu trigger's focus.\n     * @return {?}\n     */\n    MatMenuTrigger.prototype.focus = /**\n     * Focuses the menu trigger.\n     * @param {?=} origin Source of the menu trigger's focus.\n     * @return {?}\n     */\n    function (origin) {\n        if (origin === void 0) { origin = 'program'; }\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._element.nativeElement, origin);\n        }\n        else {\n            this._element.nativeElement.focus();\n        }\n    };\n    /**\n     * Closes the menu and does the necessary cleanup.\n     * @return {?}\n     */\n    MatMenuTrigger.prototype._destroyMenu = /**\n     * Closes the menu and does the necessary cleanup.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (!this._overlayRef || !this.menuOpen) {\n            return;\n        }\n        var /** @type {?} */ menu = this.menu;\n        this._closeSubscription.unsubscribe();\n        this._overlayRef.detach();\n        if (menu instanceof MatMenu) {\n            menu._resetAnimation();\n            if (menu.lazyContent) {\n                // Wait for the exit animation to finish before detaching the content.\n                menu._animationDone\n                    .pipe(filter(function (event) { return event.toState === 'void'; }), take(1))\n                    .subscribe(function () {\n                    /** @type {?} */ ((menu.lazyContent)).detach();\n                    _this._resetMenu();\n                });\n            }\n            else {\n                this._resetMenu();\n            }\n        }\n        else {\n            this._resetMenu();\n            if (menu.lazyContent) {\n                menu.lazyContent.detach();\n            }\n        }\n    };\n    /**\n     * This method sets the menu state to open and focuses the first item if\n     * the menu was opened via the keyboard.\n     * @return {?}\n     */\n    MatMenuTrigger.prototype._initMenu = /**\n     * This method sets the menu state to open and focuses the first item if\n     * the menu was opened via the keyboard.\n     * @return {?}\n     */\n    function () {\n        this.menu.parentMenu = this.triggersSubmenu() ? this._parentMenu : undefined;\n        this.menu.direction = this.dir;\n        this._setMenuElevation();\n        this._setIsMenuOpen(true);\n        this.menu.focusFirstItem(this._openedByMouse ? 'mouse' : 'program');\n    };\n    /**\n     * Updates the menu elevation based on the amount of parent menus that it has.\n     * @return {?}\n     */\n    MatMenuTrigger.prototype._setMenuElevation = /**\n     * Updates the menu elevation based on the amount of parent menus that it has.\n     * @return {?}\n     */\n    function () {\n        if (this.menu.setElevation) {\n            var /** @type {?} */ depth = 0;\n            var /** @type {?} */ parentMenu = this.menu.parentMenu;\n            while (parentMenu) {\n                depth++;\n                parentMenu = parentMenu.parentMenu;\n            }\n            this.menu.setElevation(depth);\n        }\n    };\n    /**\n     * This method resets the menu when it's closed, most importantly restoring\n     * focus to the menu trigger if the menu was opened via the keyboard.\n     * @return {?}\n     */\n    MatMenuTrigger.prototype._resetMenu = /**\n     * This method resets the menu when it's closed, most importantly restoring\n     * focus to the menu trigger if the menu was opened via the keyboard.\n     * @return {?}\n     */\n    function () {\n        this._setIsMenuOpen(false);\n        // We should reset focus if the user is navigating using a keyboard or\n        // if we have a top-level trigger which might cause focus to be lost\n        // when clicking on the backdrop.\n        if (!this._openedByMouse) {\n            // Note that the focus style will show up both for `program` and\n            // `keyboard` so we don't have to specify which one it is.\n            this.focus();\n        }\n        else if (!this.triggersSubmenu()) {\n            this.focus('mouse');\n        }\n        this._openedByMouse = false;\n    };\n    /**\n     * @param {?} isOpen\n     * @return {?}\n     */\n    MatMenuTrigger.prototype._setIsMenuOpen = /**\n     * @param {?} isOpen\n     * @return {?}\n     */\n    function (isOpen) {\n        this._menuOpen = isOpen;\n        this._menuOpen ? this.menuOpened.emit() : this.menuClosed.emit();\n        if (this.triggersSubmenu()) {\n            this._menuItemInstance._highlighted = isOpen;\n        }\n    };\n    /**\n     * This method checks that a valid instance of MatMenu has been passed into\n     * matMenuTriggerFor. If not, an exception is thrown.\n     * @return {?}\n     */\n    MatMenuTrigger.prototype._checkMenu = /**\n     * This method checks that a valid instance of MatMenu has been passed into\n     * matMenuTriggerFor. If not, an exception is thrown.\n     * @return {?}\n     */\n    function () {\n        if (!this.menu) {\n            throwMatMenuMissingError();\n        }\n    };\n    /**\n     * This method creates the overlay from the provided menu's template and saves its\n     * OverlayRef so that it can be attached to the DOM when openMenu is called.\n     * @return {?}\n     */\n    MatMenuTrigger.prototype._createOverlay = /**\n     * This method creates the overlay from the provided menu's template and saves its\n     * OverlayRef so that it can be attached to the DOM when openMenu is called.\n     * @return {?}\n     */\n    function () {\n        if (!this._overlayRef) {\n            this._portal = new TemplatePortal(this.menu.templateRef, this._viewContainerRef);\n            var /** @type {?} */ config = this._getOverlayConfig();\n            this._subscribeToPositions(/** @type {?} */ (config.positionStrategy));\n            this._overlayRef = this._overlay.create(config);\n        }\n        return this._overlayRef;\n    };\n    /**\n     * This method builds the configuration object needed to create the overlay, the OverlayState.\n     * @return {?} OverlayConfig\n     */\n    MatMenuTrigger.prototype._getOverlayConfig = /**\n     * This method builds the configuration object needed to create the overlay, the OverlayState.\n     * @return {?} OverlayConfig\n     */\n    function () {\n        return new OverlayConfig({\n            positionStrategy: this._overlay.position()\n                .flexibleConnectedTo(this._element)\n                .withTransformOriginOn('.mat-menu-panel'),\n            hasBackdrop: this.menu.hasBackdrop == null ? !this.triggersSubmenu() : this.menu.hasBackdrop,\n            backdropClass: this.menu.backdropClass || 'cdk-overlay-transparent-backdrop',\n            scrollStrategy: this._scrollStrategy(),\n            direction: this._dir\n        });\n    };\n    /**\n     * Listens to changes in the position of the overlay and sets the correct classes\n     * on the menu based on the new position. This ensures the animation origin is always\n     * correct, even if a fallback position is used for the overlay.\n     * @param {?} position\n     * @return {?}\n     */\n    MatMenuTrigger.prototype._subscribeToPositions = /**\n     * Listens to changes in the position of the overlay and sets the correct classes\n     * on the menu based on the new position. This ensures the animation origin is always\n     * correct, even if a fallback position is used for the overlay.\n     * @param {?} position\n     * @return {?}\n     */\n    function (position) {\n        var _this = this;\n        if (this.menu.setPositionClasses) {\n            position.positionChanges.subscribe(function (change) {\n                var /** @type {?} */ posX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n                var /** @type {?} */ posY = change.connectionPair.overlayY === 'top' ? 'below' : 'above'; /** @type {?} */\n                ((_this.menu.setPositionClasses))(posX, posY);\n            });\n        }\n    };\n    /**\n     * Sets the appropriate positions on a position strategy\n     * so the overlay connects with the trigger correctly.\n     * @param {?} positionStrategy Strategy whose position to update.\n     * @return {?}\n     */\n    MatMenuTrigger.prototype._setPosition = /**\n     * Sets the appropriate positions on a position strategy\n     * so the overlay connects with the trigger correctly.\n     * @param {?} positionStrategy Strategy whose position to update.\n     * @return {?}\n     */\n    function (positionStrategy) {\n        var _a = this.menu.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'], originX = _a[0], originFallbackX = _a[1];\n        var _b = this.menu.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'], overlayY = _b[0], overlayFallbackY = _b[1];\n        var _c = [overlayY, overlayFallbackY], originY = _c[0], originFallbackY = _c[1];\n        var _d = [originX, originFallbackX], overlayX = _d[0], overlayFallbackX = _d[1];\n        var /** @type {?} */ offsetY = 0;\n        if (this.triggersSubmenu()) {\n            // When the menu is a sub-menu, it should always align itself\n            // to the edges of the trigger, instead of overlapping it.\n            overlayFallbackX = originX = this.menu.xPosition === 'before' ? 'start' : 'end';\n            originFallbackX = overlayX = originX === 'end' ? 'start' : 'end';\n            offsetY = overlayY === 'bottom' ? MENU_PANEL_TOP_PADDING : -MENU_PANEL_TOP_PADDING;\n        }\n        else if (!this.menu.overlapTrigger) {\n            originY = overlayY === 'top' ? 'bottom' : 'top';\n            originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n        }\n        positionStrategy.withPositions([\n            { originX: originX, originY: originY, overlayX: overlayX, overlayY: overlayY, offsetY: offsetY },\n            { originX: originFallbackX, originY: originY, overlayX: overlayFallbackX, overlayY: overlayY, offsetY: offsetY },\n            {\n                originX: originX,\n                originY: originFallbackY,\n                overlayX: overlayX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            },\n            {\n                originX: originFallbackX,\n                originY: originFallbackY,\n                overlayX: overlayFallbackX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            }\n        ]);\n    };\n    /**\n     * Cleans up the active subscriptions.\n     * @return {?}\n     */\n    MatMenuTrigger.prototype._cleanUpSubscriptions = /**\n     * Cleans up the active subscriptions.\n     * @return {?}\n     */\n    function () {\n        this._closeSubscription.unsubscribe();\n        this._hoverSubscription.unsubscribe();\n    };\n    /**\n     * Returns a stream that emits whenever an action that should close the menu occurs.\n     * @return {?}\n     */\n    MatMenuTrigger.prototype._menuClosingActions = /**\n     * Returns a stream that emits whenever an action that should close the menu occurs.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ backdrop = /** @type {?} */ ((this._overlayRef)).backdropClick();\n        var /** @type {?} */ detachments = /** @type {?} */ ((this._overlayRef)).detachments();\n        var /** @type {?} */ parentClose = this._parentMenu ? this._parentMenu.closed : of();\n        var /** @type {?} */ hover = this._parentMenu ? this._parentMenu._hovered().pipe(filter(function (active) { return active !== _this._menuItemInstance; }), filter(function () { return _this._menuOpen; })) : of();\n        return merge(backdrop, parentClose, hover, detachments);\n    };\n    /** Handles mouse presses on the trigger. */\n    /**\n     * Handles mouse presses on the trigger.\n     * @param {?} event\n     * @return {?}\n     */\n    MatMenuTrigger.prototype._handleMousedown = /**\n     * Handles mouse presses on the trigger.\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        if (!isFakeMousedownFromScreenReader(event)) {\n            this._openedByMouse = true;\n            // Since clicking on the trigger won't close the menu if it opens a sub-menu,\n            // we should prevent focus from moving onto it via click to avoid the\n            // highlight from lingering on the menu item.\n            if (this.triggersSubmenu()) {\n                event.preventDefault();\n            }\n        }\n    };\n    /** Handles key presses on the trigger. */\n    /**\n     * Handles key presses on the trigger.\n     * @param {?} event\n     * @return {?}\n     */\n    MatMenuTrigger.prototype._handleKeydown = /**\n     * Handles key presses on the trigger.\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        var /** @type {?} */ keyCode = event.keyCode;\n        if (this.triggersSubmenu() && ((keyCode === RIGHT_ARROW && this.dir === 'ltr') ||\n            (keyCode === LEFT_ARROW && this.dir === 'rtl'))) {\n            this.openMenu();\n        }\n    };\n    /** Handles click events on the trigger. */\n    /**\n     * Handles click events on the trigger.\n     * @param {?} event\n     * @return {?}\n     */\n    MatMenuTrigger.prototype._handleClick = /**\n     * Handles click events on the trigger.\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        if (this.triggersSubmenu()) {\n            // Stop event propagation to avoid closing the parent menu.\n            event.stopPropagation();\n            this.openMenu();\n        }\n        else {\n            this.toggleMenu();\n        }\n    };\n    /**\n     * Handles the cases where the user hovers over the trigger.\n     * @return {?}\n     */\n    MatMenuTrigger.prototype._handleHover = /**\n     * Handles the cases where the user hovers over the trigger.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // Subscribe to changes in the hovered item in order to toggle the panel.\n        if (!this.triggersSubmenu()) {\n            return;\n        }\n        this._hoverSubscription = this._parentMenu._hovered()\n            .pipe(filter(function (active) { return active === _this._menuItemInstance && !active.disabled; }), delay(0, asapScheduler))\n            .subscribe(function () {\n            _this._openedByMouse = true;\n            // If the same menu is used between multiple triggers, it might still be animating\n            // while the new trigger tries to re-open it. Wait for the animation to finish\n            // before doing so. Also interrupt if the user moves to another item.\n            if (_this.menu instanceof MatMenu && _this.menu._isAnimating) {\n                _this.menu._animationDone\n                    .pipe(take(1), takeUntil(_this._parentMenu._hovered()))\n                    .subscribe(function () { return _this.openMenu(); });\n            }\n            else {\n                _this.openMenu();\n            }\n        });\n    };\n    MatMenuTrigger.decorators = [\n        { type: Directive, args: [{\n                    selector: \"[mat-menu-trigger-for], [matMenuTriggerFor]\",\n                    host: {\n                        'aria-haspopup': 'true',\n                        '[attr.aria-expanded]': 'menuOpen || null',\n                        '(mousedown)': '_handleMousedown($event)',\n                        '(keydown)': '_handleKeydown($event)',\n                        '(click)': '_handleClick($event)',\n                    },\n                    exportAs: 'matMenuTrigger'\n                },] },\n    ];\n    /** @nocollapse */\n    MatMenuTrigger.ctorParameters = function () { return [\n        { type: Overlay, },\n        { type: ElementRef, },\n        { type: ViewContainerRef, },\n        { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_SCROLL_STRATEGY,] },] },\n        { type: MatMenu, decorators: [{ type: Optional },] },\n        { type: MatMenuItem, decorators: [{ type: Optional }, { type: Self },] },\n        { type: Directionality, decorators: [{ type: Optional },] },\n        { type: FocusMonitor, },\n    ]; };\n    MatMenuTrigger.propDecorators = {\n        \"_deprecatedMatMenuTriggerFor\": [{ type: Input, args: ['mat-menu-trigger-for',] },],\n        \"menu\": [{ type: Input, args: ['matMenuTriggerFor',] },],\n        \"menuData\": [{ type: Input, args: ['matMenuTriggerData',] },],\n        \"menuOpened\": [{ type: Output },],\n        \"onMenuOpen\": [{ type: Output },],\n        \"menuClosed\": [{ type: Output },],\n        \"onMenuClose\": [{ type: Output },],\n    };\n    return MatMenuTrigger;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar MatMenuModule = /** @class */ (function () {\n    function MatMenuModule() {\n    }\n    MatMenuModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [\n                        CommonModule,\n                        MatCommonModule,\n                        MatRippleModule,\n                        OverlayModule,\n                    ],\n                    exports: [MatMenu, MatMenuItem, MatMenuTrigger, MatMenuContent, MatCommonModule],\n                    declarations: [MatMenu, MatMenuItem, MatMenuTrigger, MatMenuContent],\n                    providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER]\n                },] },\n    ];\n    return MatMenuModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nexport { MAT_MENU_SCROLL_STRATEGY, MatMenuModule, MatMenu, MAT_MENU_DEFAULT_OPTIONS, MatMenuItem, MatMenuTrigger, matMenuAnimations, fadeInItems, transformMenu, MatMenuContent, MAT_MENU_DEFAULT_OPTIONS_FACTORY as ɵa23, MatMenuItemBase as ɵb23, _MatMenuItemMixinBase as ɵc23, MAT_MENU_PANEL as ɵf23, MAT_MENU_SCROLL_STRATEGY_FACTORY as ɵd23, MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER as ɵe23 };\n//# sourceMappingURL=menu.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { __extends } from 'tslib';\nimport { ChangeDetectionStrategy, Component, ContentChildren, Directive, ElementRef, isDevMode, ViewEncapsulation, Inject, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { Platform } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@docs-private\n */\nvar  /**\n * \\@docs-private\n */\nMatToolbarBase = /** @class */ (function () {\n    function MatToolbarBase(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n    return MatToolbarBase;\n}());\nvar /** @type {?} */ _MatToolbarMixinBase = mixinColor(MatToolbarBase);\nvar MatToolbarRow = /** @class */ (function () {\n    function MatToolbarRow() {\n    }\n    MatToolbarRow.decorators = [\n        { type: Directive, args: [{\n                    selector: 'mat-toolbar-row',\n                    exportAs: 'matToolbarRow',\n                    host: { 'class': 'mat-toolbar-row' },\n                },] },\n    ];\n    return MatToolbarRow;\n}());\nvar MatToolbar = /** @class */ (function (_super) {\n    __extends(MatToolbar, _super);\n    function MatToolbar(elementRef, _platform, document) {\n        var _this = _super.call(this, elementRef) || this;\n        _this._platform = _platform;\n        // TODO: make the document a required param when doing breaking changes.\n        // TODO: make the document a required param when doing breaking changes.\n        _this._document = document;\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    MatToolbar.prototype.ngAfterViewInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (!isDevMode() || !this._platform.isBrowser) {\n            return;\n        }\n        this._checkToolbarMixedModes();\n        this._toolbarRows.changes.subscribe(function () { return _this._checkToolbarMixedModes(); });\n    };\n    /**\n     * Throws an exception when developers are attempting to combine the different toolbar row modes.\n     * @return {?}\n     */\n    MatToolbar.prototype._checkToolbarMixedModes = /**\n     * Throws an exception when developers are attempting to combine the different toolbar row modes.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (!this._toolbarRows.length) {\n            return;\n        }\n        // Check if there are any other DOM nodes that can display content but aren't inside of\n        // a <mat-toolbar-row> element.\n        var /** @type {?} */ isCombinedUsage = [].slice.call(this._elementRef.nativeElement.childNodes)\n            .filter(function (node) { return !(node.classList && node.classList.contains('mat-toolbar-row')); })\n            .filter(function (node) { return node.nodeType !== (_this._document ? _this._document.COMMENT_NODE : 8); })\n            .some(function (node) { return node.textContent.trim(); });\n        if (isCombinedUsage) {\n            throwToolbarMixedModesError();\n        }\n    };\n    MatToolbar.decorators = [\n        { type: Component, args: [{selector: 'mat-toolbar',\n                    exportAs: 'matToolbar',\n                    template: \"<ng-content></ng-content><ng-content select=\\\"mat-toolbar-row\\\"></ng-content>\",\n                    styles: [\"@media screen and (-ms-high-contrast:active){.mat-toolbar{outline:solid 1px}}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}.mat-toolbar-multiple-rows{min-height:64px}.mat-toolbar-row,.mat-toolbar-single-row{height:64px}@media (max-width:599px){.mat-toolbar-multiple-rows{min-height:56px}.mat-toolbar-row,.mat-toolbar-single-row{height:56px}}\"],\n                    inputs: ['color'],\n                    host: {\n                        'class': 'mat-toolbar',\n                        '[class.mat-toolbar-multiple-rows]': 'this._toolbarRows.length',\n                        '[class.mat-toolbar-single-row]': '!this._toolbarRows.length'\n                    },\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                },] },\n    ];\n    /** @nocollapse */\n    MatToolbar.ctorParameters = function () { return [\n        { type: ElementRef, },\n        { type: Platform, },\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] },] },\n    ]; };\n    MatToolbar.propDecorators = {\n        \"_toolbarRows\": [{ type: ContentChildren, args: [MatToolbarRow,] },],\n    };\n    return MatToolbar;\n}(_MatToolbarMixinBase));\n/**\n * Throws an exception when attempting to combine the different toolbar row modes.\n * \\@docs-private\n * @return {?}\n */\nfunction throwToolbarMixedModesError() {\n    throw Error('MatToolbar: Attempting to combine different toolbar modes. ' +\n        'Either specify multiple `<mat-toolbar-row>` elements explicitly or just place content ' +\n        'inside of a `<mat-toolbar>` for a single row.');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar MatToolbarModule = /** @class */ (function () {\n    function MatToolbarModule() {\n    }\n    MatToolbarModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatToolbar, MatToolbarRow, MatCommonModule],\n                    declarations: [MatToolbar, MatToolbarRow],\n                },] },\n    ];\n    return MatToolbarModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nexport { MatToolbarModule, MatToolbarBase, _MatToolbarMixinBase, MatToolbarRow, MatToolbar, throwToolbarMixedModesError };\n//# sourceMappingURL=toolbar.es5.js.map\n"],"sourceRoot":""}